:orphan:

:py:mod:`neural_compressor.experimental.data.dataloaders.onnxrt_dataloader`
===========================================================================

.. py:module:: neural_compressor.experimental.data.dataloaders.onnxrt_dataloader


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.experimental.data.dataloaders.onnxrt_dataloader.ONNXRTBertDataLoader
   neural_compressor.experimental.data.dataloaders.onnxrt_dataloader.ONNXRTDataLoader




.. py:class:: ONNXRTBertDataLoader(dataset, batch_size=1, last_batch='rollover', collate_fn=None, sampler=None, batch_sampler=None, num_workers=0, pin_memory=False, shuffle=False, distributed=False)

   Bases: :py:obj:`neural_compressor.experimental.data.dataloaders.default_dataloader.DefaultDataLoader`

   DefaultDataLoader




.. py:class:: ONNXRTDataLoader(dataset, batch_size=1, last_batch='rollover', collate_fn=None, sampler=None, batch_sampler=None, num_workers=0, pin_memory=False, shuffle=False, distributed=False)

   Bases: :py:obj:`neural_compressor.experimental.data.dataloaders.base_dataloader.BaseDataLoader`

   Base class for all DataLoaders. _generate_dataloader is needed to create a dataloader object
   from the general params like batch_size and sampler. The dynamic batching is just to
   generate a new dataloader by setting batch_size and last_batch.



