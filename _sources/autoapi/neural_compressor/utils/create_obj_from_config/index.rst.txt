:orphan:

:py:mod:`neural_compressor.utils.create_obj_from_config`
========================================================

.. py:module:: neural_compressor.utils.create_obj_from_config


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   neural_compressor.utils.create_obj_from_config.create_eval_func
   neural_compressor.utils.create_obj_from_config.create_train_func



.. py:function:: create_eval_func(framework, dataloader, adaptor, metric, postprocess_cfg=None, iteration=-1, tensorboard=False, fp32_baseline=False)

   The interface to create evaluate function from config.

   :param model: The model to be evaluated.
   :type model: object

   :returns: The objective value evaluated
   :rtype: Objective


.. py:function:: create_train_func(framework, dataloader, adaptor, train_cfg, hooks=None, callbacks=None)

   The interface to create train function from config.

   :param framework: The string of framework.
   :type framework: str
   :param dataloader: The object of common.DataLoader.
   :type dataloader: common.DataLoader
   :param adaptor: The object of adaptor.
   :type adaptor: obj
   :param train_cfg: The dict of training related config.
   :type train_cfg: dict
   :param hooks: The dict of training hooks, supported keys are:
                 on_epoch_begin, on_epoch_end, on_step_begin, on_step_end.
                 Their values are functions to be executed in adaptor layer.
   :type hooks: dict

   :returns: The constructed train function


