:py:mod:`neural_compressor.utils.utility`
=========================================

.. py:module:: neural_compressor.utils.utility

.. autoapi-nested-parse::

   quantization auto-tuning config system.

   This file specifies default config options for quantization auto-tuning tool.
   User should not change values in this file. Instead, user should write a config
   file (in yaml) and use cfg_from_file(yaml_file) to load it and override the default
   options.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.utils.utility.LazyImport
   neural_compressor.utils.utility.MODE



Functions
~~~~~~~~~

.. autoapisummary::

   neural_compressor.utils.utility.get_size
   neural_compressor.utils.utility.equal_dicts
   neural_compressor.utils.utility.dump_elapsed_time
   neural_compressor.utils.utility.combine_histogram
   neural_compressor.utils.utility.get_tuning_history
   neural_compressor.utils.utility.recover
   neural_compressor.utils.utility.load_data_from_pkl
   neural_compressor.utils.utility.dump_data_to_local



.. py:class:: LazyImport(module_name)

   Bases: :py:obj:`object`

   Lazy import python module till use

   :param module_name: The name of module imported later
   :type module_name: string


.. py:function:: get_size(obj, seen=None)

   Recursively finds size of objects


.. py:function:: equal_dicts(d1, d2, compare_keys=None, ignore_keys=None)

   Check whether two dicts are same except for those ignored keys.



.. py:function:: dump_elapsed_time(customized_msg='')

   Get the elapsed time for decorated functions.

   :param customized_msg: the parameter passed to decorator. Defaults to None.
   :type customized_msg: string, optional


.. py:function:: combine_histogram(old_hist, arr)

   Collect layer histogram for arr and combine it with old histogram.



.. py:function:: get_tuning_history(tuning_history_path)

   :params tuning_history_path: need user to assign


.. py:function:: recover(fp32_model, tuning_history_path, num, **kwargs)

   offline recover tuned model.

   :params fp32_model: input model path
   :params tuning_history_path: need user to assign
   :params num: tune index


.. py:class:: MODE

   Bases: :py:obj:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


.. py:function:: load_data_from_pkl(path, filename)

   load data from local pkl file
   :param path: the directory to load data
   :param filename: filename to load

   :returns: None


.. py:function:: dump_data_to_local(data, path, filename)

   Dump data to local as pkl file
   :param data: data used to dump
   :param path: the directory to save data
   :param filename: filename to dump

   :returns: loaded data


