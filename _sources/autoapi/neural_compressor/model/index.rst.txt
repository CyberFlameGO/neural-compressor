:orphan:

:py:mod:`neural_compressor.model`
=================================

.. py:module:: neural_compressor.model


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.model.Model
   neural_compressor.model.BaseModel




Attributes
~~~~~~~~~~

.. autoapisummary::

   neural_compressor.model.MODELS



.. py:class:: Model

   Bases: :py:obj:`object`

   A wrapper of the information needed to construct a Model.


.. py:class:: BaseModel(model, **kwargs)

   base class of all neural_compressor.model, will play graph role

   .. py:property:: model
      :abstractmethod:

      return model itself

   .. py:property:: graph_info
      :abstractmethod:

      'conv2d'}

      :type: return {Node

      :type: Node_type} like {'conv0'

   .. py:method:: save(root, *args, **kwargs)
      :abstractmethod:

      abstract method of model saving


   .. py:method:: export(save_path: str, conf)
      :abstractmethod:

      abstract method of model convertion to ONNX


   .. py:method:: framework()
      :abstractmethod:

      abstract method of model framework



