:orphan:

:py:mod:`neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq`
============================================================================

.. py:module:: neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq.OptimizeQDQGraph




.. py:class:: OptimizeQDQGraph(input_graph, input_node_names, output_node_names, op_wise_config, op_wise_sequences, device, fake_quant=False, new_api=False, performance_only=False, itex_mode=False)

   Bases: :py:obj:`neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_base.QuantizeGraphBase`

   

   .. py:method:: do_transform()

      This is the virtual interface need to be implemented by derived class
      :return:



