:orphan:

:py:mod:`neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer`
========================================================================================

.. py:module:: neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer.ExpandDimsOptimizer




.. py:class:: ExpandDimsOptimizer(model)

   Bases: :py:obj:`neural_compressor.adaptor.tf_utils.graph_rewriter.graph_base.GraphRewriterBase`

   Graph Rewrite Base class.
   We abstract this base class and define the interface only.

   :param object: the input model to be converted.
   :type object: model

   .. py:method:: do_transformation()

      handle all ExpandDims ops whose input is weight and output is Conv2D

      :param input_graph_def: graphdef object
      :type input_graph_def: graphdef

      :returns: optimized graph
      :rtype: [graphdef]



