trigger: none

pr:
  branches:
    include:
    - master
  paths:
    include:
    - neural_compressor
    exclude:
    - neural_compressor.ux

pool: suyue-test

variables:
  PYTHON: 'python3.8'
  IMAGE_NAME: 'neural-compressor'
  IMAGE_TAG: 'pr'
  tensorflow_version: '2.9.1'
  pytorch_version: '1.11.0+cpu'
  torchvision_version: '0.12.0'
  onnx_version: '1.9.0'
  onnxruntime_version: '1.10.0'
  mxnet_version: '1.7.0'

stages:
- stage:
  displayName: Unit Test FWKs adaptor
  dependsOn: []
  jobs:
  - job:
    variables:
      INC_BRANCH: $(System.PullRequest.SourceBranch)
      REPO: $(Build.Repository.Uri)
    steps:
    - script: |
        docker stop $(docker ps -aq)
        docker rm -vf $(docker ps -aq) || true
        docker image rm neural-compressor:pr || true
        env | sort
      displayName: 'Clean Docker'

    - script: |
        echo ${INC_BRANCH}
        echo ${REPO}
        docker build --build-arg PYTHON=${PYTHON} --build-arg REPO=${REPO} --build-arg SOURCE_BRANCH=${INC_BRANCH} -f ${BUILD_SOURCESDIRECTORY}/.azure-pipelines/docker/Dockerfile-inc.devel -t ${IMAGE_NAME}:${IMAGE_TAG} .
      displayName: 'Build Image'

    - script: |
         docker images | grep -i neural-compressor
      displayName: 'Check docker image'

    - script: |
         docker run --disable-content-trust --privileged --name="pr-test" --hostname="pr-test-container" ${IMAGE_NAME}:${IMAGE_TAG} bash /neural-compressor/.azure-pipelines/scripts/ut/run_basic_adaptor.sh
      displayName: 'Run UT'

#- stage:
#  displayName: Unit Test tf newAPI
#  dependsOn: []
#  jobs:
#  - job:
#    variables:
#      INC_BRANCH: $(System.PullRequest.SourceBranch)
#      REPO: $(Build.Repository.Uri)
#    steps:
#    - script: |
#        docker stop $(docker ps -aq)
#        docker rm -vf $(docker ps -aq) || true
#      displayName: 'Clean Docker'
#
#    - script: |
#        echo ${INC_BRANCH}
#        echo ${REPO}
#        docker build --build-arg PYTHON=${PYTHON} --build-arg REPO=${REPO} --build-arg SOURCE_BRANCH=${INC_BRANCH} -f $BUILD_SOURCESDIRECTORY/.azure-pipelines/docker/Dockerfile-inc.devel -t ${IMAGE_NAME}:${IMAGE_TAG} .
#      displayName: 'Build Image'
#
#    - script: |
#        docker images | grep -i neural-compressor
#      displayName: 'Check docker Image'
#
#    - script: |
#        docker run -tid --disable-content-trust --privileged --name="pr-test" --hostname="pr-test-container" ${IMAGE_NAME}:${IMAGE_TAG} /usr/bin/python /neural-compressor/.azure-pipelines/scripts/ut/run_basic_adaptor_tfnewapi.sh
#      displayName: 'Run UT'
#
#- stage:
#  displayName: Unit Test other basic case
#  dependsOn: []
#  jobs:
#  - job:
#    variables:
#      INC_BRANCH: $(System.PullRequest.SourceBranch)
#      REPO: $(Build.Repository.Uri)
#    steps:
#    - script: |
#        docker stop $(docker ps -aq)
#        docker rm -vf $(docker ps -aq) || true
#      displayName: 'Clean Docker'
#
#    - script: |
#        echo ${INC_BRANCH}
#        echo ${REPO}
#        docker build --build-arg PYTHON=${PYTHON} --build-arg REPO=${REPO} --build-arg SOURCE_BRANCH=${INC_BRANCH} -f $BUILD_SOURCESDIRECTORY/.azure-pipelines/docker/Dockerfile-inc.devel -t ${IMAGE_NAME}:${IMAGE_TAG} .
#      displayName: 'Build Image'
#
#    - script: |
#        docker images | grep -i neural-compressor
#      displayName: 'Check docker Image'
#    - script: |
#       docker run -tid --disable-content-trust --privileged --name="pr-test" --hostname="pr-test-container" ${IMAGE_NAME}:${IMAGE_TAG} /usr/bin/python /neural-compressor/.azure-pipelines/scripts/ut/run_basic_others.sh
#      displayName: 'Run UT'

