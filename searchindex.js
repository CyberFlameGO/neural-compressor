Search.setIndex({docnames:["CODE_OF_CONDUCT","FX","NAS","PTQ","QAT","Quantization","README","adaptor","api-documentation/adaptor","api-documentation/api-introduction","api-documentation/apis","api-documentation/common","api-documentation/common/benchmark","api-documentation/common/bleu","api-documentation/common/criterion","api-documentation/common/data","api-documentation/common/data/dataloader","api-documentation/common/data/datasets","api-documentation/common/data/transforms","api-documentation/common/metric","api-documentation/common/model","api-documentation/common/optimizer","api-documentation/component","api-documentation/component/Distillation","api-documentation/component/MixedPrecision","api-documentation/component/ModelConversion","api-documentation/component/Nas","api-documentation/component/Pruning","api-documentation/component/Quantization","api-documentation/component/Scheduler","api-documentation/pythonic","api-documentation/strategy","api-introduction","autoapi/6ece06672ed3_v1_14/index","autoapi/6f0d0f71d92e_v1_13/index","autoapi/9e89549a08c8_v1_11/index","autoapi/block_mask/index","autoapi/env/index","autoapi/neural_compressor/adaptor/adaptor/index","autoapi/neural_compressor/adaptor/index","autoapi/neural_compressor/adaptor/mxnet/index","autoapi/neural_compressor/adaptor/mxnet_utils/index","autoapi/neural_compressor/adaptor/mxnet_utils/util/index","autoapi/neural_compressor/adaptor/onnxrt/index","autoapi/neural_compressor/adaptor/ox_utils/calibration/index","autoapi/neural_compressor/adaptor/ox_utils/index","autoapi/neural_compressor/adaptor/ox_utils/operators/activation/index","autoapi/neural_compressor/adaptor/ox_utils/operators/argmax/index","autoapi/neural_compressor/adaptor/ox_utils/operators/attention/index","autoapi/neural_compressor/adaptor/ox_utils/operators/binary_op/index","autoapi/neural_compressor/adaptor/ox_utils/operators/concat/index","autoapi/neural_compressor/adaptor/ox_utils/operators/conv/index","autoapi/neural_compressor/adaptor/ox_utils/operators/direct_q8/index","autoapi/neural_compressor/adaptor/ox_utils/operators/embed_layernorm/index","autoapi/neural_compressor/adaptor/ox_utils/operators/gather/index","autoapi/neural_compressor/adaptor/ox_utils/operators/gavgpool/index","autoapi/neural_compressor/adaptor/ox_utils/operators/gemm/index","autoapi/neural_compressor/adaptor/ox_utils/operators/index","autoapi/neural_compressor/adaptor/ox_utils/operators/lstm/index","autoapi/neural_compressor/adaptor/ox_utils/operators/matmul/index","autoapi/neural_compressor/adaptor/ox_utils/operators/maxpool/index","autoapi/neural_compressor/adaptor/ox_utils/operators/ops/index","autoapi/neural_compressor/adaptor/ox_utils/operators/pad/index","autoapi/neural_compressor/adaptor/ox_utils/operators/pooling/index","autoapi/neural_compressor/adaptor/ox_utils/operators/resize/index","autoapi/neural_compressor/adaptor/ox_utils/operators/split/index","autoapi/neural_compressor/adaptor/ox_utils/quantizer/index","autoapi/neural_compressor/adaptor/ox_utils/util/index","autoapi/neural_compressor/adaptor/pytorch/index","autoapi/neural_compressor/adaptor/query/index","autoapi/neural_compressor/adaptor/tensorflow/index","autoapi/neural_compressor/adaptor/tf_utils/graph_converter/index","autoapi/neural_compressor/adaptor/tf_utils/graph_converter_without_calib/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/bf16/bf16_convert/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/bf16/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_add_to_biasadd/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_layout/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_leakyrelu/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_nan_to_random/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_placeholder_to_const/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dequantize_cast_optimizer/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dilated_contraction/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dummy_biasadd/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/expanddims_optimizer/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fetch_weight_from_reshape/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fold_batch_norm/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fold_constant/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_biasadd_add/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_column_wise_mul/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_conv_with_math/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_decomposed_bn/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_decomposed_in/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_gelu/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_layer_norm/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_pad_with_conv/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_pad_with_fp32_conv/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_reshape_transpose/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/graph_cse_optimizer/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/grappler_pass/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/insert_print_node/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/move_squeeze_after_relu/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/pre_optimize/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/remove_training_nodes/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/rename_batch_norm/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/split_shared_input/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/strip_equivalent_nodes/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/strip_unused_nodes/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/switch_optimizer/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/update_enter/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/graph_base/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_fake_quant/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_value/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_value_without_calib/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_conv_redundant_dequantize/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_conv_requantize/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_matmul_redundant_dequantize/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_matmul_requantize/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/meta_op_optimizer/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/post_hostconst_converter/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/post_quantized_op_cse/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/rnn_convert/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/scale_propagation/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/insert_qdq_pattern/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/merge_duplicated_qdq/index","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/share_qdq_y_pattern/index","autoapi/neural_compressor/adaptor/tf_utils/graph_util/index","autoapi/neural_compressor/adaptor/tf_utils/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_bn/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_concatv2/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_conv/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_deconv/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_in/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_matmul/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_pooling/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/optimize_qdq/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_base/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_bn/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_concatv2/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_conv/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_for_intel_cpu/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_matmul/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_pooling/index","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph_common/index","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/bias_correction/index","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/graph_transform_base/index","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/index","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/insert_logging/index","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/rerange_quantized_concat/index","autoapi/neural_compressor/adaptor/tf_utils/util/index","autoapi/neural_compressor/adaptor/torch_utils/bf16_convert/index","autoapi/neural_compressor/adaptor/torch_utils/index","autoapi/neural_compressor/adaptor/torch_utils/onnx/index","autoapi/neural_compressor/adaptor/torch_utils/symbolic_trace/index","autoapi/neural_compressor/adaptor/torch_utils/util/index","autoapi/neural_compressor/algorithm/algorithm/index","autoapi/neural_compressor/algorithm/fast_bias_correction/index","autoapi/neural_compressor/algorithm/index","autoapi/neural_compressor/algorithm/weight_correction/index","autoapi/neural_compressor/benchmark/index","autoapi/neural_compressor/conf/config/index","autoapi/neural_compressor/conf/dotdict/index","autoapi/neural_compressor/conf/index","autoapi/neural_compressor/conf/pythonic_config/index","autoapi/neural_compressor/contrib/index","autoapi/neural_compressor/contrib/strategy/index","autoapi/neural_compressor/contrib/strategy/sigopt/index","autoapi/neural_compressor/contrib/strategy/tpe/index","autoapi/neural_compressor/data/dataloaders/dataloader/index","autoapi/neural_compressor/data/dataloaders/index","autoapi/neural_compressor/data/datasets/imagenet_dataset/index","autoapi/neural_compressor/data/datasets/index","autoapi/neural_compressor/data/index","autoapi/neural_compressor/data/transforms/coco_transform/index","autoapi/neural_compressor/data/transforms/imagenet_transform/index","autoapi/neural_compressor/data/transforms/index","autoapi/neural_compressor/experimental/benchmark/index","autoapi/neural_compressor/experimental/common/criterion/index","autoapi/neural_compressor/experimental/common/dataloader/index","autoapi/neural_compressor/experimental/common/index","autoapi/neural_compressor/experimental/common/metric/index","autoapi/neural_compressor/experimental/common/model/index","autoapi/neural_compressor/experimental/common/optimizer/index","autoapi/neural_compressor/experimental/common/postprocess/index","autoapi/neural_compressor/experimental/common/torch_utils/index","autoapi/neural_compressor/experimental/component/index","autoapi/neural_compressor/experimental/data/dataloaders/base_dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/default_dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/fetcher/index","autoapi/neural_compressor/experimental/data/dataloaders/index","autoapi/neural_compressor/experimental/data/dataloaders/mxnet_dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/onnxrt_dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/pytorch_dataloader/index","autoapi/neural_compressor/experimental/data/dataloaders/sampler/index","autoapi/neural_compressor/experimental/data/dataloaders/tensorflow_dataloader/index","autoapi/neural_compressor/experimental/data/datasets/bert_dataset/index","autoapi/neural_compressor/experimental/data/datasets/coco_dataset/index","autoapi/neural_compressor/experimental/data/datasets/dataset/index","autoapi/neural_compressor/experimental/data/datasets/dummy_dataset/index","autoapi/neural_compressor/experimental/data/datasets/dummy_dataset_v2/index","autoapi/neural_compressor/experimental/data/datasets/imagenet_dataset/index","autoapi/neural_compressor/experimental/data/datasets/index","autoapi/neural_compressor/experimental/data/datasets/style_transfer_dataset/index","autoapi/neural_compressor/experimental/data/filters/coco_filter/index","autoapi/neural_compressor/experimental/data/filters/filter/index","autoapi/neural_compressor/experimental/data/filters/index","autoapi/neural_compressor/experimental/data/index","autoapi/neural_compressor/experimental/data/transforms/imagenet_transform/index","autoapi/neural_compressor/experimental/data/transforms/index","autoapi/neural_compressor/experimental/data/transforms/tokenization/index","autoapi/neural_compressor/experimental/data/transforms/transform/index","autoapi/neural_compressor/experimental/distillation/index","autoapi/neural_compressor/experimental/graph_optimization/index","autoapi/neural_compressor/experimental/index","autoapi/neural_compressor/experimental/metric/bleu/index","autoapi/neural_compressor/experimental/metric/bleu_util/index","autoapi/neural_compressor/experimental/metric/coco_label_map/index","autoapi/neural_compressor/experimental/metric/coco_tools/index","autoapi/neural_compressor/experimental/metric/evaluate_squad/index","autoapi/neural_compressor/experimental/metric/f1/index","autoapi/neural_compressor/experimental/metric/index","autoapi/neural_compressor/experimental/metric/metric/index","autoapi/neural_compressor/experimental/mixed_precision/index","autoapi/neural_compressor/experimental/model_conversion/index","autoapi/neural_compressor/experimental/nas/basic_nas/index","autoapi/neural_compressor/experimental/nas/dynas/index","autoapi/neural_compressor/experimental/nas/dynast/dynas_manager/index","autoapi/neural_compressor/experimental/nas/dynast/dynas_predictor/index","autoapi/neural_compressor/experimental/nas/dynast/dynas_search/index","autoapi/neural_compressor/experimental/nas/dynast/dynas_utils/index","autoapi/neural_compressor/experimental/nas/dynast/index","autoapi/neural_compressor/experimental/nas/index","autoapi/neural_compressor/experimental/nas/nas/index","autoapi/neural_compressor/experimental/nas/nas_utils/index","autoapi/neural_compressor/experimental/nas/search_algorithms/index","autoapi/neural_compressor/experimental/pruning/index","autoapi/neural_compressor/experimental/pruning_recipes/index","autoapi/neural_compressor/experimental/pruning_recipes/patterns/index","autoapi/neural_compressor/experimental/pruning_recipes/patterns/pattern/index","autoapi/neural_compressor/experimental/pruning_recipes/patterns/tile_pattern/index","autoapi/neural_compressor/experimental/pytorch_pruner/index","autoapi/neural_compressor/experimental/pytorch_pruner/logger/index","autoapi/neural_compressor/experimental/pytorch_pruner/patterns/index","autoapi/neural_compressor/experimental/pytorch_pruner/prune_utils/index","autoapi/neural_compressor/experimental/pytorch_pruner/pruner/index","autoapi/neural_compressor/experimental/pytorch_pruner/pruning/index","autoapi/neural_compressor/experimental/pytorch_pruner/scheduler/index","autoapi/neural_compressor/experimental/quantization/index","autoapi/neural_compressor/experimental/scheduler/index","autoapi/neural_compressor/index","autoapi/neural_compressor/metric/index","autoapi/neural_compressor/mix_precision/index","autoapi/neural_compressor/model/base_model/index","autoapi/neural_compressor/model/index","autoapi/neural_compressor/model/model/index","autoapi/neural_compressor/model/nets_factory/index","autoapi/neural_compressor/model/onnx_model/index","autoapi/neural_compressor/model/torch_model/index","autoapi/neural_compressor/objective/index","autoapi/neural_compressor/pruners/gradient_sensitivity/index","autoapi/neural_compressor/pruners/group_lasso/index","autoapi/neural_compressor/pruners/index","autoapi/neural_compressor/pruners/magnitude/index","autoapi/neural_compressor/pruners/pattern_lock/index","autoapi/neural_compressor/pruners/pruner/index","autoapi/neural_compressor/pruning/index","autoapi/neural_compressor/quantization/index","autoapi/neural_compressor/strategy/auto_mixed_precision/index","autoapi/neural_compressor/strategy/basic/index","autoapi/neural_compressor/strategy/bayesian/index","autoapi/neural_compressor/strategy/exhaustive/index","autoapi/neural_compressor/strategy/index","autoapi/neural_compressor/strategy/mse/index","autoapi/neural_compressor/strategy/random/index","autoapi/neural_compressor/strategy/st_utils/index","autoapi/neural_compressor/strategy/st_utils/tuning_sampler/index","autoapi/neural_compressor/strategy/st_utils/tuning_space/index","autoapi/neural_compressor/strategy/st_utils/tuning_structs/index","autoapi/neural_compressor/strategy/strategy/index","autoapi/neural_compressor/training/index","autoapi/neural_compressor/utils/collect_layer_histogram/index","autoapi/neural_compressor/utils/constant/index","autoapi/neural_compressor/utils/create_obj_from_config/index","autoapi/neural_compressor/utils/index","autoapi/neural_compressor/utils/kl_divergence/index","autoapi/neural_compressor/utils/load_huggingface/index","autoapi/neural_compressor/utils/logger/index","autoapi/neural_compressor/utils/options/index","autoapi/neural_compressor/utils/pytorch/index","autoapi/neural_compressor/utils/utility/index","autoapi/neural_compressor/ux/components/benchmark/benchmark/index","autoapi/neural_compressor/ux/components/benchmark/benchmark_model/index","autoapi/neural_compressor/ux/components/benchmark/execute_benchmark/index","autoapi/neural_compressor/ux/components/benchmark/index","autoapi/neural_compressor/ux/components/config_generator/benchmark_config_generator/index","autoapi/neural_compressor/ux/components/config_generator/config_generator/index","autoapi/neural_compressor/ux/components/config_generator/graph_optimization_config_generator/index","autoapi/neural_compressor/ux/components/config_generator/index","autoapi/neural_compressor/ux/components/config_generator/mixed_precision_config_generator/index","autoapi/neural_compressor/ux/components/config_generator/profiling_config_generator/index","autoapi/neural_compressor/ux/components/config_generator/quantization_config_generator/index","autoapi/neural_compressor/ux/components/configuration_wizard/configuration_parser/index","autoapi/neural_compressor/ux/components/configuration_wizard/get_boundary_nodes/index","autoapi/neural_compressor/ux/components/configuration_wizard/get_configuration/index","autoapi/neural_compressor/ux/components/configuration_wizard/index","autoapi/neural_compressor/ux/components/configuration_wizard/params_feeder/index","autoapi/neural_compressor/ux/components/db_manager/db_manager/index","autoapi/neural_compressor/ux/components/db_manager/db_models/benchmark/index","autoapi/neural_compressor/ux/components/db_manager/db_models/benchmark_result/index","autoapi/neural_compressor/ux/components/db_manager/db_models/dataloader/index","autoapi/neural_compressor/ux/components/db_manager/db_models/dataset/index","autoapi/neural_compressor/ux/components/db_manager/db_models/domain/index","autoapi/neural_compressor/ux/components/db_manager/db_models/domain_flavour/index","autoapi/neural_compressor/ux/components/db_manager/db_models/example/index","autoapi/neural_compressor/ux/components/db_manager/db_models/framework/index","autoapi/neural_compressor/ux/components/db_manager/db_models/index","autoapi/neural_compressor/ux/components/db_manager/db_models/metric/index","autoapi/neural_compressor/ux/components/db_manager/db_models/model/index","autoapi/neural_compressor/ux/components/db_manager/db_models/optimization/index","autoapi/neural_compressor/ux/components/db_manager/db_models/optimization_type/index","autoapi/neural_compressor/ux/components/db_manager/db_models/precision/index","autoapi/neural_compressor/ux/components/db_manager/db_models/profiling/index","autoapi/neural_compressor/ux/components/db_manager/db_models/profiling_result/index","autoapi/neural_compressor/ux/components/db_manager/db_models/project/index","autoapi/neural_compressor/ux/components/db_manager/db_models/transform/index","autoapi/neural_compressor/ux/components/db_manager/db_models/tuning_details/index","autoapi/neural_compressor/ux/components/db_manager/db_models/tuning_history/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/benchmark_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/dataset_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/db_operations/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/diagnosis_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/dictionaries_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/examples_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/model_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/optimization_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/profiling_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/db_operations/project_api_interface/index","autoapi/neural_compressor/ux/components/db_manager/index","autoapi/neural_compressor/ux/components/db_manager/params_interfaces/index","autoapi/neural_compressor/ux/components/db_manager/utils/index","autoapi/neural_compressor/ux/components/diagnosis/diagnosis/index","autoapi/neural_compressor/ux/components/diagnosis/factory/index","autoapi/neural_compressor/ux/components/diagnosis/index","autoapi/neural_compressor/ux/components/diagnosis/onnx_diagnosis/index","autoapi/neural_compressor/ux/components/diagnosis/onnx_diagnosis/onnxrt_diagnosis/index","autoapi/neural_compressor/ux/components/diagnosis/op_details/index","autoapi/neural_compressor/ux/components/diagnosis/op_entry/index","autoapi/neural_compressor/ux/components/diagnosis/tensorflow_diagnosis/index","autoapi/neural_compressor/ux/components/diagnosis/tensorflow_diagnosis/tensorflow_diagnosis/index","autoapi/neural_compressor/ux/components/file_browser/file_browser/index","autoapi/neural_compressor/ux/components/file_browser/index","autoapi/neural_compressor/ux/components/graph/attribute/index","autoapi/neural_compressor/ux/components/graph/collapser/index","autoapi/neural_compressor/ux/components/graph/edge/index","autoapi/neural_compressor/ux/components/graph/graph/index","autoapi/neural_compressor/ux/components/graph/graph_reader/index","autoapi/neural_compressor/ux/components/graph/index","autoapi/neural_compressor/ux/components/graph/node/index","autoapi/neural_compressor/ux/components/graph/reader/index","autoapi/neural_compressor/ux/components/graph/reader/onnxrt_reader/index","autoapi/neural_compressor/ux/components/graph/reader/tensorflow_reader/index","autoapi/neural_compressor/ux/components/index","autoapi/neural_compressor/ux/components/jobs_management/index","autoapi/neural_compressor/ux/components/jobs_management/jobs_control_queue/index","autoapi/neural_compressor/ux/components/jobs_management/jobs_manager/index","autoapi/neural_compressor/ux/components/jobs_management/request/index","autoapi/neural_compressor/ux/components/manage_workspace/index","autoapi/neural_compressor/ux/components/model/domain/index","autoapi/neural_compressor/ux/components/model/index","autoapi/neural_compressor/ux/components/model/model/index","autoapi/neural_compressor/ux/components/model/model_type_getter/index","autoapi/neural_compressor/ux/components/model/onnxrt/index","autoapi/neural_compressor/ux/components/model/onnxrt/model/index","autoapi/neural_compressor/ux/components/model/pytorch/index","autoapi/neural_compressor/ux/components/model/pytorch/model/index","autoapi/neural_compressor/ux/components/model/repository/index","autoapi/neural_compressor/ux/components/model/shape/index","autoapi/neural_compressor/ux/components/model/tensorflow/frozen_pb/index","autoapi/neural_compressor/ux/components/model/tensorflow/index","autoapi/neural_compressor/ux/components/model/tensorflow/keras/index","autoapi/neural_compressor/ux/components/model/tensorflow/meta_graph/index","autoapi/neural_compressor/ux/components/model/tensorflow/model/index","autoapi/neural_compressor/ux/components/model/tensorflow/saved_model/index","autoapi/neural_compressor/ux/components/model/tensorflow/utils/index","autoapi/neural_compressor/ux/components/model_zoo/download_config/index","autoapi/neural_compressor/ux/components/model_zoo/download_model/index","autoapi/neural_compressor/ux/components/model_zoo/downloader/index","autoapi/neural_compressor/ux/components/model_zoo/index","autoapi/neural_compressor/ux/components/model_zoo/list_models/index","autoapi/neural_compressor/ux/components/names_mapper/index","autoapi/neural_compressor/ux/components/names_mapper/names_mapper/index","autoapi/neural_compressor/ux/components/optimization/execute_optimization/index","autoapi/neural_compressor/ux/components/optimization/factory/index","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/graph_optimization/index","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/index","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/optimize_model/index","autoapi/neural_compressor/ux/components/optimization/index","autoapi/neural_compressor/ux/components/optimization/mixed_precision/index","autoapi/neural_compressor/ux/components/optimization/mixed_precision/mixed_precision/index","autoapi/neural_compressor/ux/components/optimization/mixed_precision/optimize_model/index","autoapi/neural_compressor/ux/components/optimization/neural_coder_optimization/index","autoapi/neural_compressor/ux/components/optimization/neural_coder_optimization/optimize_model/index","autoapi/neural_compressor/ux/components/optimization/optimization/index","autoapi/neural_compressor/ux/components/optimization/tune/index","autoapi/neural_compressor/ux/components/optimization/tune/tune_model/index","autoapi/neural_compressor/ux/components/optimization/tune/tuning/index","autoapi/neural_compressor/ux/components/optimization/tuning_history/index","autoapi/neural_compressor/ux/components/profiling/execute_profiling/index","autoapi/neural_compressor/ux/components/profiling/factory/index","autoapi/neural_compressor/ux/components/profiling/index","autoapi/neural_compressor/ux/components/profiling/profile_model/index","autoapi/neural_compressor/ux/components/profiling/profiler/index","autoapi/neural_compressor/ux/components/profiling/profiling/index","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/factory/index","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/index","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/profiler/index","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/utils/index","autoapi/neural_compressor/ux/inc_bench/index","autoapi/neural_compressor/ux/index","autoapi/neural_compressor/ux/utils/consts/index","autoapi/neural_compressor/ux/utils/environment/index","autoapi/neural_compressor/ux/utils/exceptions/index","autoapi/neural_compressor/ux/utils/executor/index","autoapi/neural_compressor/ux/utils/expiring_dict/index","autoapi/neural_compressor/ux/utils/github_info/index","autoapi/neural_compressor/ux/utils/hw_info/index","autoapi/neural_compressor/ux/utils/index","autoapi/neural_compressor/ux/utils/json_serializer/index","autoapi/neural_compressor/ux/utils/logger/index","autoapi/neural_compressor/ux/utils/parser/index","autoapi/neural_compressor/ux/utils/proc/index","autoapi/neural_compressor/ux/utils/processes/index","autoapi/neural_compressor/ux/utils/singleton/index","autoapi/neural_compressor/ux/utils/templates/index","autoapi/neural_compressor/ux/utils/templates/metric/index","autoapi/neural_compressor/ux/utils/templates/workdir/index","autoapi/neural_compressor/ux/utils/utils/index","autoapi/neural_compressor/ux/utils/workload/config/index","autoapi/neural_compressor/ux/utils/workload/dataloader/index","autoapi/neural_compressor/ux/utils/workload/evaluation/index","autoapi/neural_compressor/ux/utils/workload/graph_optimization/index","autoapi/neural_compressor/ux/utils/workload/index","autoapi/neural_compressor/ux/utils/workload/mixed_precision/index","autoapi/neural_compressor/ux/utils/workload/model/index","autoapi/neural_compressor/ux/utils/workload/pruning/index","autoapi/neural_compressor/ux/utils/workload/quantization/index","autoapi/neural_compressor/ux/utils/workload/tuning/index","autoapi/neural_compressor/ux/utils/yaml_utils/index","autoapi/neural_compressor/ux/web/communication/index","autoapi/neural_compressor/ux/web/configuration/index","autoapi/neural_compressor/ux/web/exceptions/index","autoapi/neural_compressor/ux/web/index","autoapi/neural_compressor/ux/web/router/index","autoapi/neural_compressor/ux/web/server/index","autoapi/neural_compressor/ux/web/service/benchmark/index","autoapi/neural_compressor/ux/web/service/history_snapshot_parser/index","autoapi/neural_compressor/ux/web/service/index","autoapi/neural_compressor/ux/web/service/model/index","autoapi/neural_compressor/ux/web/service/optimization/index","autoapi/neural_compressor/ux/web/service/profiling/index","autoapi/neural_compressor/ux/web/service/request_data_processor/index","autoapi/neural_compressor/ux/web/service/response_generator/index","autoapi/neural_compressor/ux/web/service/workload/index","autoapi/neural_compressor/version/index","backend_quant","bench","benchmark","contributions","dataloader","dataset","design","distillation","distillation_quantization","distributed","doclist","dynamic_quantization","examples_readme","faq","getting_started","graph_optimization","incompatible_changes","index","infrastructure","installation_guide","legal_information","metric","mixed_precision","model","model_conversion","objective","orchestration","platform_configuration","pruning","publication_list","quantization_mixed_precision","reference_examples","releases_info","sigopt_strategy","tensorboard","transform","tuning_strategies","validated_model_list","welcome"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":2,sphinx:56},filenames:["CODE_OF_CONDUCT.md","FX.md","NAS.md","PTQ.md","QAT.md","Quantization.md","README.md","adaptor.md","api-documentation/adaptor.rst","api-documentation/api-introduction.md","api-documentation/apis.rst","api-documentation/common.rst","api-documentation/common/benchmark.rst","api-documentation/common/bleu.rst","api-documentation/common/criterion.rst","api-documentation/common/data.rst","api-documentation/common/data/dataloader.rst","api-documentation/common/data/datasets.rst","api-documentation/common/data/transforms.rst","api-documentation/common/metric.rst","api-documentation/common/model.rst","api-documentation/common/optimizer.rst","api-documentation/component.rst","api-documentation/component/Distillation.rst","api-documentation/component/MixedPrecision.rst","api-documentation/component/ModelConversion.rst","api-documentation/component/Nas.rst","api-documentation/component/Pruning.rst","api-documentation/component/Quantization.rst","api-documentation/component/Scheduler.rst","api-documentation/pythonic.rst","api-documentation/strategy.rst","api-introduction.md","autoapi/6ece06672ed3_v1_14/index.rst","autoapi/6f0d0f71d92e_v1_13/index.rst","autoapi/9e89549a08c8_v1_11/index.rst","autoapi/block_mask/index.rst","autoapi/env/index.rst","autoapi/neural_compressor/adaptor/adaptor/index.rst","autoapi/neural_compressor/adaptor/index.rst","autoapi/neural_compressor/adaptor/mxnet/index.rst","autoapi/neural_compressor/adaptor/mxnet_utils/index.rst","autoapi/neural_compressor/adaptor/mxnet_utils/util/index.rst","autoapi/neural_compressor/adaptor/onnxrt/index.rst","autoapi/neural_compressor/adaptor/ox_utils/calibration/index.rst","autoapi/neural_compressor/adaptor/ox_utils/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/activation/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/argmax/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/attention/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/binary_op/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/concat/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/conv/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/direct_q8/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/embed_layernorm/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/gather/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/gavgpool/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/gemm/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/lstm/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/matmul/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/maxpool/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/ops/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/pad/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/pooling/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/resize/index.rst","autoapi/neural_compressor/adaptor/ox_utils/operators/split/index.rst","autoapi/neural_compressor/adaptor/ox_utils/quantizer/index.rst","autoapi/neural_compressor/adaptor/ox_utils/util/index.rst","autoapi/neural_compressor/adaptor/pytorch/index.rst","autoapi/neural_compressor/adaptor/query/index.rst","autoapi/neural_compressor/adaptor/tensorflow/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_converter/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_converter_without_calib/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/bf16/bf16_convert/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/bf16/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_add_to_biasadd/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_layout/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_leakyrelu/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_nan_to_random/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/convert_placeholder_to_const/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dequantize_cast_optimizer/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dilated_contraction/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/dummy_biasadd/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/expanddims_optimizer/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fetch_weight_from_reshape/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fold_batch_norm/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fold_constant/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_biasadd_add/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_column_wise_mul/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_conv_with_math/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_decomposed_bn/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_decomposed_in/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_gelu/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_layer_norm/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_pad_with_conv/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_pad_with_fp32_conv/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/fuse_reshape_transpose/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/graph_cse_optimizer/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/grappler_pass/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/insert_print_node/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/move_squeeze_after_relu/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/pre_optimize/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/remove_training_nodes/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/rename_batch_norm/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/split_shared_input/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/strip_equivalent_nodes/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/strip_unused_nodes/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/switch_optimizer/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/generic/update_enter/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/graph_base/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_fake_quant/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_value/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/freeze_value_without_calib/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_conv_redundant_dequantize/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_conv_requantize/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_matmul_redundant_dequantize/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/fuse_matmul_requantize/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/meta_op_optimizer/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/post_hostconst_converter/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/post_quantized_op_cse/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/rnn_convert/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/int8/scale_propagation/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/insert_qdq_pattern/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/merge_duplicated_qdq/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_rewriter/qdq/share_qdq_y_pattern/index.rst","autoapi/neural_compressor/adaptor/tf_utils/graph_util/index.rst","autoapi/neural_compressor/adaptor/tf_utils/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_bn/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_concatv2/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_conv/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_deconv/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_in/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_matmul/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/fuse_qdq_pooling/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/qdq/optimize_qdq/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_base/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_bn/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_concatv2/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_conv/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_for_intel_cpu/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_matmul/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph/quantize_graph_pooling/index.rst","autoapi/neural_compressor/adaptor/tf_utils/quantize_graph_common/index.rst","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/bias_correction/index.rst","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/graph_transform_base/index.rst","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/index.rst","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/insert_logging/index.rst","autoapi/neural_compressor/adaptor/tf_utils/transform_graph/rerange_quantized_concat/index.rst","autoapi/neural_compressor/adaptor/tf_utils/util/index.rst","autoapi/neural_compressor/adaptor/torch_utils/bf16_convert/index.rst","autoapi/neural_compressor/adaptor/torch_utils/index.rst","autoapi/neural_compressor/adaptor/torch_utils/onnx/index.rst","autoapi/neural_compressor/adaptor/torch_utils/symbolic_trace/index.rst","autoapi/neural_compressor/adaptor/torch_utils/util/index.rst","autoapi/neural_compressor/algorithm/algorithm/index.rst","autoapi/neural_compressor/algorithm/fast_bias_correction/index.rst","autoapi/neural_compressor/algorithm/index.rst","autoapi/neural_compressor/algorithm/weight_correction/index.rst","autoapi/neural_compressor/benchmark/index.rst","autoapi/neural_compressor/conf/config/index.rst","autoapi/neural_compressor/conf/dotdict/index.rst","autoapi/neural_compressor/conf/index.rst","autoapi/neural_compressor/conf/pythonic_config/index.rst","autoapi/neural_compressor/contrib/index.rst","autoapi/neural_compressor/contrib/strategy/index.rst","autoapi/neural_compressor/contrib/strategy/sigopt/index.rst","autoapi/neural_compressor/contrib/strategy/tpe/index.rst","autoapi/neural_compressor/data/dataloaders/dataloader/index.rst","autoapi/neural_compressor/data/dataloaders/index.rst","autoapi/neural_compressor/data/datasets/imagenet_dataset/index.rst","autoapi/neural_compressor/data/datasets/index.rst","autoapi/neural_compressor/data/index.rst","autoapi/neural_compressor/data/transforms/coco_transform/index.rst","autoapi/neural_compressor/data/transforms/imagenet_transform/index.rst","autoapi/neural_compressor/data/transforms/index.rst","autoapi/neural_compressor/experimental/benchmark/index.rst","autoapi/neural_compressor/experimental/common/criterion/index.rst","autoapi/neural_compressor/experimental/common/dataloader/index.rst","autoapi/neural_compressor/experimental/common/index.rst","autoapi/neural_compressor/experimental/common/metric/index.rst","autoapi/neural_compressor/experimental/common/model/index.rst","autoapi/neural_compressor/experimental/common/optimizer/index.rst","autoapi/neural_compressor/experimental/common/postprocess/index.rst","autoapi/neural_compressor/experimental/common/torch_utils/index.rst","autoapi/neural_compressor/experimental/component/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/base_dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/default_dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/fetcher/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/mxnet_dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/onnxrt_dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/pytorch_dataloader/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/sampler/index.rst","autoapi/neural_compressor/experimental/data/dataloaders/tensorflow_dataloader/index.rst","autoapi/neural_compressor/experimental/data/datasets/bert_dataset/index.rst","autoapi/neural_compressor/experimental/data/datasets/coco_dataset/index.rst","autoapi/neural_compressor/experimental/data/datasets/dataset/index.rst","autoapi/neural_compressor/experimental/data/datasets/dummy_dataset/index.rst","autoapi/neural_compressor/experimental/data/datasets/dummy_dataset_v2/index.rst","autoapi/neural_compressor/experimental/data/datasets/imagenet_dataset/index.rst","autoapi/neural_compressor/experimental/data/datasets/index.rst","autoapi/neural_compressor/experimental/data/datasets/style_transfer_dataset/index.rst","autoapi/neural_compressor/experimental/data/filters/coco_filter/index.rst","autoapi/neural_compressor/experimental/data/filters/filter/index.rst","autoapi/neural_compressor/experimental/data/filters/index.rst","autoapi/neural_compressor/experimental/data/index.rst","autoapi/neural_compressor/experimental/data/transforms/imagenet_transform/index.rst","autoapi/neural_compressor/experimental/data/transforms/index.rst","autoapi/neural_compressor/experimental/data/transforms/tokenization/index.rst","autoapi/neural_compressor/experimental/data/transforms/transform/index.rst","autoapi/neural_compressor/experimental/distillation/index.rst","autoapi/neural_compressor/experimental/graph_optimization/index.rst","autoapi/neural_compressor/experimental/index.rst","autoapi/neural_compressor/experimental/metric/bleu/index.rst","autoapi/neural_compressor/experimental/metric/bleu_util/index.rst","autoapi/neural_compressor/experimental/metric/coco_label_map/index.rst","autoapi/neural_compressor/experimental/metric/coco_tools/index.rst","autoapi/neural_compressor/experimental/metric/evaluate_squad/index.rst","autoapi/neural_compressor/experimental/metric/f1/index.rst","autoapi/neural_compressor/experimental/metric/index.rst","autoapi/neural_compressor/experimental/metric/metric/index.rst","autoapi/neural_compressor/experimental/mixed_precision/index.rst","autoapi/neural_compressor/experimental/model_conversion/index.rst","autoapi/neural_compressor/experimental/nas/basic_nas/index.rst","autoapi/neural_compressor/experimental/nas/dynas/index.rst","autoapi/neural_compressor/experimental/nas/dynast/dynas_manager/index.rst","autoapi/neural_compressor/experimental/nas/dynast/dynas_predictor/index.rst","autoapi/neural_compressor/experimental/nas/dynast/dynas_search/index.rst","autoapi/neural_compressor/experimental/nas/dynast/dynas_utils/index.rst","autoapi/neural_compressor/experimental/nas/dynast/index.rst","autoapi/neural_compressor/experimental/nas/index.rst","autoapi/neural_compressor/experimental/nas/nas/index.rst","autoapi/neural_compressor/experimental/nas/nas_utils/index.rst","autoapi/neural_compressor/experimental/nas/search_algorithms/index.rst","autoapi/neural_compressor/experimental/pruning/index.rst","autoapi/neural_compressor/experimental/pruning_recipes/index.rst","autoapi/neural_compressor/experimental/pruning_recipes/patterns/index.rst","autoapi/neural_compressor/experimental/pruning_recipes/patterns/pattern/index.rst","autoapi/neural_compressor/experimental/pruning_recipes/patterns/tile_pattern/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/logger/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/patterns/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/prune_utils/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/pruner/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/pruning/index.rst","autoapi/neural_compressor/experimental/pytorch_pruner/scheduler/index.rst","autoapi/neural_compressor/experimental/quantization/index.rst","autoapi/neural_compressor/experimental/scheduler/index.rst","autoapi/neural_compressor/index.rst","autoapi/neural_compressor/metric/index.rst","autoapi/neural_compressor/mix_precision/index.rst","autoapi/neural_compressor/model/base_model/index.rst","autoapi/neural_compressor/model/index.rst","autoapi/neural_compressor/model/model/index.rst","autoapi/neural_compressor/model/nets_factory/index.rst","autoapi/neural_compressor/model/onnx_model/index.rst","autoapi/neural_compressor/model/torch_model/index.rst","autoapi/neural_compressor/objective/index.rst","autoapi/neural_compressor/pruners/gradient_sensitivity/index.rst","autoapi/neural_compressor/pruners/group_lasso/index.rst","autoapi/neural_compressor/pruners/index.rst","autoapi/neural_compressor/pruners/magnitude/index.rst","autoapi/neural_compressor/pruners/pattern_lock/index.rst","autoapi/neural_compressor/pruners/pruner/index.rst","autoapi/neural_compressor/pruning/index.rst","autoapi/neural_compressor/quantization/index.rst","autoapi/neural_compressor/strategy/auto_mixed_precision/index.rst","autoapi/neural_compressor/strategy/basic/index.rst","autoapi/neural_compressor/strategy/bayesian/index.rst","autoapi/neural_compressor/strategy/exhaustive/index.rst","autoapi/neural_compressor/strategy/index.rst","autoapi/neural_compressor/strategy/mse/index.rst","autoapi/neural_compressor/strategy/random/index.rst","autoapi/neural_compressor/strategy/st_utils/index.rst","autoapi/neural_compressor/strategy/st_utils/tuning_sampler/index.rst","autoapi/neural_compressor/strategy/st_utils/tuning_space/index.rst","autoapi/neural_compressor/strategy/st_utils/tuning_structs/index.rst","autoapi/neural_compressor/strategy/strategy/index.rst","autoapi/neural_compressor/training/index.rst","autoapi/neural_compressor/utils/collect_layer_histogram/index.rst","autoapi/neural_compressor/utils/constant/index.rst","autoapi/neural_compressor/utils/create_obj_from_config/index.rst","autoapi/neural_compressor/utils/index.rst","autoapi/neural_compressor/utils/kl_divergence/index.rst","autoapi/neural_compressor/utils/load_huggingface/index.rst","autoapi/neural_compressor/utils/logger/index.rst","autoapi/neural_compressor/utils/options/index.rst","autoapi/neural_compressor/utils/pytorch/index.rst","autoapi/neural_compressor/utils/utility/index.rst","autoapi/neural_compressor/ux/components/benchmark/benchmark/index.rst","autoapi/neural_compressor/ux/components/benchmark/benchmark_model/index.rst","autoapi/neural_compressor/ux/components/benchmark/execute_benchmark/index.rst","autoapi/neural_compressor/ux/components/benchmark/index.rst","autoapi/neural_compressor/ux/components/config_generator/benchmark_config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/graph_optimization_config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/mixed_precision_config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/profiling_config_generator/index.rst","autoapi/neural_compressor/ux/components/config_generator/quantization_config_generator/index.rst","autoapi/neural_compressor/ux/components/configuration_wizard/configuration_parser/index.rst","autoapi/neural_compressor/ux/components/configuration_wizard/get_boundary_nodes/index.rst","autoapi/neural_compressor/ux/components/configuration_wizard/get_configuration/index.rst","autoapi/neural_compressor/ux/components/configuration_wizard/index.rst","autoapi/neural_compressor/ux/components/configuration_wizard/params_feeder/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_manager/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/benchmark/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/benchmark_result/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/dataloader/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/dataset/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/domain/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/domain_flavour/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/example/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/framework/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/metric/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/model/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/optimization/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/optimization_type/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/precision/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/profiling/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/profiling_result/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/project/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/transform/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/tuning_details/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_models/tuning_history/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/benchmark_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/dataset_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/db_operations/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/diagnosis_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/dictionaries_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/examples_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/model_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/optimization_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/profiling_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/db_operations/project_api_interface/index.rst","autoapi/neural_compressor/ux/components/db_manager/index.rst","autoapi/neural_compressor/ux/components/db_manager/params_interfaces/index.rst","autoapi/neural_compressor/ux/components/db_manager/utils/index.rst","autoapi/neural_compressor/ux/components/diagnosis/diagnosis/index.rst","autoapi/neural_compressor/ux/components/diagnosis/factory/index.rst","autoapi/neural_compressor/ux/components/diagnosis/index.rst","autoapi/neural_compressor/ux/components/diagnosis/onnx_diagnosis/index.rst","autoapi/neural_compressor/ux/components/diagnosis/onnx_diagnosis/onnxrt_diagnosis/index.rst","autoapi/neural_compressor/ux/components/diagnosis/op_details/index.rst","autoapi/neural_compressor/ux/components/diagnosis/op_entry/index.rst","autoapi/neural_compressor/ux/components/diagnosis/tensorflow_diagnosis/index.rst","autoapi/neural_compressor/ux/components/diagnosis/tensorflow_diagnosis/tensorflow_diagnosis/index.rst","autoapi/neural_compressor/ux/components/file_browser/file_browser/index.rst","autoapi/neural_compressor/ux/components/file_browser/index.rst","autoapi/neural_compressor/ux/components/graph/attribute/index.rst","autoapi/neural_compressor/ux/components/graph/collapser/index.rst","autoapi/neural_compressor/ux/components/graph/edge/index.rst","autoapi/neural_compressor/ux/components/graph/graph/index.rst","autoapi/neural_compressor/ux/components/graph/graph_reader/index.rst","autoapi/neural_compressor/ux/components/graph/index.rst","autoapi/neural_compressor/ux/components/graph/node/index.rst","autoapi/neural_compressor/ux/components/graph/reader/index.rst","autoapi/neural_compressor/ux/components/graph/reader/onnxrt_reader/index.rst","autoapi/neural_compressor/ux/components/graph/reader/tensorflow_reader/index.rst","autoapi/neural_compressor/ux/components/index.rst","autoapi/neural_compressor/ux/components/jobs_management/index.rst","autoapi/neural_compressor/ux/components/jobs_management/jobs_control_queue/index.rst","autoapi/neural_compressor/ux/components/jobs_management/jobs_manager/index.rst","autoapi/neural_compressor/ux/components/jobs_management/request/index.rst","autoapi/neural_compressor/ux/components/manage_workspace/index.rst","autoapi/neural_compressor/ux/components/model/domain/index.rst","autoapi/neural_compressor/ux/components/model/index.rst","autoapi/neural_compressor/ux/components/model/model/index.rst","autoapi/neural_compressor/ux/components/model/model_type_getter/index.rst","autoapi/neural_compressor/ux/components/model/onnxrt/index.rst","autoapi/neural_compressor/ux/components/model/onnxrt/model/index.rst","autoapi/neural_compressor/ux/components/model/pytorch/index.rst","autoapi/neural_compressor/ux/components/model/pytorch/model/index.rst","autoapi/neural_compressor/ux/components/model/repository/index.rst","autoapi/neural_compressor/ux/components/model/shape/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/frozen_pb/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/keras/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/meta_graph/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/model/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/saved_model/index.rst","autoapi/neural_compressor/ux/components/model/tensorflow/utils/index.rst","autoapi/neural_compressor/ux/components/model_zoo/download_config/index.rst","autoapi/neural_compressor/ux/components/model_zoo/download_model/index.rst","autoapi/neural_compressor/ux/components/model_zoo/downloader/index.rst","autoapi/neural_compressor/ux/components/model_zoo/index.rst","autoapi/neural_compressor/ux/components/model_zoo/list_models/index.rst","autoapi/neural_compressor/ux/components/names_mapper/index.rst","autoapi/neural_compressor/ux/components/names_mapper/names_mapper/index.rst","autoapi/neural_compressor/ux/components/optimization/execute_optimization/index.rst","autoapi/neural_compressor/ux/components/optimization/factory/index.rst","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/graph_optimization/index.rst","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/index.rst","autoapi/neural_compressor/ux/components/optimization/graph_optimizer/optimize_model/index.rst","autoapi/neural_compressor/ux/components/optimization/index.rst","autoapi/neural_compressor/ux/components/optimization/mixed_precision/index.rst","autoapi/neural_compressor/ux/components/optimization/mixed_precision/mixed_precision/index.rst","autoapi/neural_compressor/ux/components/optimization/mixed_precision/optimize_model/index.rst","autoapi/neural_compressor/ux/components/optimization/neural_coder_optimization/index.rst","autoapi/neural_compressor/ux/components/optimization/neural_coder_optimization/optimize_model/index.rst","autoapi/neural_compressor/ux/components/optimization/optimization/index.rst","autoapi/neural_compressor/ux/components/optimization/tune/index.rst","autoapi/neural_compressor/ux/components/optimization/tune/tune_model/index.rst","autoapi/neural_compressor/ux/components/optimization/tune/tuning/index.rst","autoapi/neural_compressor/ux/components/optimization/tuning_history/index.rst","autoapi/neural_compressor/ux/components/profiling/execute_profiling/index.rst","autoapi/neural_compressor/ux/components/profiling/factory/index.rst","autoapi/neural_compressor/ux/components/profiling/index.rst","autoapi/neural_compressor/ux/components/profiling/profile_model/index.rst","autoapi/neural_compressor/ux/components/profiling/profiler/index.rst","autoapi/neural_compressor/ux/components/profiling/profiling/index.rst","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/factory/index.rst","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/index.rst","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/profiler/index.rst","autoapi/neural_compressor/ux/components/profiling/tensorflow_profiler/utils/index.rst","autoapi/neural_compressor/ux/inc_bench/index.rst","autoapi/neural_compressor/ux/index.rst","autoapi/neural_compressor/ux/utils/consts/index.rst","autoapi/neural_compressor/ux/utils/environment/index.rst","autoapi/neural_compressor/ux/utils/exceptions/index.rst","autoapi/neural_compressor/ux/utils/executor/index.rst","autoapi/neural_compressor/ux/utils/expiring_dict/index.rst","autoapi/neural_compressor/ux/utils/github_info/index.rst","autoapi/neural_compressor/ux/utils/hw_info/index.rst","autoapi/neural_compressor/ux/utils/index.rst","autoapi/neural_compressor/ux/utils/json_serializer/index.rst","autoapi/neural_compressor/ux/utils/logger/index.rst","autoapi/neural_compressor/ux/utils/parser/index.rst","autoapi/neural_compressor/ux/utils/proc/index.rst","autoapi/neural_compressor/ux/utils/processes/index.rst","autoapi/neural_compressor/ux/utils/singleton/index.rst","autoapi/neural_compressor/ux/utils/templates/index.rst","autoapi/neural_compressor/ux/utils/templates/metric/index.rst","autoapi/neural_compressor/ux/utils/templates/workdir/index.rst","autoapi/neural_compressor/ux/utils/utils/index.rst","autoapi/neural_compressor/ux/utils/workload/config/index.rst","autoapi/neural_compressor/ux/utils/workload/dataloader/index.rst","autoapi/neural_compressor/ux/utils/workload/evaluation/index.rst","autoapi/neural_compressor/ux/utils/workload/graph_optimization/index.rst","autoapi/neural_compressor/ux/utils/workload/index.rst","autoapi/neural_compressor/ux/utils/workload/mixed_precision/index.rst","autoapi/neural_compressor/ux/utils/workload/model/index.rst","autoapi/neural_compressor/ux/utils/workload/pruning/index.rst","autoapi/neural_compressor/ux/utils/workload/quantization/index.rst","autoapi/neural_compressor/ux/utils/workload/tuning/index.rst","autoapi/neural_compressor/ux/utils/yaml_utils/index.rst","autoapi/neural_compressor/ux/web/communication/index.rst","autoapi/neural_compressor/ux/web/configuration/index.rst","autoapi/neural_compressor/ux/web/exceptions/index.rst","autoapi/neural_compressor/ux/web/index.rst","autoapi/neural_compressor/ux/web/router/index.rst","autoapi/neural_compressor/ux/web/server/index.rst","autoapi/neural_compressor/ux/web/service/benchmark/index.rst","autoapi/neural_compressor/ux/web/service/history_snapshot_parser/index.rst","autoapi/neural_compressor/ux/web/service/index.rst","autoapi/neural_compressor/ux/web/service/model/index.rst","autoapi/neural_compressor/ux/web/service/optimization/index.rst","autoapi/neural_compressor/ux/web/service/profiling/index.rst","autoapi/neural_compressor/ux/web/service/request_data_processor/index.rst","autoapi/neural_compressor/ux/web/service/response_generator/index.rst","autoapi/neural_compressor/ux/web/service/workload/index.rst","autoapi/neural_compressor/version/index.rst","backend_quant.md","bench.md","benchmark.md","contributions.md","dataloader.md","dataset.md","design.md","distillation.md","distillation_quantization.md","distributed.md","doclist.rst","dynamic_quantization.md","examples_readme.md","faq.md","getting_started.md","graph_optimization.md","incompatible_changes.md","index.rst","infrastructure.md","installation_guide.md","legal_information.md","metric.md","mixed_precision.md","model.md","model_conversion.md","objective.md","orchestration.md","platform_configuration.md","pruning.md","publication_list.md","quantization_mixed_precision.md","reference_examples.md","releases_info.md","sigopt_strategy.md","tensorboard.md","transform.md","tuning_strategies.md","validated_model_list.md","welcome.md"],objects:{"":{"6ece06672ed3_v1_14":[33,0,0,"-"],"6f0d0f71d92e_v1_13":[34,0,0,"-"],"9e89549a08c8_v1_11":[35,0,0,"-"],block_mask:[36,0,0,"-"],env:[37,0,0,"-"],neural_compressor:[255,0,0,"-"]},"6ece06672ed3_v1_14":{update_dataloaders:[33,1,1,"ece06672ed3_v1_14.update_dataloaders"],update_transformations:[33,1,1,"ece06672ed3_v1_14.update_transformations"]},"neural_compressor.Pruning":{on_epoch_begin:[255,3,1,""],on_epoch_end:[255,3,1,""],on_step_begin:[255,3,1,""],on_step_end:[255,3,1,""]},"neural_compressor.adaptor":{adaptor:[38,0,0,"-"],mxnet:[40,0,0,"-"],mxnet_utils:[41,0,0,"-"],onnxrt:[43,0,0,"-"],ox_utils:[45,0,0,"-"],pytorch:[68,0,0,"-"],query:[69,0,0,"-"],tensorflow:[70,0,0,"-"],tf_utils:[130,0,0,"-"],torch_utils:[156,0,0,"-"]},"neural_compressor.adaptor.adaptor":{Adaptor:[38,2,1,""],adaptor_registry:[38,1,1,""]},"neural_compressor.adaptor.adaptor.Adaptor":{convert:[38,3,1,""],evaluate:[38,3,1,""],inspect_tensor:[38,3,1,""],quantize:[38,3,1,""],quantize_input:[38,3,1,""],query_fused_patterns:[38,3,1,""],query_fw_capability:[38,3,1,""],save:[38,3,1,""],set_tensor:[38,3,1,""]},"neural_compressor.adaptor.mxnet":{MXNetQuery:[40,2,1,""],MxNetAdaptor:[40,2,1,""]},"neural_compressor.adaptor.mxnet.MXNetQuery":{get_fuse_patterns:[40,3,1,""],get_mixed_precision_combination:[40,3,1,""],get_op_types:[40,3,1,""],get_precisions:[40,3,1,""],get_quantization_capability:[40,3,1,""],get_version:[40,3,1,""]},"neural_compressor.adaptor.mxnet.MxNetAdaptor":{evaluate:[40,3,1,""],inspect_tensor:[40,3,1,""],quantize:[40,3,1,""],query_fw_capability:[40,3,1,""],recover_tuned_model:[40,3,1,""],save:[40,3,1,""],set_tensor:[40,3,1,""]},"neural_compressor.adaptor.mxnet_utils":{util:[42,0,0,"-"]},"neural_compressor.adaptor.mxnet_utils.util":{CalibCollector:[42,2,1,""],OpType:[42,2,1,""],TensorCollector:[42,2,1,""],calib_model:[42,1,1,""],check_mx_version:[42,1,1,""],distribute_calib_tensors:[42,1,1,""],ensure_list:[42,1,1,""],fuse:[42,1,1,""],is_model_quantized:[42,1,1,""],isiterable:[42,1,1,""],make_module:[42,1,1,""],make_nc_model:[42,1,1,""],make_symbol_block:[42,1,1,""],parse_tune_config:[42,1,1,""],prepare_model_data:[42,1,1,""],quantize_sym_model:[42,1,1,""],query_quantizable_nodes:[42,1,1,""],run_forward:[42,1,1,""]},"neural_compressor.adaptor.onnxrt":{ONNXRTAdaptor:[43,2,1,""],ONNXRTQuery:[43,2,1,""],ONNXRT_IntegerOpsAdaptor:[43,2,1,""],ONNXRT_QDQAdaptor:[43,2,1,""],ONNXRT_QLinearOpsAdaptor:[43,2,1,""],ONNXRT_QOperatorAdaptor:[43,2,1,""]},"neural_compressor.adaptor.onnxrt.ONNXRTAdaptor":{evaluate:[43,3,1,""],inspect_tensor:[43,3,1,""],quantize:[43,3,1,""],query_fw_capability:[43,3,1,""],recover:[43,3,1,""],save:[43,3,1,""],set_tensor:[43,3,1,""]},"neural_compressor.adaptor.onnxrt.ONNXRTQuery":{get_graph_optimization:[43,3,1,""],get_op_types:[43,3,1,""],get_op_types_by_precision:[43,3,1,""],get_precisions:[43,3,1,""],get_quantization_capability:[43,3,1,""],get_version:[43,3,1,""]},"neural_compressor.adaptor.ox_utils":{calibration:[44,0,0,"-"],operators:[57,0,0,"-"],quantizer:[66,0,0,"-"],util:[67,0,0,"-"]},"neural_compressor.adaptor.ox_utils.calibration":{ONNXRTAugment:[44,2,1,""]},"neural_compressor.adaptor.ox_utils.calibration.ONNXRTAugment":{augment_graph:[44,3,1,""],calculate_quantization_params:[44,3,1,""],calculate_scale_zeropoint:[44,3,1,""],dump_calibration:[44,3,1,""],get_intermediate_outputs:[44,3,1,""]},"neural_compressor.adaptor.ox_utils.operators":{activation:[46,0,0,"-"],argmax:[47,0,0,"-"],attention:[48,0,0,"-"],binary_op:[49,0,0,"-"],concat:[50,0,0,"-"],conv:[51,0,0,"-"],direct_q8:[52,0,0,"-"],embed_layernorm:[53,0,0,"-"],gather:[54,0,0,"-"],gavgpool:[55,0,0,"-"],gemm:[56,0,0,"-"],lstm:[58,0,0,"-"],matmul:[59,0,0,"-"],maxpool:[60,0,0,"-"],ops:[61,0,0,"-"],pad:[62,0,0,"-"],pooling:[63,0,0,"-"],resize:[64,0,0,"-"],split:[65,0,0,"-"]},"neural_compressor.adaptor.ox_utils.operators.ops":{op_registry:[61,1,1,""]},"neural_compressor.adaptor.ox_utils.util":{QuantFormat:[67,2,1,""],QuantType:[67,2,1,""],QuantizationMode:[67,2,1,""],QuantizedInitializer:[67,2,1,""],QuantizedValue:[67,2,1,""],QuantizedValueType:[67,2,1,""],attribute_to_kwarg:[67,1,1,""],cast_tensor:[67,1,1,""],find_by_name:[67,1,1,""],quantize_data:[67,1,1,""],quantize_data_with_scale_zero:[67,1,1,""]},"neural_compressor.adaptor.pytorch":{PyTorchAdaptor:[68,2,1,""],PyTorchQuery:[68,2,1,""],PyTorch_FXAdaptor:[68,2,1,""],PyTorch_IPEXAdaptor:[68,2,1,""],TemplateAdaptor:[68,2,1,""],get_ops_recursively:[68,1,1,""]},"neural_compressor.adaptor.pytorch.PyTorchAdaptor":{evaluate:[68,3,1,""],get_non_quant_modules:[68,3,1,""],inspect_tensor:[68,3,1,""],is_fused_child:[68,3,1,""],is_fused_op:[68,3,1,""],is_last_fused_child:[68,3,1,""],quantize:[68,3,1,""],query_fw_capability:[68,3,1,""],save:[68,3,1,""],set_tensor:[68,3,1,""],train:[68,3,1,""]},"neural_compressor.adaptor.pytorch.PyTorchQuery":{get_op_types:[68,3,1,""],get_op_types_by_precision:[68,3,1,""],get_quantization_capability:[68,3,1,""]},"neural_compressor.adaptor.pytorch.PyTorch_FXAdaptor":{convert_sub_graph:[68,3,1,""],evaluate:[68,3,1,""],fuse_fx_model:[68,3,1,""],prepare_sub_graph:[68,3,1,""],quantize:[68,3,1,""],query_fw_capability:[68,3,1,""],train:[68,3,1,""]},"neural_compressor.adaptor.pytorch.PyTorch_IPEXAdaptor":{evaluate:[68,3,1,""],inspect_tensor:[68,3,1,""],quantize:[68,3,1,""],query_fw_capability:[68,3,1,""],save:[68,3,1,""]},"neural_compressor.adaptor.pytorch.TemplateAdaptor":{is_fused_module:[68,3,1,""]},"neural_compressor.adaptor.query":{QueryBackendCapability:[69,2,1,""]},"neural_compressor.adaptor.query.QueryBackendCapability":{get_fuse_patterns:[69,3,1,""],get_mixed_precision_combination:[69,3,1,""],get_op_types:[69,3,1,""],get_precisions:[69,3,1,""],get_quantization_capability:[69,3,1,""],get_version:[69,3,1,""],set_quantization_config:[69,3,1,""]},"neural_compressor.adaptor.tensorflow":{TensorFlowAdaptor:[70,2,1,""],TensorflowQuery:[70,2,1,""],Tensorflow_ITEXAdaptor:[70,2,1,""]},"neural_compressor.adaptor.tensorflow.TensorFlowAdaptor":{convert:[70,3,1,""],evaluate:[70,3,1,""],fused_node_mapping:[70,3,1,""],get_optype_wise_ability:[70,3,1,""],inspect_activation:[70,3,1,""],inspect_tensor:[70,3,1,""],inspect_weight_and_bias:[70,3,1,""],quantize:[70,3,1,""],quantize_input:[70,3,1,""],query_fw_capability:[70,3,1,""],recover_tuned_model:[70,3,1,""],save:[70,3,1,""],set_tensor:[70,3,1,""],tuning_cfg_to_fw:[70,3,1,""]},"neural_compressor.adaptor.tensorflow.TensorflowQuery":{generate_internal_patterns:[70,3,1,""],get_eightbit_patterns:[70,3,1,""],get_fuse_patterns:[70,3,1,""],get_mixed_precision_combination:[70,3,1,""],get_op_types:[70,3,1,""],get_op_types_by_precision:[70,3,1,""],get_precisions:[70,3,1,""],get_quantization_capability:[70,3,1,""],get_version:[70,3,1,""]},"neural_compressor.adaptor.tensorflow.Tensorflow_ITEXAdaptor":{quantize:[70,3,1,""]},"neural_compressor.adaptor.tf_utils":{graph_converter:[71,0,0,"-"],graph_converter_without_calib:[72,0,0,"-"],graph_rewriter:[111,0,0,"-"],graph_util:[129,0,0,"-"],quantize_graph:[131,0,0,"-"],quantize_graph_common:[148,0,0,"-"],transform_graph:[151,0,0,"-"],util:[154,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter":{bf16:[74,0,0,"-"],generic:[99,0,0,"-"],graph_base:[110,0,0,"-"],int8:[119,0,0,"-"],qdq:[125,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter.bf16":{bf16_convert:[73,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter.bf16.bf16_convert":{BF16Convert:[73,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.bf16.bf16_convert.BF16Convert":{do_transformation:[73,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic":{convert_add_to_biasadd:[75,0,0,"-"],convert_layout:[76,0,0,"-"],convert_leakyrelu:[77,0,0,"-"],convert_nan_to_random:[78,0,0,"-"],convert_placeholder_to_const:[79,0,0,"-"],dequantize_cast_optimizer:[80,0,0,"-"],dilated_contraction:[81,0,0,"-"],dummy_biasadd:[82,0,0,"-"],expanddims_optimizer:[83,0,0,"-"],fetch_weight_from_reshape:[84,0,0,"-"],fold_batch_norm:[85,0,0,"-"],fold_constant:[86,0,0,"-"],fuse_biasadd_add:[87,0,0,"-"],fuse_column_wise_mul:[88,0,0,"-"],fuse_conv_with_math:[89,0,0,"-"],fuse_decomposed_bn:[90,0,0,"-"],fuse_decomposed_in:[91,0,0,"-"],fuse_gelu:[92,0,0,"-"],fuse_layer_norm:[93,0,0,"-"],fuse_pad_with_conv:[94,0,0,"-"],fuse_pad_with_fp32_conv:[95,0,0,"-"],fuse_reshape_transpose:[96,0,0,"-"],graph_cse_optimizer:[97,0,0,"-"],grappler_pass:[98,0,0,"-"],insert_print_node:[100,0,0,"-"],move_squeeze_after_relu:[101,0,0,"-"],pre_optimize:[102,0,0,"-"],remove_training_nodes:[103,0,0,"-"],rename_batch_norm:[104,0,0,"-"],split_shared_input:[105,0,0,"-"],strip_equivalent_nodes:[106,0,0,"-"],strip_unused_nodes:[107,0,0,"-"],switch_optimizer:[108,0,0,"-"],update_enter:[109,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_add_to_biasadd":{ConvertAddToBiasAddOptimizer:[75,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_add_to_biasadd.ConvertAddToBiasAddOptimizer":{do_transformation:[75,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_layout":{ConvertLayoutOptimizer:[76,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_layout.ConvertLayoutOptimizer":{do_transformation:[76,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_leakyrelu":{ConvertLeakyReluOptimizer:[77,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_leakyrelu.ConvertLeakyReluOptimizer":{do_transformation:[77,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_nan_to_random":{ConvertNanToRandom:[78,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_nan_to_random.ConvertNanToRandom":{do_transformation:[78,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_placeholder_to_const":{ConvertPlaceholderToConst:[79,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_placeholder_to_const.ConvertPlaceholderToConst":{do_transformation:[79,3,1,""],strtobool:[79,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dequantize_cast_optimizer":{DequantizeCastOptimizer:[80,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dequantize_cast_optimizer.DequantizeCastOptimizer":{do_transformation:[80,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dilated_contraction":{DilatedContraction:[81,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dilated_contraction.DilatedContraction":{do_transformation:[81,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dummy_biasadd":{InjectDummyBiasAddOptimizer:[82,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dummy_biasadd.InjectDummyBiasAddOptimizer":{do_transformation:[82,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer":{ExpandDimsOptimizer:[83,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer.ExpandDimsOptimizer":{do_transformation:[83,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fetch_weight_from_reshape":{FetchWeightFromReshapeOptimizer:[84,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fetch_weight_from_reshape.FetchWeightFromReshapeOptimizer":{do_transformation:[84,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_batch_norm":{FoldBatchNormNodesOptimizer:[85,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_batch_norm.FoldBatchNormNodesOptimizer":{do_transformation:[85,3,1,""],scale_after_normalization:[85,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_constant":{GraphFoldConstantOptimizer:[86,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_constant.GraphFoldConstantOptimizer":{check_all_folded:[86,3,1,""],check_const_inputs:[86,3,1,""],do_transformation:[86,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_biasadd_add":{FuseBiasAddAndAddOptimizer:[87,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_biasadd_add.FuseBiasAddAndAddOptimizer":{do_transformation:[87,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_column_wise_mul":{FuseColumnWiseMulOptimizer:[88,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_column_wise_mul.FuseColumnWiseMulOptimizer":{do_transformation:[88,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_conv_with_math":{FuseConvWithMathOptimizer:[89,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_conv_with_math.FuseConvWithMathOptimizer":{do_transformation:[89,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_decomposed_bn":{get_const_dim_count:[90,1,1,""],node_from_map:[90,1,1,""],node_name_from_input:[90,1,1,""],values_from_const:[90,1,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_decomposed_in":{get_const_dim_count:[91,1,1,""],node_from_map:[91,1,1,""],node_name_from_input:[91,1,1,""],values_from_const:[91,1,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_gelu":{FuseGeluOptimizer:[92,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_gelu.FuseGeluOptimizer":{do_transformation:[92,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_layer_norm":{FuseLayerNormOptimizer:[93,2,1,""],node_from_map:[93,1,1,""],node_name_from_input:[93,1,1,""],values_from_const:[93,1,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_layer_norm.FuseLayerNormOptimizer":{do_transformation:[93,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_conv":{FusePadWithConv2DOptimizer:[94,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_conv.FusePadWithConv2DOptimizer":{do_transformation:[94,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_fp32_conv":{FusePadWithFP32Conv2DOptimizer:[95,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_fp32_conv.FusePadWithFP32Conv2DOptimizer":{do_transformation:[95,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_reshape_transpose":{FuseTransposeReshapeOptimizer:[96,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_reshape_transpose.FuseTransposeReshapeOptimizer":{do_transformation:[96,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.graph_cse_optimizer":{GraphCseOptimizer:[97,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.graph_cse_optimizer.GraphCseOptimizer":{do_transformation:[97,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.grappler_pass":{GrapplerOptimizer:[98,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.grappler_pass.GrapplerOptimizer":{do_transformation:[98,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.insert_print_node":{InsertPrintMinMaxNode:[100,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.insert_print_node.InsertPrintMinMaxNode":{do_transformation:[100,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.move_squeeze_after_relu":{MoveSqueezeAfterReluOptimizer:[101,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.move_squeeze_after_relu.MoveSqueezeAfterReluOptimizer":{do_transformation:[101,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.remove_training_nodes":{RemoveTrainingNodesOptimizer:[103,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.remove_training_nodes.RemoveTrainingNodesOptimizer":{do_transformation:[103,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.rename_batch_norm":{RenameBatchNormOptimizer:[104,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.rename_batch_norm.RenameBatchNormOptimizer":{do_transformation:[104,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.split_shared_input":{SplitSharedInputOptimizer:[105,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.split_shared_input.SplitSharedInputOptimizer":{do_transformation:[105,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_equivalent_nodes":{StripEquivalentNodesOptimizer:[106,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_equivalent_nodes.StripEquivalentNodesOptimizer":{do_transformation:[106,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_unused_nodes":{StripUnusedNodesOptimizer:[107,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_unused_nodes.StripUnusedNodesOptimizer":{do_transformation:[107,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.switch_optimizer":{SwitchOptimizer:[108,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.switch_optimizer.SwitchOptimizer":{do_transformation:[108,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.update_enter":{UpdateEnterOptimizer:[109,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.generic.update_enter.UpdateEnterOptimizer":{do_transformation:[109,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.graph_base":{GraphRewriterBase:[110,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.graph_base.GraphRewriterBase":{do_transformation:[110,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8":{freeze_fake_quant:[112,0,0,"-"],freeze_value:[113,0,0,"-"],freeze_value_without_calib:[114,0,0,"-"],fuse_conv_redundant_dequantize:[115,0,0,"-"],fuse_conv_requantize:[116,0,0,"-"],fuse_matmul_redundant_dequantize:[117,0,0,"-"],fuse_matmul_requantize:[118,0,0,"-"],meta_op_optimizer:[120,0,0,"-"],post_hostconst_converter:[121,0,0,"-"],post_quantized_op_cse:[122,0,0,"-"],rnn_convert:[123,0,0,"-"],scale_propagation:[124,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_fake_quant":{FreezeFakeQuantOpOptimizer:[112,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_fake_quant.FreezeFakeQuantOpOptimizer":{do_transformation:[112,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value":{FreezeValueTransformer:[113,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value.FreezeValueTransformer":{do_transformation:[113,3,1,""],generate_output_graph:[113,3,1,""],generate_output_graph_ranges:[113,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value_without_calib":{FreezeValueWithoutCalibTransformer:[114,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value_without_calib.FreezeValueWithoutCalibTransformer":{generate_output_graph:[114,3,1,""],generate_output_graph_ranges:[114,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_redundant_dequantize":{FuseConvRedundantDequantizeTransformer:[115,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_redundant_dequantize.FuseConvRedundantDequantizeTransformer":{do_transformation:[115,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_requantize":{FuseConvRequantizeTransformer:[116,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_requantize.FuseConvRequantizeTransformer":{do_transformation:[116,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_redundant_dequantize":{FuseMatMulRedundantDequantizeTransformer:[117,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_redundant_dequantize.FuseMatMulRedundantDequantizeTransformer":{do_transformation:[117,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize":{FuseMatMulRequantizeDequantizeNewAPITransformer:[118,2,1,""],FuseMatMulRequantizeDequantizeTransformer:[118,2,1,""],FuseMatMulRequantizeNewAPITransformer:[118,2,1,""],FuseMatMulRequantizeTransformer:[118,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize.FuseMatMulRequantizeDequantizeNewAPITransformer":{do_transformation:[118,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize.FuseMatMulRequantizeDequantizeTransformer":{do_transformation:[118,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize.FuseMatMulRequantizeNewAPITransformer":{do_transformation:[118,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize.FuseMatMulRequantizeTransformer":{do_transformation:[118,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.meta_op_optimizer":{MetaInfoChangingMemOpOptimizer:[120,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.meta_op_optimizer.MetaInfoChangingMemOpOptimizer":{do_transformation:[120,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_hostconst_converter":{PostHostConstConverter:[121,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_hostconst_converter.PostHostConstConverter":{do_transformation:[121,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_quantized_op_cse":{PostCseOptimizer:[122,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_quantized_op_cse.PostCseOptimizer":{do_transformation:[122,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.rnn_convert":{QuantizedRNNConverter:[123,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.rnn_convert.QuantizedRNNConverter":{do_transformation:[123,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.scale_propagation":{ScaleProPagationTransformer:[124,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.int8.scale_propagation.ScaleProPagationTransformer":{do_transformation:[124,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq":{insert_qdq_pattern:[126,0,0,"-"],merge_duplicated_qdq:[127,0,0,"-"],share_qdq_y_pattern:[128,0,0,"-"]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.insert_qdq_pattern":{GenerateGraphWithQDQPattern:[126,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.insert_qdq_pattern.GenerateGraphWithQDQPattern":{do_transformation:[126,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.merge_duplicated_qdq":{MergeDuplicatedQDQOptimizer:[127,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.merge_duplicated_qdq.MergeDuplicatedQDQOptimizer":{do_transformation:[127,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.share_qdq_y_pattern":{ShareQDQForItexYPatternOptimizer:[128,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.share_qdq_y_pattern.ShareQDQForItexYPatternOptimizer":{do_transformation:[128,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_util":{GraphAnalyzer:[129,2,1,""],GraphRewriterHelper:[129,2,1,""]},"neural_compressor.adaptor.tf_utils.graph_util.GraphAnalyzer":{add_node:[129,3,1,""],dump_graph:[129,3,1,""],get_graph_input_output:[129,3,1,""],has_positive_input:[129,3,1,""],parse_graph:[129,3,1,""],query_fusion_pattern_nodes:[129,3,1,""],remove_node:[129,3,1,""],remove_node_with_single_input_output:[129,3,1,""],replace_const_node:[129,3,1,""],replace_constant_graph_with_constant_node:[129,3,1,""],replace_node:[129,3,1,""],replace_single_node:[129,3,1,""]},"neural_compressor.adaptor.tf_utils.graph_util.GraphRewriterHelper":{compare_node_attr:[129,3,1,""],create_constant_node:[129,3,1,""],create_node:[129,3,1,""],node_name_from_input:[129,3,1,""],set_attr_bool:[129,3,1,""],set_attr_dtype:[129,3,1,""],set_attr_float:[129,3,1,""],set_attr_int:[129,3,1,""],set_attr_int_list:[129,3,1,""],set_attr_string:[129,3,1,""],set_attr_string_list:[129,3,1,""],set_attr_tensor:[129,3,1,""],set_attr_type_list:[129,3,1,""],values_from_const:[129,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph":{qdq:[139,0,0,"-"],quantize_graph_base:[141,0,0,"-"],quantize_graph_bn:[142,0,0,"-"],quantize_graph_concatv2:[143,0,0,"-"],quantize_graph_conv:[144,0,0,"-"],quantize_graph_for_intel_cpu:[145,0,0,"-"],quantize_graph_matmul:[146,0,0,"-"],quantize_graph_pooling:[147,0,0,"-"]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq":{fuse_qdq_bn:[132,0,0,"-"],fuse_qdq_concatv2:[133,0,0,"-"],fuse_qdq_conv:[134,0,0,"-"],fuse_qdq_deconv:[135,0,0,"-"],fuse_qdq_in:[136,0,0,"-"],fuse_qdq_matmul:[137,0,0,"-"],fuse_qdq_pooling:[138,0,0,"-"],optimize_qdq:[140,0,0,"-"]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_bn":{FuseNodeStartWithFusedBatchNormV3:[132,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_bn.FuseNodeStartWithFusedBatchNormV3":{apply_the_transform:[132,3,1,""],get_longest_fuse:[132,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_concatv2":{FuseNodeStartWithConcatV2:[133,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_concatv2.FuseNodeStartWithConcatV2":{apply_the_transform:[133,3,1,""],get_longest_fuse:[133,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_conv":{FuseNodeStartWithConv2d:[134,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_conv.FuseNodeStartWithConv2d":{apply_the_transform:[134,3,1,""],get_longest_fuse:[134,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_deconv":{FuseNodeStartWithDeconv2d:[135,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_deconv.FuseNodeStartWithDeconv2d":{apply_the_transform:[135,3,1,""],get_longest_fuse:[135,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_in":{FuseNodeStartWithFusedInstanceNorm:[136,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_in.FuseNodeStartWithFusedInstanceNorm":{apply_the_transform:[136,3,1,""],get_longest_fuse:[136,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_matmul":{FuseNodeStartWithMatmul:[137,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_matmul.FuseNodeStartWithMatmul":{apply_batchmatmulv2_fusion:[137,3,1,""],apply_batchmatmulv2_mul_add_fusion:[137,3,1,""],apply_matmul_biasadd_fusion:[137,3,1,""],apply_matmul_biasadd_relu_fusion:[137,3,1,""],apply_the_transform:[137,3,1,""],get_longest_fuse:[137,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_pooling":{FuseNodeStartWithPooling:[138,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_pooling.FuseNodeStartWithPooling":{apply_the_transform:[138,3,1,""],get_longest_fuse:[138,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq":{OptimizeQDQGraph:[140,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq.OptimizeQDQGraph":{do_transform:[140,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_base":{QuantizeGraphBase:[141,2,1,""],QuantizeNodeBase:[141,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_base.QuantizeGraphBase":{do_transform:[141,3,1,""],remove_dead_nodes:[141,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_base.QuantizeNodeBase":{add_output_graph_node:[141,3,1,""],apply_the_transform:[141,3,1,""],create_nodes_map:[141,3,1,""],get_longest_fuse:[141,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_bn":{FuseNodeStartWithFusedBatchNormV3:[142,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_bn.FuseNodeStartWithFusedBatchNormV3":{apply_the_transform:[142,3,1,""],get_longest_fuse:[142,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_concatv2":{FuseNodeStartWithConcatV2:[143,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_concatv2.FuseNodeStartWithConcatV2":{apply_the_transform:[143,3,1,""],get_longest_fuse:[143,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_conv":{FuseNodeStartWithConv2d:[144,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_conv.FuseNodeStartWithConv2d":{apply_conv_biasadd_relu_fusion:[144,3,1,""],apply_the_transform:[144,3,1,""],get_longest_fuse:[144,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_for_intel_cpu":{QuantizeGraphForIntel:[145,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_for_intel_cpu.QuantizeGraphForIntel":{do_transform:[145,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_matmul":{FuseNodeStartWithMatmul:[146,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_matmul.FuseNodeStartWithMatmul":{apply_the_transform:[146,3,1,""],get_longest_fuse:[146,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_pooling":{FuseNodeStartWithPooling:[147,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_pooling.FuseNodeStartWithPooling":{apply_the_transform:[147,3,1,""],get_longest_fuse:[147,3,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph_common":{QuantizeGraphHelper:[148,2,1,""]},"neural_compressor.adaptor.tf_utils.quantize_graph_common.QuantizeGraphHelper":{copy_attr:[148,3,1,""],create_constant_node:[148,3,1,""],create_node:[148,3,1,""],ensure_tensor_name_has_port:[148,3,1,""],get_sorted_graph:[148,3,1,""],node_name_from_input:[148,3,1,""],remove_training_nodes:[148,3,1,""],set_attr_bool:[148,3,1,""],set_attr_dtype:[148,3,1,""],set_attr_float:[148,3,1,""],set_attr_int:[148,3,1,""],set_attr_string:[148,3,1,""],set_attr_string_list:[148,3,1,""],set_attr_tensor:[148,3,1,""],set_attr_type_list:[148,3,1,""],split_shared_inputs:[148,3,1,""],unique_node_name_from_input:[148,3,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph":{bias_correction:[149,0,0,"-"],graph_transform_base:[150,0,0,"-"],insert_logging:[152,0,0,"-"],rerange_quantized_concat:[153,0,0,"-"]},"neural_compressor.adaptor.tf_utils.transform_graph.bias_correction":{BiasCorrection:[149,2,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph.bias_correction.BiasCorrection":{do_transformation:[149,3,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph.insert_logging":{InsertLogging:[152,2,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph.insert_logging.InsertLogging":{do_transformation:[152,3,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph.rerange_quantized_concat":{RerangeQuantizedConcat:[153,2,1,""]},"neural_compressor.adaptor.tf_utils.transform_graph.rerange_quantized_concat.RerangeQuantizedConcat":{do_transformation:[153,3,1,""]},"neural_compressor.adaptor.tf_utils.util":{disable_random:[154,1,1,""],get_tensor_by_name:[154,1,1,""],get_tensor_val_from_graph_node:[154,1,1,""],is_ckpt_format:[154,1,1,""],is_saved_model_format:[154,1,1,""],iterator_sess_run:[154,1,1,""],read_graph:[154,1,1,""],strip_equivalent_nodes:[154,1,1,""],strip_unused_nodes:[154,1,1,""],write_graph:[154,1,1,""]},"neural_compressor.adaptor.torch_utils":{bf16_convert:[155,0,0,"-"],onnx:[157,0,0,"-"],symbolic_trace:[158,0,0,"-"],util:[159,0,0,"-"]},"neural_compressor.adaptor.torch_utils.util":{append_attr:[159,1,1,""],get_embedding_contiguous:[159,1,1,""]},"neural_compressor.algorithm":{Algorithm:[162,2,1,""],AlgorithmScheduler:[162,2,1,""],algorithm:[160,0,0,"-"],algorithm_registry:[162,1,1,""],fast_bias_correction:[161,0,0,"-"],weight_correction:[163,0,0,"-"]},"neural_compressor.algorithm.algorithm":{Algorithm:[160,2,1,""],AlgorithmScheduler:[160,2,1,""],algorithm_registry:[160,1,1,""]},"neural_compressor.algorithm.fast_bias_correction":{FastBiasCorrection:[161,2,1,""]},"neural_compressor.algorithm.weight_correction":{WeightCorrection:[163,2,1,""]},"neural_compressor.benchmark":{Benchmark:[164,2,1,""]},"neural_compressor.conf":{config:[165,0,0,"-"],dotdict:[166,0,0,"-"],pythonic_config:[168,0,0,"-"]},"neural_compressor.conf.config":{Benchmark_Conf:[165,2,1,""],Conf:[165,2,1,""],DefaultConf:[165,2,1,""],Distillation_Conf:[165,2,1,""],Graph_Optimization_Conf:[165,2,1,""],MixedPrecision_Conf:[165,2,1,""],NASConfig:[165,2,1,""],Pruning_Conf:[165,2,1,""],Quantization_Conf:[165,2,1,""]},"neural_compressor.conf.dotdict":{DotDict:[166,2,1,""],deep_get:[166,1,1,""],deep_set:[166,1,1,""]},"neural_compressor.conf.pythonic_config":{DistillationConfig:[168,2,1,""]},"neural_compressor.contrib":{strategy:[170,0,0,"-"]},"neural_compressor.contrib.strategy":{sigopt:[171,0,0,"-"],tpe:[172,0,0,"-"]},"neural_compressor.contrib.strategy.sigopt":{SigOptTuneStrategy:[171,2,1,""]},"neural_compressor.contrib.strategy.sigopt.SigOptTuneStrategy":{next_tune_cfg:[171,3,1,""],traverse:[171,3,1,""]},"neural_compressor.contrib.strategy.tpe":{TpeTuneStrategy:[172,2,1,""]},"neural_compressor.contrib.strategy.tpe.TpeTuneStrategy":{stop:[172,3,1,""],traverse:[172,3,1,""]},"neural_compressor.data":{BaseTransform:[177,2,1,""],DataLoader:[177,2,1,""],Dataset:[177,2,1,""],Filter:[177,2,1,""],IterableDataset:[177,2,1,""],TRANSFORMS:[177,2,1,""],dataloaders:[174,0,0,"-"],dataset_registry:[177,1,1,""],datasets:[176,0,0,"-"],filter_registry:[177,1,1,""],transform_registry:[177,1,1,""],transforms:[180,0,0,"-"]},"neural_compressor.data.TRANSFORMS":{register:[177,3,1,""]},"neural_compressor.data.dataloaders":{DataLoader:[174,2,1,""],dataloader:[173,0,0,"-"]},"neural_compressor.data.dataloaders.dataloader":{DataLoader:[173,2,1,""]},"neural_compressor.data.datasets":{imagenet_dataset:[175,0,0,"-"]},"neural_compressor.data.datasets.imagenet_dataset":{ONNXRTImagenetDataset:[175,2,1,""],TensorflowImagenetDataset:[175,2,1,""]},"neural_compressor.data.transforms":{coco_transform:[178,0,0,"-"],imagenet_transform:[179,0,0,"-"]},"neural_compressor.data.transforms.coco_transform":{ParseDecodeCocoTransform:[178,2,1,""]},"neural_compressor.data.transforms.imagenet_transform":{BilinearImagenetTransform:[179,2,1,""],ONNXResizeCropImagenetTransform:[179,2,1,""],OnnxBilinearImagenetTransform:[179,2,1,""],ParseDecodeImagenetTransform:[179,2,1,""],ResizeWithAspectRatio:[179,2,1,""],TensorflowResizeCropImagenetTransform:[179,2,1,""]},"neural_compressor.experimental":{Benchmark:[219,2,1,""],Component:[219,2,1,""],Distillation:[219,2,1,""],Graph_Optimization:[219,2,1,""],MixedPrecision:[219,2,1,""],ModelConversion:[219,2,1,""],NAS:[219,2,1,""],Pruning:[219,2,1,""],Quantization:[219,2,1,""],benchmark:[181,0,0,"-"],common:[184,0,0,"-"],component:[190,0,0,"-"],data:[212,0,0,"-"],distillation:[217,0,0,"-"],graph_optimization:[218,0,0,"-"],metric:[226,0,0,"-"],mixed_precision:[228,0,0,"-"],model_conversion:[229,0,0,"-"],nas:[237,0,0,"-"],pruning:[241,0,0,"-"],pruning_recipes:[242,0,0,"-"],pytorch_pruner:[246,0,0,"-"],quantization:[253,0,0,"-"],scheduler:[254,0,0,"-"]},"neural_compressor.experimental.Benchmark":{config_instance:[219,3,1,""],generate_prefix:[219,3,1,""],run_instance:[219,3,1,""],summary_benchmark:[219,3,1,""]},"neural_compressor.experimental.Component":{execute:[219,3,1,""],on_after_compute_loss:[219,3,1,""],on_before_optimizer_step:[219,3,1,""],on_epoch_begin:[219,3,1,""],on_epoch_end:[219,3,1,""],on_step_begin:[219,3,1,""],on_step_end:[219,3,1,""],on_train_begin:[219,3,1,""],on_train_end:[219,3,1,""],post_epoch_end:[219,3,1,""],pre_epoch_begin:[219,3,1,""],pre_process:[219,3,1,""],register_hook:[219,3,1,""]},"neural_compressor.experimental.Distillation":{_epoch_ran:[219,4,1,""],best_model:[219,4,1,""],best_score:[219,4,1,""],create_criterion:[219,3,1,""],create_optimizer:[219,3,1,""],eval_frequency:[219,4,1,""],execute:[219,3,1,""],generate_hooks:[219,3,1,""],init_train_cfg:[219,3,1,""],on_post_forward:[219,3,1,""],pre_process:[219,3,1,""]},"neural_compressor.experimental.Graph_Optimization":{dataset:[219,3,1,""],set_config_by_model:[219,3,1,""]},"neural_compressor.experimental.MixedPrecision":{set_config_by_model:[219,3,1,""]},"neural_compressor.experimental.ModelConversion":{dataset:[219,3,1,""]},"neural_compressor.experimental.Pruning":{conf:[219,4,1,""],execute:[219,3,1,""],generate_hooks:[219,3,1,""],generate_pruners:[219,3,1,""],pre_process:[219,3,1,""],pruners:[219,4,1,""]},"neural_compressor.experimental.Quantization":{dataset:[219,3,1,""],execute:[219,3,1,""],pre_process:[219,3,1,""]},"neural_compressor.experimental.benchmark":{Benchmark:[181,2,1,""],get_architecture:[181,1,1,""],get_bounded_threads:[181,1,1,""],get_core_ids:[181,1,1,""],get_physical_ids:[181,1,1,""],get_threads:[181,1,1,""],get_threads_per_core:[181,1,1,""],set_all_env_var:[181,1,1,""],set_env_var:[181,1,1,""]},"neural_compressor.experimental.benchmark.Benchmark":{config_instance:[181,3,1,""],generate_prefix:[181,3,1,""],run_instance:[181,3,1,""],summary_benchmark:[181,3,1,""]},"neural_compressor.experimental.common":{DataLoader:[184,2,1,""],Metric:[184,2,1,""],Model:[184,2,1,""],Postprocess:[184,2,1,""],criterion:[182,0,0,"-"],dataloader:[183,0,0,"-"],metric:[185,0,0,"-"],model:[186,0,0,"-"],optimizer:[187,0,0,"-"],postprocess:[188,0,0,"-"],torch_utils:[189,0,0,"-"]},"neural_compressor.experimental.common.criterion":{Criterions:[182,2,1,""],IntermediateLayersKnowledgeDistillationLoss:[182,2,1,""],KnowledgeDistillationFramework:[182,2,1,""],KnowledgeDistillationLoss:[182,2,1,""],PyTorchCriterions:[182,2,1,""],PyTorchCrossEntropyLoss:[182,2,1,""],PyTorchIntermediateLayersKnowledgeDistillationLoss:[182,2,1,""],PyTorchIntermediateLayersKnowledgeDistillationLossWrapper:[182,2,1,""],PyTorchKnowledgeDistillationLoss:[182,2,1,""],PyTorchKnowledgeDistillationLossWrapper:[182,2,1,""],PyTorchSelfKnowledgeDistillationLoss:[182,2,1,""],SelfKnowledgeDistillationLoss:[182,2,1,""],TensorFlowCrossEntropyLoss:[182,2,1,""],TensorFlowSparseCategoricalCrossentropy:[182,2,1,""],TensorflowCriterions:[182,2,1,""],TensorflowKnowledgeDistillationLoss:[182,2,1,""],TensorflowKnowledgeDistillationLossExternal:[182,2,1,""],TensorflowKnowledgeDistillationLossWrapper:[182,2,1,""],criterion_registry:[182,1,1,""]},"neural_compressor.experimental.common.criterion.Criterions":{register:[182,3,1,""]},"neural_compressor.experimental.common.criterion.IntermediateLayersKnowledgeDistillationLoss":{clear_features:[182,3,1,""],init_feature_matcher:[182,3,1,""],init_loss_funcs:[182,3,1,""],loss_cal:[182,3,1,""],loss_cal_sloss:[182,3,1,""],teacher_model_forward:[182,3,1,""]},"neural_compressor.experimental.common.criterion.KnowledgeDistillationLoss":{loss_cal:[182,3,1,""],loss_cal_sloss:[182,3,1,""],student_targets_loss_cal:[182,3,1,""],teacher_model_forward:[182,3,1,""],teacher_student_loss_cal:[182,3,1,""]},"neural_compressor.experimental.common.criterion.PyTorchIntermediateLayersKnowledgeDistillationLoss":{init_feature_matcher:[182,3,1,""],init_loss_funcs:[182,3,1,""],loss_cal:[182,3,1,""],loss_cal_sloss:[182,3,1,""],register_hooks_for_models:[182,3,1,""],remove_all_hooks:[182,3,1,""],teacher_model_forward:[182,3,1,""]},"neural_compressor.experimental.common.criterion.PyTorchKnowledgeDistillationLoss":{KullbackLeiblerDivergence:[182,3,1,""],SoftCrossEntropy:[182,3,1,""],student_targets_loss_cal:[182,3,1,""],teacher_model_forward:[182,3,1,""],teacher_student_loss_cal:[182,3,1,""]},"neural_compressor.experimental.common.criterion.TensorflowKnowledgeDistillationLoss":{SoftCrossEntropy:[182,3,1,""],student_targets_loss_cal:[182,3,1,""],teacher_model_forward:[182,3,1,""],teacher_student_loss_cal:[182,3,1,""]},"neural_compressor.experimental.common.criterion.TensorflowKnowledgeDistillationLossExternal":{student_targets_loss_cal:[182,3,1,""],teacher_model_forward:[182,3,1,""],teacher_student_loss_cal:[182,3,1,""]},"neural_compressor.experimental.common.dataloader":{DataLoader:[183,2,1,""]},"neural_compressor.experimental.common.metric":{Metric:[185,2,1,""]},"neural_compressor.experimental.common.model":{Model:[186,2,1,""]},"neural_compressor.experimental.common.optimizer":{Optimizers:[187,2,1,""],PyTorchOptimizers:[187,2,1,""],PyTorchSGD:[187,2,1,""],TensorFlowAdam:[187,2,1,""],TensorFlowAdamW:[187,2,1,""],TensorFlowSGD:[187,2,1,""],TensorflowOptimizers:[187,2,1,""],optimizer_registry:[187,1,1,""]},"neural_compressor.experimental.common.optimizer.Optimizers":{register:[187,3,1,""]},"neural_compressor.experimental.common.postprocess":{Postprocess:[188,2,1,""]},"neural_compressor.experimental.component":{Component:[190,2,1,""]},"neural_compressor.experimental.component.Component":{execute:[190,3,1,""],on_after_compute_loss:[190,3,1,""],on_before_optimizer_step:[190,3,1,""],on_epoch_begin:[190,3,1,""],on_epoch_end:[190,3,1,""],on_step_begin:[190,3,1,""],on_step_end:[190,3,1,""],on_train_begin:[190,3,1,""],on_train_end:[190,3,1,""],post_epoch_end:[190,3,1,""],pre_epoch_begin:[190,3,1,""],pre_process:[190,3,1,""],register_hook:[190,3,1,""]},"neural_compressor.experimental.data":{BaseTransform:[212,2,1,""],Dataset:[212,2,1,""],Filter:[212,2,1,""],IterableDataset:[212,2,1,""],TRANSFORMS:[212,2,1,""],dataloaders:[195,0,0,"-"],dataset_registry:[212,1,1,""],datasets:[207,0,0,"-"],filter_registry:[212,1,1,""],filters:[211,0,0,"-"],transform_registry:[212,1,1,""],transforms:[214,0,0,"-"]},"neural_compressor.experimental.data.TRANSFORMS":{register:[212,3,1,""]},"neural_compressor.experimental.data.dataloaders":{base_dataloader:[191,0,0,"-"],dataloader:[192,0,0,"-"],default_dataloader:[193,0,0,"-"],fetcher:[194,0,0,"-"],mxnet_dataloader:[196,0,0,"-"],onnxrt_dataloader:[197,0,0,"-"],pytorch_dataloader:[198,0,0,"-"],sampler:[199,0,0,"-"],tensorflow_dataloader:[200,0,0,"-"]},"neural_compressor.experimental.data.dataloaders.base_dataloader":{BaseDataLoader:[191,2,1,""]},"neural_compressor.experimental.data.dataloaders.default_dataloader":{DefaultDataLoader:[193,2,1,""],default_collate:[193,1,1,""]},"neural_compressor.experimental.data.dataloaders.mxnet_dataloader":{MXNetDataLoader:[196,2,1,""]},"neural_compressor.experimental.data.dataloaders.onnxrt_dataloader":{ONNXRTBertDataLoader:[197,2,1,""],ONNXRTDataLoader:[197,2,1,""]},"neural_compressor.experimental.data.dataloaders.pytorch_dataloader":{PyTorchDataLoader:[198,2,1,""]},"neural_compressor.experimental.data.dataloaders.sampler":{BatchSampler:[199,2,1,""],IterableSampler:[199,2,1,""],Sampler:[199,2,1,""],SequentialSampler:[199,2,1,""]},"neural_compressor.experimental.data.dataloaders.tensorflow_dataloader":{TFDataDataLoader:[200,2,1,""],TensorflowBertDataLoader:[200,2,1,""],TensorflowDataLoader:[200,2,1,""],TensorflowModelZooBertDataLoader:[200,2,1,""]},"neural_compressor.experimental.data.dataloaders.tensorflow_dataloader.TFDataDataLoader":{batch:[200,3,1,""]},"neural_compressor.experimental.data.datasets":{Dataset:[207,2,1,""],IterableDataset:[207,2,1,""],bert_dataset:[201,0,0,"-"],coco_dataset:[202,0,0,"-"],dataset:[203,0,0,"-"],dataset_registry:[207,1,1,""],dummy_dataset:[204,0,0,"-"],dummy_dataset_v2:[205,0,0,"-"],imagenet_dataset:[206,0,0,"-"],style_transfer_dataset:[208,0,0,"-"]},"neural_compressor.experimental.data.datasets.bert_dataset":{InputFeatures:[201,2,1,""],ONNXRTBertDataset:[201,2,1,""],TensorflowBertDataset:[201,2,1,""],TensorflowModelZooBertDataset:[201,2,1,""]},"neural_compressor.experimental.data.datasets.bert_dataset.InputFeatures":{to_json_string:[201,3,1,""]},"neural_compressor.experimental.data.datasets.coco_dataset":{COCONpy:[202,2,1,""],COCORaw:[202,2,1,""],COCORecordDataset:[202,2,1,""]},"neural_compressor.experimental.data.datasets.dataset":{CIFAR100:[203,2,1,""],CIFAR10:[203,2,1,""],Dataset:[203,2,1,""],FashionMNIST:[203,2,1,""],ImageFolder:[203,2,1,""],IterableDataset:[203,2,1,""],MNIST:[203,2,1,""],MXNetCIFAR100:[203,2,1,""],MXNetCIFAR10:[203,2,1,""],MXNetFashionMNIST:[203,2,1,""],MXNetImageFolder:[203,2,1,""],MXNetMNIST:[203,2,1,""],PytorchCIFAR100:[203,2,1,""],PytorchCIFAR10:[203,2,1,""],PytorchFashionMNIST:[203,2,1,""],PytorchMNIST:[203,2,1,""],TensorflowCIFAR100:[203,2,1,""],TensorflowCIFAR10:[203,2,1,""],TensorflowFashionMNIST:[203,2,1,""],TensorflowImageFolder:[203,2,1,""],TensorflowImageRecord:[203,2,1,""],TensorflowMNIST:[203,2,1,""],TensorflowTFRecordDataset:[203,2,1,""],TensorflowVOCRecord:[203,2,1,""],dataset_registry:[203,1,1,""],framework_datasets:[203,5,1,""]},"neural_compressor.experimental.data.datasets.dummy_dataset":{DummyDataset:[204,2,1,""]},"neural_compressor.experimental.data.datasets.dummy_dataset_v2":{DummyDataset:[205,2,1,""],SparseDummyDataset:[205,2,1,""]},"neural_compressor.experimental.data.datasets.imagenet_dataset":{ImagenetRaw:[206,2,1,""],MXNetImagenetRaw:[206,2,1,""],PytorchImagenetRaw:[206,2,1,""],TensorflowImagenetRaw:[206,2,1,""]},"neural_compressor.experimental.data.datasets.style_transfer_dataset":{StyleTransferDataset:[208,2,1,""]},"neural_compressor.experimental.data.filters":{Filter:[211,2,1,""],coco_filter:[209,0,0,"-"],filter:[210,0,0,"-"],filter_registry:[211,1,1,""]},"neural_compressor.experimental.data.filters.coco_filter":{LabelBalanceCOCORawFilter:[209,2,1,""],LabelBalanceCOCORecordFilter:[209,2,1,""]},"neural_compressor.experimental.data.filters.filter":{Filter:[210,2,1,""],filter_registry:[210,1,1,""]},"neural_compressor.experimental.data.transforms":{BaseTransform:[214,2,1,""],TRANSFORMS:[214,2,1,""],imagenet_transform:[213,0,0,"-"],tokenization:[215,0,0,"-"],transform:[216,0,0,"-"],transform_registry:[214,1,1,""]},"neural_compressor.experimental.data.transforms.TRANSFORMS":{register:[214,3,1,""]},"neural_compressor.experimental.data.transforms.imagenet_transform":{LabelShift:[213,2,1,""],ParseDecodeImagenet:[213,2,1,""],QuantizedInput:[213,2,1,""]},"neural_compressor.experimental.data.transforms.tokenization":{BasicTokenizer:[215,2,1,""],FullTokenizer:[215,2,1,""],WordpieceTokenizer:[215,2,1,""],convert_by_vocab:[215,1,1,""],convert_to_unicode:[215,1,1,""],load_vocab:[215,1,1,""],whitespace_tokenize:[215,1,1,""]},"neural_compressor.experimental.data.transforms.tokenization.BasicTokenizer":{tokenize:[215,3,1,""]},"neural_compressor.experimental.data.transforms.tokenization.FullTokenizer":{convert_ids_to_tokens:[215,3,1,""],convert_tokens_to_ids:[215,3,1,""],tokenize:[215,3,1,""]},"neural_compressor.experimental.data.transforms.tokenization.WordpieceTokenizer":{tokenize:[215,3,1,""]},"neural_compressor.experimental.data.transforms.transform":{AlignImageChannelTransform:[216,2,1,""],BaseTransform:[216,2,1,""],CastONNXTransform:[216,2,1,""],CastPyTorchTransform:[216,2,1,""],CastTFTransform:[216,2,1,""],CenterCropTFTransform:[216,2,1,""],CenterCropTransform:[216,2,1,""],CollectTransform:[216,2,1,""],ComposeTransform:[216,2,1,""],CropResizeTFTransform:[216,2,1,""],CropResizeTransform:[216,2,1,""],CropToBoundingBox:[216,2,1,""],InputFeatures:[216,2,1,""],MXNetCropResizeTransform:[216,2,1,""],MXNetCropToBoundingBox:[216,2,1,""],MXNetNormalizeTransform:[216,2,1,""],MXNetTransforms:[216,2,1,""],MXNetTranspose:[216,2,1,""],NormalizeTFTransform:[216,2,1,""],NormalizeTransform:[216,2,1,""],ONNXRTCropToBoundingBox:[216,2,1,""],ONNXRTITTransforms:[216,2,1,""],ONNXRTQLTransforms:[216,2,1,""],PaddedCenterCropTransform:[216,2,1,""],ParseDecodeVocTransform:[216,2,1,""],PyTorchAlignImageChannel:[216,2,1,""],PyTorchCropResizeTransform:[216,2,1,""],PyTorchNormalizeTransform:[216,2,1,""],PyTorchTransforms:[216,2,1,""],PyTorchTranspose:[216,2,1,""],PytorchMxnetTransform:[216,2,1,""],PytorchMxnetWrapFunction:[216,2,1,""],RandomCropTFTransform:[216,2,1,""],RandomCropTransform:[216,2,1,""],RandomHorizontalFlip:[216,2,1,""],RandomResizedCropMXNetTransform:[216,2,1,""],RandomResizedCropPytorchTransform:[216,2,1,""],RandomResizedCropTFTransform:[216,2,1,""],RandomResizedCropTransform:[216,2,1,""],RandomVerticalFlip:[216,2,1,""],RescaleKerasPretrainTransform:[216,2,1,""],RescaleTFTransform:[216,2,1,""],RescaleTransform:[216,2,1,""],ResizeMXNetTransform:[216,2,1,""],ResizePytorchTransform:[216,2,1,""],ResizeTFTransform:[216,2,1,""],ResizeTransform:[216,2,1,""],ResizeWithRatio:[216,2,1,""],SquadExample:[216,2,1,""],TFModelZooCollectTransform:[216,2,1,""],TFSquadV1ModelZooPostTransform:[216,2,1,""],TFSquadV1PostTransform:[216,2,1,""],TRANSFORMS:[216,2,1,""],TensorflowCropToBoundingBox:[216,2,1,""],TensorflowRandomHorizontalFlip:[216,2,1,""],TensorflowRandomVerticalFlip:[216,2,1,""],TensorflowResizeWithRatio:[216,2,1,""],TensorflowTransform:[216,2,1,""],TensorflowTransforms:[216,2,1,""],TensorflowTranspose:[216,2,1,""],TensorflowWrapFunction:[216,2,1,""],ToArray:[216,2,1,""],ToNDArrayTransform:[216,2,1,""],Transforms:[216,2,1,""],Transpose:[216,2,1,""],convert_examples_to_features:[216,1,1,""],get_final_text:[216,1,1,""],get_torchvision_map:[216,1,1,""],read_squad_examples:[216,1,1,""],transform_registry:[216,1,1,""]},"neural_compressor.experimental.data.transforms.transform.RandomResizedCropTFTransform":{get_params:[216,3,1,""]},"neural_compressor.experimental.data.transforms.transform.RandomResizedCropTransform":{get_params:[216,3,1,""]},"neural_compressor.experimental.data.transforms.transform.TFSquadV1PostTransform":{get_postprocess_result:[216,3,1,""],process_result:[216,3,1,""]},"neural_compressor.experimental.data.transforms.transform.TRANSFORMS":{register:[216,3,1,""]},"neural_compressor.experimental.distillation":{Distillation:[217,2,1,""]},"neural_compressor.experimental.distillation.Distillation":{_epoch_ran:[217,4,1,""],best_model:[217,4,1,""],best_score:[217,4,1,""],create_criterion:[217,3,1,""],create_optimizer:[217,3,1,""],eval_frequency:[217,4,1,""],execute:[217,3,1,""],generate_hooks:[217,3,1,""],init_train_cfg:[217,3,1,""],on_post_forward:[217,3,1,""],pre_process:[217,3,1,""]},"neural_compressor.experimental.graph_optimization":{Graph_Optimization:[218,2,1,""]},"neural_compressor.experimental.graph_optimization.Graph_Optimization":{dataset:[218,3,1,""],set_config_by_model:[218,3,1,""]},"neural_compressor.experimental.metric":{BaseMetric:[226,2,1,""],METRICS:[226,2,1,""],bleu:[220,0,0,"-"],bleu_util:[221,0,0,"-"],coco_label_map:[222,0,0,"-"],coco_tools:[223,0,0,"-"],evaluate_squad:[224,0,0,"-"],f1:[225,0,0,"-"],metric:[227,0,0,"-"],metric_registry:[226,1,1,""]},"neural_compressor.experimental.metric.BaseMetric":{reset:[226,3,1,""],result:[226,3,1,""],update:[226,3,1,""]},"neural_compressor.experimental.metric.METRICS":{metrics:[226,4,1,""],register:[226,3,1,""]},"neural_compressor.experimental.metric.bleu":{BLEU:[220,2,1,""],UnicodeRegex:[220,2,1,""],bleu_tokenize:[220,1,1,""]},"neural_compressor.experimental.metric.bleu.BLEU":{labels:[220,4,1,""],predictions:[220,4,1,""],reset:[220,3,1,""],result:[220,3,1,""],update:[220,3,1,""]},"neural_compressor.experimental.metric.bleu.UnicodeRegex":{nondigit_punct_re:[220,4,1,""],property_chars:[220,3,1,""],punct_nondigit_re:[220,4,1,""],symbol_re:[220,4,1,""]},"neural_compressor.experimental.metric.bleu_util":{compute_bleu:[221,1,1,""]},"neural_compressor.experimental.metric.coco_tools":{COCOEvalWrapper:[223,2,1,""],COCOWrapper:[223,2,1,""],ExportSingleImageDetectionBoxesToCoco:[223,1,1,""],ExportSingleImageDetectionMasksToCoco:[223,1,1,""],ExportSingleImageGroundtruthToCoco:[223,1,1,""]},"neural_compressor.experimental.metric.coco_tools.COCOEvalWrapper":{ComputeMetrics:[223,3,1,""],GetAgnosticMode:[223,3,1,""],GetCategory:[223,3,1,""],GetCategoryIdList:[223,3,1,""],accumulate:[223,3,1,""]},"neural_compressor.experimental.metric.coco_tools.COCOWrapper":{LoadAnnotations:[223,3,1,""],dataset:[223,4,1,""],detection_type:[223,4,1,""]},"neural_compressor.experimental.metric.evaluate_squad":{evaluate:[224,1,1,""],exact_match_score:[224,1,1,""],f1_score:[224,1,1,""],metric_max_over_ground_truths:[224,1,1,""]},"neural_compressor.experimental.metric.f1":{evaluate:[225,1,1,""],f1_score:[225,1,1,""],metric_max_over_ground_truths:[225,1,1,""],normalize_answer:[225,1,1,""]},"neural_compressor.experimental.metric.metric":{Accuracy:[227,2,1,""],BaseMetric:[227,2,1,""],COCOmAPv2:[227,2,1,""],F1:[227,2,1,""],GeneralTopK:[227,2,1,""],Loss:[227,2,1,""],MAE:[227,2,1,""],METRICS:[227,2,1,""],MSE:[227,2,1,""],MXNetMetrics:[227,2,1,""],ONNXRTGLUE:[227,2,1,""],ONNXRTITMetrics:[227,2,1,""],ONNXRTQLMetrics:[227,2,1,""],PyTorchLoss:[227,2,1,""],PyTorchMetrics:[227,2,1,""],RMSE:[227,2,1,""],ROC:[227,2,1,""],SquadF1:[227,2,1,""],TensorflowCOCOMAP:[227,2,1,""],TensorflowMAP:[227,2,1,""],TensorflowMetrics:[227,2,1,""],TensorflowTopK:[227,2,1,""],TensorflowVOCMAP:[227,2,1,""],WrapMXNetMetric:[227,2,1,""],WrapONNXRTMetric:[227,2,1,""],WrapPyTorchMetric:[227,2,1,""],mIOU:[227,2,1,""],metric_registry:[227,1,1,""]},"neural_compressor.experimental.metric.metric.Accuracy":{label_list:[227,4,1,""],pred_list:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],sample:[227,4,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.BaseMetric":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.COCOmAPv2":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.F1":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.GeneralTopK":{k:[227,4,1,""],num_correct:[227,4,1,""],num_sample:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.Loss":{reset:[227,3,1,""],result:[227,3,1,""],sample:[227,4,1,""],sum:[227,4,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.MAE":{compare_label:[227,4,1,""],label_list:[227,4,1,""],pred_list:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.METRICS":{metrics:[227,4,1,""],register:[227,3,1,""]},"neural_compressor.experimental.metric.metric.MSE":{compare_label:[227,4,1,""],label_list:[227,4,1,""],pred_list:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.MXNetMetrics":{metrics:[227,4,1,""]},"neural_compressor.experimental.metric.metric.ONNXRTGLUE":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.ONNXRTITMetrics":{metrics:[227,4,1,""]},"neural_compressor.experimental.metric.metric.ONNXRTQLMetrics":{metrics:[227,4,1,""]},"neural_compressor.experimental.metric.metric.PyTorchLoss":{compute:[227,3,1,""],reset:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.PyTorchMetrics":{metrics:[227,4,1,""]},"neural_compressor.experimental.metric.metric.RMSE":{mse:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.ROC":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.SquadF1":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.TensorflowMAP":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.TensorflowMetrics":{metrics:[227,4,1,""]},"neural_compressor.experimental.metric.metric.TensorflowTopK":{k:[227,4,1,""],num_correct:[227,4,1,""],num_sample:[227,4,1,""],reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.WrapMXNetMetric":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.WrapONNXRTMetric":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.WrapPyTorchMetric":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.metric.metric.mIOU":{reset:[227,3,1,""],result:[227,3,1,""],update:[227,3,1,""]},"neural_compressor.experimental.mixed_precision":{MixedPrecision:[228,2,1,""]},"neural_compressor.experimental.mixed_precision.MixedPrecision":{set_config_by_model:[228,3,1,""]},"neural_compressor.experimental.model_conversion":{ModelConversion:[229,2,1,""]},"neural_compressor.experimental.model_conversion.ModelConversion":{dataset:[229,3,1,""]},"neural_compressor.experimental.nas":{BasicNAS:[237,2,1,""],DyNAS:[237,2,1,""],NAS:[237,2,1,""],basic_nas:[230,0,0,"-"],dynas:[231,0,0,"-"],dynast:[236,0,0,"-"],nas:[238,0,0,"-"],nas_utils:[239,0,0,"-"],search_algorithms:[240,0,0,"-"]},"neural_compressor.experimental.nas.BasicNAS":{estimate:[237,3,1,""],execute:[237,3,1,""],init_by_cfg:[237,3,1,""],pre_process:[237,3,1,""]},"neural_compressor.experimental.nas.DyNAS":{create_acc_predictor:[237,3,1,""],create_latency_predictor:[237,3,1,""],create_macs_predictor:[237,3,1,""],estimate:[237,3,1,""],init_cfg:[237,3,1,""],init_for_search:[237,3,1,""],search:[237,3,1,""],select_model_arch:[237,3,1,""]},"neural_compressor.experimental.nas.basic_nas":{BasicNAS:[230,2,1,""]},"neural_compressor.experimental.nas.basic_nas.BasicNAS":{estimate:[230,3,1,""],execute:[230,3,1,""],init_by_cfg:[230,3,1,""],pre_process:[230,3,1,""]},"neural_compressor.experimental.nas.dynas":{DyNAS:[231,2,1,""]},"neural_compressor.experimental.nas.dynas.DyNAS":{create_acc_predictor:[231,3,1,""],create_latency_predictor:[231,3,1,""],create_macs_predictor:[231,3,1,""],estimate:[231,3,1,""],init_cfg:[231,3,1,""],init_for_search:[231,3,1,""],search:[231,3,1,""],select_model_arch:[231,3,1,""]},"neural_compressor.experimental.nas.dynast":{dynas_manager:[232,0,0,"-"],dynas_predictor:[233,0,0,"-"],dynas_search:[234,0,0,"-"],dynas_utils:[235,0,0,"-"]},"neural_compressor.experimental.nas.dynast.dynas_manager":{ParameterManager:[232,2,1,""]},"neural_compressor.experimental.nas.dynast.dynas_manager.ParameterManager":{create_training_set:[232,3,1,""],import_csv:[232,3,1,""],onehot_generic:[232,3,1,""],process_param_dict:[232,3,1,""],random_sample:[232,3,1,""],random_samples:[232,3,1,""],set_seed:[232,3,1,""],translate2param:[232,3,1,""],translate2pymoo:[232,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_predictor":{Predictor:[233,2,1,""]},"neural_compressor.experimental.nas.dynast.dynas_predictor.Predictor":{get_metrics:[233,3,1,""],get_parameters:[233,3,1,""],load:[233,3,1,""],predict:[233,3,1,""],save:[233,3,1,""],train:[233,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_search":{ProblemMultiObjective:[234,2,1,""],SearchAlgoManager:[234,2,1,""]},"neural_compressor.experimental.nas.dynast.dynas_search.SearchAlgoManager":{configure_age:[234,3,1,""],configure_nsga2:[234,3,1,""],run_search:[234,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils":{EvaluationInterface:[235,2,1,""],EvaluationInterfaceMobileNetV3:[235,2,1,""],EvaluationInterfaceResNet50:[235,2,1,""],OFARunner:[235,2,1,""],Runner:[235,2,1,""],TorchVisionReference:[235,2,1,""],get_macs:[235,1,1,""],get_torchvision_model:[235,1,1,""],measure_latency:[235,1,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils.EvaluationInterface":{clear_csv:[235,3,1,""],eval_subnet:[235,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils.EvaluationInterfaceMobileNetV3":{eval_subnet:[235,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils.EvaluationInterfaceResNet50":{eval_subnet:[235,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils.OFARunner":{estimate_accuracy_top1:[235,3,1,""],estimate_latency:[235,3,1,""],estimate_macs:[235,3,1,""],get_subnet:[235,3,1,""],measure_latency:[235,3,1,""],validate_macs:[235,3,1,""],validate_top1:[235,3,1,""]},"neural_compressor.experimental.nas.dynast.dynas_utils.TorchVisionReference":{measure_latency:[235,3,1,""],validate_macs:[235,3,1,""],validate_top1:[235,3,1,""]},"neural_compressor.experimental.nas.nas":{NAS:[238,2,1,""],NASBase:[238,2,1,""]},"neural_compressor.experimental.nas.nas.NASBase":{count_model_parameters:[238,3,1,""],dump_search_results:[238,3,1,""],estimate:[238,3,1,""],find_best_model_archs:[238,3,1,""],init_search_cfg:[238,3,1,""],load_search_results:[238,3,1,""],metrics_conversion:[238,3,1,""],params_vec2params_dict:[238,3,1,""],search:[238,3,1,""],select_model_arch:[238,3,1,""]},"neural_compressor.experimental.nas.nas_utils":{create_search_space_pool:[239,1,1,""],find_pareto_front:[239,1,1,""],nas_registry:[239,1,1,""]},"neural_compressor.experimental.nas.search_algorithms":{BayesianOptimizationSearcher:[240,2,1,""],GridSearcher:[240,2,1,""],RandomSearcher:[240,2,1,""],Searcher:[240,2,1,""]},"neural_compressor.experimental.nas.search_algorithms.BayesianOptimizationSearcher":{get_feedback:[240,3,1,""],indices2params_vec:[240,3,1,""],suggest:[240,3,1,""]},"neural_compressor.experimental.nas.search_algorithms.GridSearcher":{suggest:[240,3,1,""]},"neural_compressor.experimental.nas.search_algorithms.RandomSearcher":{suggest:[240,3,1,""]},"neural_compressor.experimental.nas.search_algorithms.Searcher":{get_feedback:[240,3,1,""],params_vec2params_dict:[240,3,1,""],suggest:[240,3,1,""]},"neural_compressor.experimental.pruning":{Pruning:[241,2,1,""],TfPruningCallback:[241,2,1,""]},"neural_compressor.experimental.pruning.Pruning":{conf:[241,4,1,""],execute:[241,3,1,""],generate_hooks:[241,3,1,""],generate_pruners:[241,3,1,""],pre_process:[241,3,1,""],pruners:[241,4,1,""]},"neural_compressor.experimental.pruning.TfPruningCallback":{on_after_compute_loss:[241,3,1,""],on_batch_begin:[241,3,1,""],on_batch_end:[241,3,1,""],on_epoch_begin:[241,3,1,""],on_epoch_end:[241,3,1,""],on_step_begin:[241,3,1,""],on_step_end:[241,3,1,""],on_train_begin:[241,3,1,""],on_train_end:[241,3,1,""],post_epoch_end:[241,3,1,""],pre_epoch_begin:[241,3,1,""]},"neural_compressor.experimental.pruning_recipes":{PATTERNS:[242,2,1,""],patterns:[243,0,0,"-"]},"neural_compressor.experimental.pruning_recipes.PATTERNS":{patterns:[242,4,1,""],support_pattern:[242,3,1,""]},"neural_compressor.experimental.pruning_recipes.patterns":{PATTERNS:[243,2,1,""],pattern:[244,0,0,"-"],tile_pattern:[245,0,0,"-"]},"neural_compressor.experimental.pruning_recipes.patterns.PATTERNS":{patterns:[243,4,1,""],support_pattern:[243,3,1,""]},"neural_compressor.experimental.pruning_recipes.patterns.pattern":{PATTERNS:[244,2,1,""],PatternBase:[244,2,1,""],pattern_registry:[244,1,1,""]},"neural_compressor.experimental.pruning_recipes.patterns.pattern.PATTERNS":{patterns:[244,4,1,""],support_pattern:[244,3,1,""]},"neural_compressor.experimental.pruning_recipes.patterns.pattern.PatternBase":{compute_sparsity:[244,3,1,""],reduce:[244,3,1,""],reshape:[244,3,1,""]},"neural_compressor.experimental.pruning_recipes.patterns.tile_pattern":{TilePatternBase:[245,2,1,""],TilePattern_1x16:[245,2,1,""],TilePattern_1x1:[245,2,1,""],TilePattern_1x2:[245,2,1,""],TilePattern_2x2:[245,2,1,""],TilePattern_4x1:[245,2,1,""]},"neural_compressor.experimental.pruning_recipes.patterns.tile_pattern.TilePatternBase":{compute_sparsity:[245,3,1,""],repeat_mask:[245,3,1,""]},"neural_compressor.experimental.pytorch_pruner":{logger:[247,0,0,"-"],patterns:[248,0,0,"-"],prune_utils:[249,0,0,"-"],pruner:[250,0,0,"-"],pruning:[251,0,0,"-"],scheduler:[252,0,0,"-"]},"neural_compressor.experimental.pytorch_pruner.patterns":{Pattern:[248,2,1,""],PatternNInM:[248,2,1,""],PatternNxM:[248,2,1,""],get_pattern:[248,1,1,""],register_pattern:[248,1,1,""]},"neural_compressor.experimental.pytorch_pruner.patterns.Pattern":{get_block_size_dict:[248,3,1,""],get_mask_single:[248,3,1,""],get_masks:[248,3,1,""],get_masks_global:[248,3,1,""],get_masks_local:[248,3,1,""],get_pattern_lock_masks:[248,3,1,""],get_sparsity_ratio:[248,3,1,""],is_global:[248,4,1,""],pattern:[248,4,1,""]},"neural_compressor.experimental.pytorch_pruner.patterns.PatternNInM":{M:[248,4,1,""],N:[248,4,1,""],get_masks_global:[248,3,1,""],get_pattern_lock_masks:[248,3,1,""],get_sparsity_ratio:[248,3,1,""]},"neural_compressor.experimental.pytorch_pruner.patterns.PatternNxM":{block_size:[248,4,1,""],get_block_size_dict:[248,3,1,""],get_masks_global:[248,3,1,""],get_pattern_lock_masks:[248,3,1,""],get_sparsity_ratio:[248,3,1,""]},"neural_compressor.experimental.pytorch_pruner.prune_utils":{check_config:[249,1,1,""],parse_not_to_prune:[249,1,1,""],parse_to_prune:[249,1,1,""],process_and_check_config:[249,1,1,""],process_config:[249,1,1,""],reset_non_value_to_default:[249,1,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner":{MagnitudePruner:[250,2,1,""],PatternLockPruner:[250,2,1,""],Pruner:[250,2,1,""],SnipMomentumPruner:[250,2,1,""],SnipPruner:[250,2,1,""],get_pruner:[250,1,1,""],register_pruners:[250,1,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner.MagnitudePruner":{update_scores:[250,3,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner.PatternLockPruner":{on_after_optimizer_step:[250,3,1,""],on_step_begin:[250,3,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner.Pruner":{check_is_pruned_step:[250,3,1,""],config:[250,4,1,""],current_sparsity_ratio:[250,4,1,""],end_step:[250,4,1,""],global_step:[250,4,1,""],mask_weights:[250,3,1,""],masks:[250,4,1,""],max_sparsity_ratio_per_layer:[250,4,1,""],modules:[250,4,1,""],on_after_eval:[250,3,1,""],on_after_optimizer_step:[250,3,1,""],on_before_eval:[250,3,1,""],on_before_optimizer_step:[250,3,1,""],on_epoch_begin:[250,3,1,""],on_epoch_end:[250,3,1,""],on_step_begin:[250,3,1,""],on_step_end:[250,3,1,""],on_train_begin:[250,3,1,""],on_train_end:[250,3,1,""],pattern:[250,4,1,""],scheduler:[250,4,1,""],scores:[250,4,1,""],start_step:[250,4,1,""],target_sparsity_ratio:[250,4,1,""],update_frequency_on_step:[250,4,1,""],update_scores:[250,3,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner.SnipMomentumPruner":{on_after_optimizer_step:[250,3,1,""]},"neural_compressor.experimental.pytorch_pruner.pruner.SnipPruner":{on_after_optimizer_step:[250,3,1,""]},"neural_compressor.experimental.pytorch_pruner.pruning":{Pruning:[251,2,1,""]},"neural_compressor.experimental.pytorch_pruner.pruning.Pruning":{config_file_path:[251,4,1,""],get_sparsity_ratio:[251,3,1,""],model:[251,4,1,""],on_after_eval:[251,3,1,""],on_after_optimizer_step:[251,3,1,""],on_before_eval:[251,3,1,""],on_before_optimizer_step:[251,3,1,""],on_epoch_begin:[251,3,1,""],on_epoch_end:[251,3,1,""],on_step_begin:[251,3,1,""],on_step_end:[251,3,1,""],on_train_begin:[251,3,1,""],on_train_end:[251,3,1,""],pruner_info:[251,4,1,""],pruners:[251,4,1,""],update_items_for_all_pruners:[251,3,1,""]},"neural_compressor.experimental.pytorch_pruner.scheduler":{IterativeScheduler:[252,2,1,""],OneshotScheduler:[252,2,1,""],Scheduler:[252,2,1,""],get_scheduler:[252,1,1,""],register_scheduler:[252,1,1,""]},"neural_compressor.experimental.pytorch_pruner.scheduler.IterativeScheduler":{update_sparsity_ratio:[252,3,1,""]},"neural_compressor.experimental.pytorch_pruner.scheduler.OneshotScheduler":{update_sparsity_ratio:[252,3,1,""]},"neural_compressor.experimental.pytorch_pruner.scheduler.Scheduler":{config:[252,4,1,""],update_sparsity_ratio:[252,3,1,""]},"neural_compressor.experimental.quantization":{Quantization:[253,2,1,""]},"neural_compressor.experimental.quantization.Quantization":{dataset:[253,3,1,""],execute:[253,3,1,""],pre_process:[253,3,1,""]},"neural_compressor.experimental.scheduler":{Scheduler:[254,2,1,""]},"neural_compressor.experimental.scheduler.Scheduler":{append:[254,3,1,""],combine:[254,3,1,""]},"neural_compressor.metric":{BaseMetric:[256,2,1,""],METRICS:[256,2,1,""],metric_registry:[256,1,1,""]},"neural_compressor.metric.BaseMetric":{reset:[256,3,1,""],result:[256,3,1,""],update:[256,3,1,""]},"neural_compressor.metric.METRICS":{metrics:[256,4,1,""],register:[256,3,1,""]},"neural_compressor.model":{BaseModel:[259,2,1,""],base_model:[258,0,0,"-"],model:[260,0,0,"-"],nets_factory:[261,0,0,"-"],onnx_model:[262,0,0,"-"],torch_model:[263,0,0,"-"]},"neural_compressor.model.BaseModel":{"export":[259,3,1,""],framework:[259,3,1,""],save:[259,3,1,""]},"neural_compressor.model.base_model":{BaseModel:[258,2,1,""]},"neural_compressor.model.base_model.BaseModel":{"export":[258,3,1,""],framework:[258,3,1,""],save:[258,3,1,""]},"neural_compressor.model.model":{MXNetModel:[260,2,1,""],TensorflowBaseModel:[260,2,1,""],TensorflowCheckpointModel:[260,2,1,""],TensorflowSavedModelModel:[260,2,1,""],checkpoint_session:[260,1,1,""],estimator_session:[260,1,1,""],frozen_pb_session:[260,1,1,""],get_model_fwk_name:[260,1,1,""],get_model_type:[260,1,1,""],graph_def_session:[260,1,1,""],graph_session:[260,1,1,""],keras_session:[260,1,1,""],load_saved_model:[260,1,1,""],saved_model_session:[260,1,1,""],slim_session:[260,1,1,""],validate_and_inference_input_output:[260,1,1,""],validate_graph_node:[260,1,1,""]},"neural_compressor.model.model.MXNetModel":{framework:[260,3,1,""],save:[260,3,1,""]},"neural_compressor.model.model.TensorflowBaseModel":{convert:[260,3,1,""],framework:[260,3,1,""],save:[260,3,1,""]},"neural_compressor.model.model.TensorflowSavedModelModel":{report_sparsity:[260,3,1,""],save:[260,3,1,""]},"neural_compressor.model.onnx_model":{ONNXModel:[262,2,1,""]},"neural_compressor.model.onnx_model.ONNXModel":{find_node_by_name:[262,3,1,""],find_nodes_by_initializer:[262,3,1,""],framework:[262,3,1,""],get_scale_zero:[262,3,1,""],save:[262,3,1,""],save_model_to_file:[262,3,1,""]},"neural_compressor.model.torch_model":{PyTorchBaseModel:[263,2,1,""],PyTorchFXModel:[263,2,1,""],PyTorchIpexModel:[263,2,1,""],PyTorchModel:[263,2,1,""]},"neural_compressor.model.torch_model.PyTorchBaseModel":{framework:[263,3,1,""],get_all_weight_names:[263,3,1,""],get_gradient:[263,3,1,""],get_inputs:[263,3,1,""],get_weight:[263,3,1,""],prune_weights_:[263,3,1,""],report_sparsity:[263,3,1,""],update_gradient:[263,3,1,""],update_weights:[263,3,1,""]},"neural_compressor.model.torch_model.PyTorchIpexModel":{save:[263,3,1,""]},"neural_compressor.model.torch_model.PyTorchModel":{"export":[263,3,1,""],save:[263,3,1,""]},"neural_compressor.objective":{Accuracy:[264,2,1,""],Footprint:[264,2,1,""],ModelSize:[264,2,1,""],Objective:[264,2,1,""],Performance:[264,2,1,""],objective_registry:[264,1,1,""]},"neural_compressor.objective.Accuracy":{end:[264,3,1,""],start:[264,3,1,""]},"neural_compressor.objective.Footprint":{end:[264,3,1,""],start:[264,3,1,""]},"neural_compressor.objective.ModelSize":{end:[264,3,1,""],start:[264,3,1,""]},"neural_compressor.objective.Objective":{end:[264,3,1,""],reset:[264,3,1,""],result:[264,3,1,""],result_list:[264,3,1,""],start:[264,3,1,""]},"neural_compressor.objective.Performance":{end:[264,3,1,""],start:[264,3,1,""]},"neural_compressor.pruners":{gradient_sensitivity:[265,0,0,"-"],group_lasso:[266,0,0,"-"],magnitude:[268,0,0,"-"],pattern_lock:[269,0,0,"-"],pruner:[270,0,0,"-"]},"neural_compressor.pruners.pruner":{pruner_registry:[270,1,1,""]},"neural_compressor.pruning":{Pruning:[271,2,1,""]},"neural_compressor.pruning.Pruning":{on_epoch_begin:[271,3,1,""],on_epoch_end:[271,3,1,""],on_step_begin:[271,3,1,""],on_step_end:[271,3,1,""]},"neural_compressor.quantization":{Quantization:[272,2,1,""],fit:[272,1,1,""]},"neural_compressor.strategy":{auto_mixed_precision:[273,0,0,"-"],basic:[274,0,0,"-"],bayesian:[275,0,0,"-"],exhaustive:[276,0,0,"-"],mse:[278,0,0,"-"],random:[279,0,0,"-"],st_utils:[280,0,0,"-"],strategy:[284,0,0,"-"]},"neural_compressor.strategy.auto_mixed_precision":{AutoMixedPrecisionTuneStrategy:[273,2,1,""]},"neural_compressor.strategy.auto_mixed_precision.AutoMixedPrecisionTuneStrategy":{next_tune_cfg:[273,3,1,""],traverse:[273,3,1,""]},"neural_compressor.strategy.basic":{BasicTuneStrategy:[274,2,1,""]},"neural_compressor.strategy.basic.BasicTuneStrategy":{next_tune_cfg:[274,3,1,""]},"neural_compressor.strategy.bayesian":{BayesianTuneStrategy:[275,2,1,""],TargetSpace:[275,2,1,""],acq_max:[275,1,1,""]},"neural_compressor.strategy.bayesian.BayesianTuneStrategy":{next_tune_cfg:[275,3,1,""]},"neural_compressor.strategy.bayesian.TargetSpace":{get_target:[275,3,1,""],max:[275,3,1,""],random_sample:[275,3,1,""],register:[275,3,1,""],res:[275,3,1,""]},"neural_compressor.strategy.exhaustive":{ExhaustiveTuneStrategy:[276,2,1,""]},"neural_compressor.strategy.exhaustive.ExhaustiveTuneStrategy":{next_tune_cfg:[276,3,1,""]},"neural_compressor.strategy.mse":{MSETuneStrategy:[278,2,1,""]},"neural_compressor.strategy.mse.MSETuneStrategy":{mse_impact_lst:[278,3,1,""],mse_metric_gap:[278,3,1,""],next_tune_cfg:[278,3,1,""]},"neural_compressor.strategy.random":{RandomTuneStrategy:[279,2,1,""]},"neural_compressor.strategy.random.RandomTuneStrategy":{next_tune_cfg:[279,3,1,""]},"neural_compressor.strategy.st_utils":{tuning_sampler:[281,0,0,"-"],tuning_space:[282,0,0,"-"],tuning_structs:[283,0,0,"-"]},"neural_compressor.strategy.strategy":{TuneStrategy:[284,2,1,""],strategy_registry:[284,1,1,""]},"neural_compressor.strategy.strategy.TuneStrategy":{next_tune_cfg:[284,3,1,""],stop:[284,3,1,""],traverse:[284,3,1,""]},"neural_compressor.training":{CompressionManager:[285,2,1,""],prepare_compression:[285,1,1,""]},"neural_compressor.training.CompressionManager":{"export":[285,3,1,""],save:[285,3,1,""]},"neural_compressor.utils":{KL_Divergence:[289,2,1,""],LayerHistogramCollector:[289,2,1,""],collect_layer_histogram:[286,0,0,"-"],constant:[287,0,0,"-"],create_obj_from_config:[288,0,0,"-"],kl_divergence:[290,0,0,"-"],load_huggingface:[291,0,0,"-"],logger:[292,0,0,"-"],options:[293,0,0,"-"],pytorch:[294,0,0,"-"],utility:[295,0,0,"-"]},"neural_compressor.utils.KL_Divergence":{expand_quantized_bins:[289,3,1,""],get_threshold:[289,3,1,""],safe_entropy:[289,3,1,""]},"neural_compressor.utils.LayerHistogramCollector":{collect:[289,3,1,""]},"neural_compressor.utils.collect_layer_histogram":{LayerHistogramCollector:[286,2,1,""]},"neural_compressor.utils.collect_layer_histogram.LayerHistogramCollector":{collect:[286,3,1,""]},"neural_compressor.utils.create_obj_from_config":{create_eval_func:[288,1,1,""],create_train_func:[288,1,1,""]},"neural_compressor.utils.kl_divergence":{KL_Divergence:[290,2,1,""]},"neural_compressor.utils.kl_divergence.KL_Divergence":{expand_quantized_bins:[290,3,1,""],get_threshold:[290,3,1,""],safe_entropy:[290,3,1,""]},"neural_compressor.utils.pytorch":{load:[294,1,1,""]},"neural_compressor.utils.utility":{LazyImport:[295,2,1,""],MODE:[295,2,1,""],combine_histogram:[295,1,1,""],dump_data_to_local:[295,1,1,""],dump_elapsed_time:[295,1,1,""],equal_dicts:[295,1,1,""],get_size:[295,1,1,""],get_tuning_history:[295,1,1,""],load_data_from_pkl:[295,1,1,""],recover:[295,1,1,""]},"neural_compressor.ux":{components:[368,0,0,"-"],inc_bench:[424,0,0,"-"],utils:[433,0,0,"-"],web:[458,0,0,"-"]},"neural_compressor.ux.components":{benchmark:[299,0,0,"-"],config_generator:[303,0,0,"-"],configuration_wizard:[310,0,0,"-"],db_manager:[344,0,0,"-"],diagnosis:[349,0,0,"-"],file_browser:[357,0,0,"-"],graph:[363,0,0,"-"],jobs_management:[369,0,0,"-"],manage_workspace:[373,0,0,"-"],model:[375,0,0,"-"],model_zoo:[394,0,0,"-"],names_mapper:[396,0,0,"-"],optimization:[403,0,0,"-"],profiling:[416,0,0,"-"]},"neural_compressor.ux.components.benchmark":{Benchmarks:[299,2,1,""],benchmark:[296,0,0,"-"],benchmark_model:[297,0,0,"-"],execute_benchmark:[298,0,0,"-"]},"neural_compressor.ux.components.benchmark.benchmark":{Benchmark:[296,2,1,""],DataloaderInterface:[296,2,1,""]},"neural_compressor.ux.components.benchmark.benchmark.Benchmark":{execute:[296,3,1,""],generate_config:[296,3,1,""]},"neural_compressor.ux.components.benchmark.benchmark_model":{benchmark_model:[297,1,1,""],parse_args:[297,1,1,""],set_eager_execution:[297,1,1,""]},"neural_compressor.ux.components.benchmark.execute_benchmark":{benchmark_result_update:[298,1,1,""],benchmark_result_update_pytorch_script:[298,1,1,""],execute_benchmark:[298,1,1,""],execute_real_benchmark:[298,1,1,""],pytorch_script_bench_optimizations:[298,1,1,""],pytorch_script_bench_original_model:[298,1,1,""]},"neural_compressor.ux.components.config_generator":{benchmark_config_generator:[300,0,0,"-"],config_generator:[301,0,0,"-"],graph_optimization_config_generator:[302,0,0,"-"],mixed_precision_config_generator:[304,0,0,"-"],profiling_config_generator:[305,0,0,"-"],quantization_config_generator:[306,0,0,"-"]},"neural_compressor.ux.components.config_generator.benchmark_config_generator":{BenchmarkConfigGenerator:[300,2,1,""]},"neural_compressor.ux.components.config_generator.benchmark_config_generator.BenchmarkConfigGenerator":{generate:[300,3,1,""],generate_accuracy_config:[300,3,1,""],generate_evaluation_config:[300,3,1,""],generate_performance_config:[300,3,1,""]},"neural_compressor.ux.components.config_generator.config_generator":{ConfigGenerator:[301,2,1,""]},"neural_compressor.ux.components.config_generator.config_generator.ConfigGenerator":{generate:[301,3,1,""],generate_dataloader_config:[301,3,1,""],generate_model_config:[301,3,1,""],get_predefined_config_path:[301,3,1,""]},"neural_compressor.ux.components.config_generator.graph_optimization_config_generator":{GraphOptimizationConfigGenerator:[302,2,1,""]},"neural_compressor.ux.components.config_generator.graph_optimization_config_generator.GraphOptimizationConfigGenerator":{generate:[302,3,1,""],generate_evaluation_config:[302,3,1,""],generate_graph_optimization_config:[302,3,1,""]},"neural_compressor.ux.components.config_generator.mixed_precision_config_generator":{MixedPrecisionConfigGenerator:[304,2,1,""]},"neural_compressor.ux.components.config_generator.mixed_precision_config_generator.MixedPrecisionConfigGenerator":{generate:[304,3,1,""],generate_evaluation_config:[304,3,1,""],generate_mixed_precision_config:[304,3,1,""]},"neural_compressor.ux.components.config_generator.profiling_config_generator":{ProfilingConfigGenerator:[305,2,1,""]},"neural_compressor.ux.components.config_generator.profiling_config_generator.ProfilingConfigGenerator":{generate:[305,3,1,""]},"neural_compressor.ux.components.config_generator.quantization_config_generator":{QuantizationConfigGenerator:[306,2,1,""]},"neural_compressor.ux.components.config_generator.quantization_config_generator.QuantizationConfigGenerator":{generate:[306,3,1,""],generate_evaluation_config:[306,3,1,""],generate_quantization_config:[306,3,1,""],generate_tuning_config:[306,3,1,""]},"neural_compressor.ux.components.configuration_wizard":{configuration_parser:[307,0,0,"-"],get_boundary_nodes:[308,0,0,"-"],get_configuration:[309,0,0,"-"],params_feeder:[311,0,0,"-"]},"neural_compressor.ux.components.configuration_wizard.configuration_parser":{ConfigurationParser:[307,2,1,""],normalize_string_list:[307,1,1,""],parse_list_value:[307,1,1,""],parse_multidim_list:[307,1,1,""]},"neural_compressor.ux.components.configuration_wizard.configuration_parser.ConfigurationParser":{get_param_type:[307,3,1,""],parse:[307,3,1,""],parse_dataloader:[307,3,1,""],parse_evaluation_data:[307,3,1,""],parse_metric:[307,3,1,""],parse_transforms:[307,3,1,""],parse_value:[307,3,1,""]},"neural_compressor.ux.components.configuration_wizard.get_boundary_nodes":{get_boundary_nodes:[308,1,1,""]},"neural_compressor.ux.components.configuration_wizard.get_configuration":{get_predefined_configuration:[309,1,1,""],update_config_to_machine_specification:[309,1,1,""]},"neural_compressor.ux.components.configuration_wizard.params_feeder":{Feeder:[311,2,1,""],get_possible_values:[311,1,1,""]},"neural_compressor.ux.components.configuration_wizard.params_feeder.Feeder":{feed:[311,3,1,""],get_dataloaders:[311,3,1,""],get_domains:[311,3,1,""],get_frameworks:[311,3,1,""],get_metrics:[311,3,1,""],get_models:[311,3,1,""],get_objectives:[311,3,1,""],get_precisions:[311,3,1,""],get_quantization_approaches:[311,3,1,""],get_strategies:[311,3,1,""],get_transforms:[311,3,1,""]},"neural_compressor.ux.components.db_manager":{DBManager:[344,2,1,""],db_manager:[312,0,0,"-"],db_models:[321,0,0,"-"],db_operations:[339,0,0,"-"],params_interfaces:[345,0,0,"-"],utils:[346,0,0,"-"]},"neural_compressor.ux.components.db_manager.DBManager":{create_all:[344,3,1,""],create_sqlalchemy_engine:[344,3,1,""],initialize_database:[344,3,1,""]},"neural_compressor.ux.components.db_manager.db_manager":{DBManager:[312,2,1,""]},"neural_compressor.ux.components.db_manager.db_manager.DBManager":{create_all:[312,3,1,""],create_sqlalchemy_engine:[312,3,1,""],initialize_database:[312,3,1,""]},"neural_compressor.ux.components.db_manager.db_models":{benchmark:[313,0,0,"-"],benchmark_result:[314,0,0,"-"],dataloader:[315,0,0,"-"],dataset:[316,0,0,"-"],domain:[317,0,0,"-"],domain_flavour:[318,0,0,"-"],example:[319,0,0,"-"],framework:[320,0,0,"-"],metric:[322,0,0,"-"],model:[323,0,0,"-"],optimization:[324,0,0,"-"],optimization_type:[325,0,0,"-"],precision:[326,0,0,"-"],profiling:[327,0,0,"-"],profiling_result:[328,0,0,"-"],project:[329,0,0,"-"],transform:[330,0,0,"-"],tuning_details:[331,0,0,"-"],tuning_history:[332,0,0,"-"]},"neural_compressor.ux.components.db_manager.db_models.benchmark":{Benchmark:[313,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.benchmark.Benchmark":{add:[313,3,1,""],build_info:[313,3,1,""],clean_status:[313,3,1,""],delete_benchmark:[313,3,1,""],details:[313,3,1,""],list:[313,3,1,""],update_batch_size:[313,3,1,""],update_config_path:[313,3,1,""],update_cores_per_instance:[313,3,1,""],update_dataset:[313,3,1,""],update_duration:[313,3,1,""],update_execution_command:[313,3,1,""],update_log_path:[313,3,1,""],update_mode:[313,3,1,""],update_number_of_instance:[313,3,1,""],update_status:[313,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.benchmark_result":{BenchmarkResult:[314,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.benchmark_result.BenchmarkResult":{add:[314,3,1,""],build_info:[314,3,1,""],update_accuracy:[314,3,1,""],update_performance:[314,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.dataloader":{Dataloader:[315,2,1,""],fill_dictionary:[315,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.dataloader.Dataloader":{list:[315,3,1,""],list_by_framework:[315,3,1,""],query_to_list:[315,3,1,""],update_params:[315,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.dataset":{Dataset:[316,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.dataset.Dataset":{add:[316,3,1,""],build_info:[316,3,1,""],delete_dataset:[316,3,1,""],details:[316,3,1,""],list:[316,3,1,""],update_template_path:[316,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.domain":{Domain:[317,2,1,""],fill_dictionary:[317,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.domain.Domain":{get_domain_id:[317,3,1,""],list:[317,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.domain_flavour":{DomainFlavour:[318,2,1,""],fill_dictionary:[318,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.domain_flavour.DomainFlavour":{get_domain_flavour_id:[318,3,1,""],list:[318,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.example":{Example:[319,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.framework":{Framework:[320,2,1,""],fill_dictionary:[320,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.framework.Framework":{get_framework_id:[320,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.metric":{Metric:[322,2,1,""],fill_dictionary:[322,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.metric.Metric":{list:[322,3,1,""],list_by_framework:[322,3,1,""],query_to_list:[322,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.model":{Model:[323,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.model.Model":{add:[323,3,1,""],build_info:[323,3,1,""],delete_model:[323,3,1,""],details:[323,3,1,""],list:[323,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.optimization":{Optimization:[324,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.optimization.Optimization":{add:[324,3,1,""],build_info:[324,3,1,""],clean_status:[324,3,1,""],delete_optimization:[324,3,1,""],details:[324,3,1,""],get_optimization_by_project_and_model:[324,3,1,""],get_pinned_benchmarks:[324,3,1,""],list:[324,3,1,""],pin_accuracy_benchmark:[324,3,1,""],pin_performance_benchmark:[324,3,1,""],unpin_benchmark:[324,3,1,""],update_batch_size:[324,3,1,""],update_config_path:[324,3,1,""],update_dataset:[324,3,1,""],update_duration:[324,3,1,""],update_execution_command:[324,3,1,""],update_log_path:[324,3,1,""],update_optimized_model:[324,3,1,""],update_precision:[324,3,1,""],update_sampling_size:[324,3,1,""],update_status:[324,3,1,""],update_tuning_details:[324,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.optimization_type":{OptimizationType:[325,2,1,""],fill_dictionary:[325,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.optimization_type.OptimizationType":{add:[325,3,1,""],get_optimization_type_by_id:[325,3,1,""],get_optimization_type_by_name:[325,3,1,""],get_optimization_type_for_precision:[325,3,1,""],get_optimization_type_id:[325,3,1,""],list:[325,3,1,""],list_for_precision:[325,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.precision":{Precision:[326,2,1,""],fill_dictionary:[326,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.precision.Precision":{add:[326,3,1,""],get_precision_by_id:[326,3,1,""],get_precision_by_name:[326,3,1,""],get_precision_id:[326,3,1,""],list:[326,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.profiling":{Profiling:[327,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.profiling.Profiling":{add:[327,3,1,""],build_info:[327,3,1,""],clean_status:[327,3,1,""],delete_profiling:[327,3,1,""],details:[327,3,1,""],list:[327,3,1,""],update_dataset:[327,3,1,""],update_duration:[327,3,1,""],update_execution_command:[327,3,1,""],update_log_path:[327,3,1,""],update_num_threads:[327,3,1,""],update_status:[327,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.profiling_result":{ProfilingResult:[328,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.profiling_result.ProfilingResult":{add:[328,3,1,""],build_info:[328,3,1,""],bulk_add:[328,3,1,""],delete_results:[328,3,1,""],get_results:[328,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.project":{Project:[329,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.project.Project":{create_project:[329,3,1,""],delete_project:[329,3,1,""],get_model_by_name:[329,3,1,""],list_projects:[329,3,1,""],project_details:[329,3,1,""],update_notes:[329,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.transform":{Transform:[330,2,1,""],fill_dictionary:[330,1,1,""]},"neural_compressor.ux.components.db_manager.db_models.transform.Transform":{list:[330,3,1,""],list_by_domain:[330,3,1,""],list_by_framework:[330,3,1,""],query_to_list:[330,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.tuning_details":{TuningDetails:[331,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.tuning_details.TuningDetails":{add:[331,3,1,""],delete_tuning_details:[331,3,1,""],update:[331,3,1,""],update_tuning_history:[331,3,1,""]},"neural_compressor.ux.components.db_manager.db_models.tuning_history":{TuningHistory:[332,2,1,""]},"neural_compressor.ux.components.db_manager.db_models.tuning_history.TuningHistory":{add:[332,3,1,""],build_info:[332,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations":{BenchmarkAPIInterface:[339,2,1,""],DatasetAPIInterface:[339,2,1,""],DiagnosisAPIInterface:[339,2,1,""],DictionariesAPIInterface:[339,2,1,""],ExamplesAPIInterface:[339,2,1,""],ModelAPIInterface:[339,2,1,""],OptimizationAPIInterface:[339,2,1,""],ProfilingAPIInterface:[339,2,1,""],ProjectAPIInterface:[339,2,1,""],benchmark_api_interface:[333,0,0,"-"],dataset_api_interface:[334,0,0,"-"],db_operations:[335,0,0,"-"],diagnosis_api_interface:[336,0,0,"-"],dictionaries_api_interface:[337,0,0,"-"],examples_api_interface:[338,0,0,"-"],model_api_interface:[340,0,0,"-"],optimization_api_interface:[341,0,0,"-"],profiling_api_interface:[342,0,0,"-"],project_api_interface:[343,0,0,"-"]},"neural_compressor.ux.components.db_manager.db_operations.BenchmarkAPIInterface":{add_benchmark:[339,3,1,""],add_result:[339,3,1,""],clean_status:[339,3,1,""],delete_benchmark:[339,3,1,""],edit_benchmark:[339,3,1,""],get_benchmark_details:[339,3,1,""],list_benchmarks:[339,3,1,""],parse_benchmark_data:[339,3,1,""],parse_benchmark_edit_data:[339,3,1,""],update_benchmark_accuracy:[339,3,1,""],update_benchmark_duration:[339,3,1,""],update_benchmark_performance:[339,3,1,""],update_benchmark_status:[339,3,1,""],update_execution_command:[339,3,1,""],update_paths:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.DatasetAPIInterface":{add_dataset:[339,3,1,""],check_if_custom_metric_or_dataloader:[339,3,1,""],dataloader_path:[339,3,1,""],delete_dataset:[339,3,1,""],generate_custom_template:[339,3,1,""],generate_template:[339,3,1,""],get_dataset_details:[339,3,1,""],get_predefined_dataset:[339,3,1,""],list_datasets:[339,3,1,""],parse_dataset_data:[339,3,1,""],prepare_predefined_dataloader:[339,3,1,""],prepare_predefined_transform:[339,3,1,""],set_template_path:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.DiagnosisAPIInterface":{generate_optimization:[339,3,1,""],get_op_details:[339,3,1,""],get_op_list:[339,3,1,""],histogram:[339,3,1,""],model_wise_params:[339,3,1,""],parse_model_wise_config:[339,3,1,""],parse_op_wise_config:[339,3,1,""],parse_optimization_data:[339,3,1,""],parse_wise_parameters:[339,3,1,""],set_op_wise_pattern_precision:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.DictionariesAPIInterface":{list_dataloaders:[339,3,1,""],list_dataloaders_by_framework:[339,3,1,""],list_domain_flavours:[339,3,1,""],list_domains:[339,3,1,""],list_metrics:[339,3,1,""],list_metrics_by_framework:[339,3,1,""],list_optimization_types:[339,3,1,""],list_optimization_types_for_precision:[339,3,1,""],list_precisions:[339,3,1,""],list_transforms:[339,3,1,""],list_transforms_by_domain:[339,3,1,""],list_transforms_by_framework:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.ExamplesAPIInterface":{create_project:[339,3,1,""],get_optimization_data:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.ModelAPIInterface":{add_model:[339,3,1,""],delete_model:[339,3,1,""],get_model_details:[339,3,1,""],list_models:[339,3,1,""],parse_model_data:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.OptimizationAPIInterface":{add_optimization:[339,3,1,""],add_quantization_optimization:[339,3,1,""],add_standard_optimization:[339,3,1,""],add_tuning_history:[339,3,1,""],clean_status:[339,3,1,""],delete_optimization:[339,3,1,""],edit_optimization:[339,3,1,""],get_optimization_details:[339,3,1,""],list_optimizations:[339,3,1,""],parse_optimization_data:[339,3,1,""],parse_optimization_edit_data:[339,3,1,""],parse_tuning_history:[339,3,1,""],pin_accuracy_benchmark:[339,3,1,""],pin_performance_benchmark:[339,3,1,""],update_execution_command:[339,3,1,""],update_optimization_duration:[339,3,1,""],update_optimization_status:[339,3,1,""],update_optimized_model:[339,3,1,""],update_paths:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.ProfilingAPIInterface":{add_profiling:[339,3,1,""],add_result:[339,3,1,""],bulk_add_results:[339,3,1,""],clean_status:[339,3,1,""],delete_profiling:[339,3,1,""],edit_profiling:[339,3,1,""],get_profiling_details:[339,3,1,""],list_profilings:[339,3,1,""],parse_profiling_data:[339,3,1,""],parse_profiling_edit_data:[339,3,1,""],parse_profiling_result_data:[339,3,1,""],update_execution_command:[339,3,1,""],update_log_path:[339,3,1,""],update_profiling_duration:[339,3,1,""],update_profiling_status:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.ProjectAPIInterface":{add_dummy_dataset:[339,3,1,""],add_model:[339,3,1,""],create_project:[339,3,1,""],delete_project:[339,3,1,""],get_project_details:[339,3,1,""],list_projects:[339,3,1,""],update_project_notes:[339,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.benchmark_api_interface":{BenchmarkAPIInterface:[333,2,1,""],before_delete_benchmark_entry:[333,1,1,""]},"neural_compressor.ux.components.db_manager.db_operations.benchmark_api_interface.BenchmarkAPIInterface":{add_benchmark:[333,3,1,""],add_result:[333,3,1,""],clean_status:[333,3,1,""],delete_benchmark:[333,3,1,""],edit_benchmark:[333,3,1,""],get_benchmark_details:[333,3,1,""],list_benchmarks:[333,3,1,""],parse_benchmark_data:[333,3,1,""],parse_benchmark_edit_data:[333,3,1,""],update_benchmark_accuracy:[333,3,1,""],update_benchmark_duration:[333,3,1,""],update_benchmark_performance:[333,3,1,""],update_benchmark_status:[333,3,1,""],update_execution_command:[333,3,1,""],update_paths:[333,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.dataset_api_interface":{DatasetAPIInterface:[334,2,1,""],initialize_associations:[334,1,1,""],initialize_precision_optimization_types_association:[334,1,1,""],search_in_list_of_dict:[334,1,1,""],search_in_list_of_dict_for_unique_value:[334,1,1,""],set_database_version:[334,1,1,""]},"neural_compressor.ux.components.db_manager.db_operations.dataset_api_interface.DatasetAPIInterface":{add_dataset:[334,3,1,""],check_if_custom_metric_or_dataloader:[334,3,1,""],dataloader_path:[334,3,1,""],delete_dataset:[334,3,1,""],generate_custom_template:[334,3,1,""],generate_template:[334,3,1,""],get_dataset_details:[334,3,1,""],get_predefined_dataset:[334,3,1,""],list_datasets:[334,3,1,""],parse_dataset_data:[334,3,1,""],prepare_predefined_dataloader:[334,3,1,""],prepare_predefined_transform:[334,3,1,""],set_template_path:[334,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.db_operations":{initialize_associations:[335,1,1,""],initialize_precision_optimization_types_association:[335,1,1,""],search_in_list_of_dict:[335,1,1,""],search_in_list_of_dict_for_unique_value:[335,1,1,""],set_database_version:[335,1,1,""]},"neural_compressor.ux.components.db_manager.db_operations.diagnosis_api_interface":{DiagnosisAPIInterface:[336,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.diagnosis_api_interface.DiagnosisAPIInterface":{generate_optimization:[336,3,1,""],get_op_details:[336,3,1,""],get_op_list:[336,3,1,""],histogram:[336,3,1,""],model_wise_params:[336,3,1,""],parse_model_wise_config:[336,3,1,""],parse_op_wise_config:[336,3,1,""],parse_optimization_data:[336,3,1,""],parse_wise_parameters:[336,3,1,""],set_op_wise_pattern_precision:[336,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.dictionaries_api_interface":{DictionariesAPIInterface:[337,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.dictionaries_api_interface.DictionariesAPIInterface":{list_dataloaders:[337,3,1,""],list_dataloaders_by_framework:[337,3,1,""],list_domain_flavours:[337,3,1,""],list_domains:[337,3,1,""],list_metrics:[337,3,1,""],list_metrics_by_framework:[337,3,1,""],list_optimization_types:[337,3,1,""],list_optimization_types_for_precision:[337,3,1,""],list_precisions:[337,3,1,""],list_transforms:[337,3,1,""],list_transforms_by_domain:[337,3,1,""],list_transforms_by_framework:[337,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.examples_api_interface":{ExamplesAPIInterface:[338,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.examples_api_interface.ExamplesAPIInterface":{create_project:[338,3,1,""],get_optimization_data:[338,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.model_api_interface":{ModelAPIInterface:[340,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.model_api_interface.ModelAPIInterface":{add_model:[340,3,1,""],delete_model:[340,3,1,""],get_model_details:[340,3,1,""],list_models:[340,3,1,""],parse_model_data:[340,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.optimization_api_interface":{OptimizationAPIInterface:[341,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.optimization_api_interface.OptimizationAPIInterface":{add_optimization:[341,3,1,""],add_quantization_optimization:[341,3,1,""],add_standard_optimization:[341,3,1,""],add_tuning_history:[341,3,1,""],clean_status:[341,3,1,""],delete_optimization:[341,3,1,""],edit_optimization:[341,3,1,""],get_optimization_details:[341,3,1,""],list_optimizations:[341,3,1,""],parse_optimization_data:[341,3,1,""],parse_optimization_edit_data:[341,3,1,""],parse_tuning_history:[341,3,1,""],pin_accuracy_benchmark:[341,3,1,""],pin_performance_benchmark:[341,3,1,""],update_execution_command:[341,3,1,""],update_optimization_duration:[341,3,1,""],update_optimization_status:[341,3,1,""],update_optimized_model:[341,3,1,""],update_paths:[341,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.profiling_api_interface":{ProfilingAPIInterface:[342,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.profiling_api_interface.ProfilingAPIInterface":{add_profiling:[342,3,1,""],add_result:[342,3,1,""],bulk_add_results:[342,3,1,""],clean_status:[342,3,1,""],delete_profiling:[342,3,1,""],edit_profiling:[342,3,1,""],get_profiling_details:[342,3,1,""],list_profilings:[342,3,1,""],parse_profiling_data:[342,3,1,""],parse_profiling_edit_data:[342,3,1,""],parse_profiling_result_data:[342,3,1,""],update_execution_command:[342,3,1,""],update_log_path:[342,3,1,""],update_profiling_duration:[342,3,1,""],update_profiling_status:[342,3,1,""]},"neural_compressor.ux.components.db_manager.db_operations.project_api_interface":{ProjectAPIInterface:[343,2,1,""]},"neural_compressor.ux.components.db_manager.db_operations.project_api_interface.ProjectAPIInterface":{add_dummy_dataset:[343,3,1,""],add_model:[343,3,1,""],create_project:[343,3,1,""],delete_project:[343,3,1,""],get_project_details:[343,3,1,""],list_projects:[343,3,1,""],update_project_notes:[343,3,1,""]},"neural_compressor.ux.components.db_manager.params_interfaces":{BenchmarkAddParamsInterface:[345,2,1,""],BenchmarkEditParamsInterface:[345,2,1,""],DatasetAddParamsInterface:[345,2,1,""],DiagnosisOptimizationParamsInterface:[345,2,1,""],ModelAddParamsInterface:[345,2,1,""],OptimizationAddParamsInterface:[345,2,1,""],OptimizationEditParamsInterface:[345,2,1,""],ProfilingAddParamsInterface:[345,2,1,""],ProfilingEditParamsInterface:[345,2,1,""],ProfilingResultAddParamsInterface:[345,2,1,""],TuningHistoryInterface:[345,2,1,""],TuningHistoryItemInterface:[345,2,1,""]},"neural_compressor.ux.components.db_manager.params_interfaces.ModelAddParamsInterface":{parse_nodes:[345,3,1,""]},"neural_compressor.ux.components.db_manager.params_interfaces.TuningHistoryInterface":{serialize:[345,3,1,""]},"neural_compressor.ux.components.db_manager.params_interfaces.TuningHistoryItemInterface":{serialize:[345,3,1,""]},"neural_compressor.ux.components.db_manager.utils":{get_framework_dataloaders_config:[346,1,1,""],get_framework_transforms_config:[346,1,1,""],update_dataloaders_params:[346,1,1,""]},"neural_compressor.ux.components.diagnosis":{diagnosis:[347,0,0,"-"],factory:[348,0,0,"-"],onnx_diagnosis:[350,0,0,"-"],op_details:[352,0,0,"-"],op_entry:[353,0,0,"-"],tensorflow_diagnosis:[354,0,0,"-"]},"neural_compressor.ux.components.diagnosis.diagnosis":{Diagnosis:[347,2,1,""]},"neural_compressor.ux.components.diagnosis.diagnosis.Diagnosis":{calculate_mse:[347,3,1,""],get_histogram_data:[347,3,1,""],get_op_details:[347,3,1,""],get_op_list:[347,3,1,""],get_tensors_info:[347,3,1,""],load_quantization_config:[347,3,1,""],mse_metric_gap:[347,3,1,""]},"neural_compressor.ux.components.diagnosis.factory":{DiagnosisFactory:[348,2,1,""]},"neural_compressor.ux.components.diagnosis.factory.DiagnosisFactory":{get_diagnosis:[348,3,1,""]},"neural_compressor.ux.components.diagnosis.onnx_diagnosis":{onnxrt_diagnosis:[351,0,0,"-"]},"neural_compressor.ux.components.diagnosis.onnx_diagnosis.onnxrt_diagnosis":{OnnxRtDiagnosis:[351,2,1,""]},"neural_compressor.ux.components.diagnosis.op_details":{OpActivation:[352,2,1,""],OpDetails:[352,2,1,""],OpPattern:[352,2,1,""],OpWeights:[352,2,1,""]},"neural_compressor.ux.components.diagnosis.op_details.OpDetails":{serialize:[352,3,1,""]},"neural_compressor.ux.components.diagnosis.op_entry":{OpEntry:[353,2,1,""]},"neural_compressor.ux.components.diagnosis.op_entry.OpEntry":{serialize:[353,3,1,""]},"neural_compressor.ux.components.diagnosis.tensorflow_diagnosis":{tensorflow_diagnosis:[355,0,0,"-"]},"neural_compressor.ux.components.diagnosis.tensorflow_diagnosis.tensorflow_diagnosis":{TensorflowDiagnosis:[355,2,1,""]},"neural_compressor.ux.components.file_browser":{file_browser:[356,0,0,"-"]},"neural_compressor.ux.components.file_browser.file_browser":{create_dir_entry:[356,1,1,""],create_entry:[356,1,1,""],create_file_entry:[356,1,1,""],filter_requested_entries:[356,1,1,""],get_directory_entries:[356,1,1,""],get_filter_value:[356,1,1,""],get_non_hidden_directory_entries:[356,1,1,""],get_requested_path:[356,1,1,""],get_setting_value:[356,1,1,""],is_dataset_or_directory_entry:[356,1,1,""],is_directory_entry:[356,1,1,""],is_model_or_directory_entry:[356,1,1,""],should_show_files:[356,1,1,""],should_show_only_model_files:[356,1,1,""],sort_entries:[356,1,1,""]},"neural_compressor.ux.components.graph":{attribute:[358,0,0,"-"],collapser:[359,0,0,"-"],edge:[360,0,0,"-"],graph:[361,0,0,"-"],graph_reader:[362,0,0,"-"],node:[364,0,0,"-"],reader:[365,0,0,"-"]},"neural_compressor.ux.components.graph.attribute":{Attribute:[358,2,1,""]},"neural_compressor.ux.components.graph.collapser":{Collapser:[359,2,1,""]},"neural_compressor.ux.components.graph.collapser.Collapser":{collapse:[359,3,1,""]},"neural_compressor.ux.components.graph.edge":{Edge:[360,2,1,""]},"neural_compressor.ux.components.graph.graph":{Graph:[361,2,1,""]},"neural_compressor.ux.components.graph.graph.Graph":{add_edge:[361,3,1,""],add_node:[361,3,1,""],get_node:[361,3,1,""],get_target_nodes:[361,3,1,""],highlight_pattern:[361,3,1,""]},"neural_compressor.ux.components.graph.graph_reader":{GraphReader:[362,2,1,""]},"neural_compressor.ux.components.graph.graph_reader.GraphReader":{find_pattern_in_graph:[362,3,1,""],read:[362,3,1,""]},"neural_compressor.ux.components.graph.node":{GroupNode:[364,2,1,""],Node:[364,2,1,""]},"neural_compressor.ux.components.graph.reader":{onnxrt_reader:[366,0,0,"-"],tensorflow_reader:[367,0,0,"-"]},"neural_compressor.ux.components.graph.reader.onnxrt_reader":{OnnxrtReader:[366,2,1,""]},"neural_compressor.ux.components.graph.reader.onnxrt_reader.OnnxrtReader":{read:[366,3,1,""]},"neural_compressor.ux.components.graph.reader.tensorflow_reader":{TensorflowReader:[367,2,1,""]},"neural_compressor.ux.components.graph.reader.tensorflow_reader.TensorflowReader":{read:[367,3,1,""]},"neural_compressor.ux.components.jobs_management":{jobs_control_queue:[370,0,0,"-"],jobs_manager:[371,0,0,"-"],request:[372,0,0,"-"]},"neural_compressor.ux.components.manage_workspace":{get_default_path:[373,1,1,""]},"neural_compressor.ux.components.model":{domain:[374,0,0,"-"],model:[376,0,0,"-"],model_type_getter:[377,0,0,"-"],onnxrt:[378,0,0,"-"],pytorch:[380,0,0,"-"],repository:[382,0,0,"-"],shape:[383,0,0,"-"],tensorflow:[385,0,0,"-"]},"neural_compressor.ux.components.model.domain":{Domain:[374,2,1,""]},"neural_compressor.ux.components.model.model":{Model:[376,2,1,""]},"neural_compressor.ux.components.model.model.Model":{ensure_supported_path:[376,3,1,""],get_framework_name:[376,3,1,""],get_input_nodes:[376,3,1,""],get_model_graph:[376,3,1,""],get_output_nodes:[376,3,1,""],get_tensors_info:[376,3,1,""],guard_requirements_installed:[376,3,1,""],supports_path:[376,3,1,""]},"neural_compressor.ux.components.model.model_type_getter":{get_model_type:[377,1,1,""]},"neural_compressor.ux.components.model.onnxrt":{model:[379,0,0,"-"]},"neural_compressor.ux.components.model.onnxrt.model":{OnnxrtModel:[379,2,1,""],remove_number_of_samples_from_shape:[379,1,1,""]},"neural_compressor.ux.components.model.onnxrt.model.OnnxrtModel":{get_framework_name:[379,3,1,""],get_model_graph:[379,3,1,""],guard_requirements_installed:[379,3,1,""],supports_path:[379,3,1,""]},"neural_compressor.ux.components.model.pytorch":{model:[381,0,0,"-"]},"neural_compressor.ux.components.model.pytorch.model":{PyTorchScriptModel:[381,2,1,""]},"neural_compressor.ux.components.model.pytorch.model.PyTorchScriptModel":{get_framework_name:[381,3,1,""],guard_requirements_installed:[381,3,1,""],supports_path:[381,3,1,""]},"neural_compressor.ux.components.model.repository":{ModelRepository:[382,2,1,""]},"neural_compressor.ux.components.model.repository.ModelRepository":{get_framework_from_path:[382,3,1,""],get_frameworks:[382,3,1,""],get_model:[382,3,1,""],get_supported_frameworks:[382,3,1,""],is_model_path:[382,3,1,""]},"neural_compressor.ux.components.model.shape":{Shape:[383,2,1,""]},"neural_compressor.ux.components.model.shape.Shape":{serialize:[383,3,1,""]},"neural_compressor.ux.components.model.tensorflow":{frozen_pb:[384,0,0,"-"],keras:[386,0,0,"-"],meta_graph:[387,0,0,"-"],model:[388,0,0,"-"],saved_model:[389,0,0,"-"],utils:[390,0,0,"-"]},"neural_compressor.ux.components.model.tensorflow.frozen_pb":{FrozenPbModel:[384,2,1,""]},"neural_compressor.ux.components.model.tensorflow.frozen_pb.FrozenPbModel":{supports_path:[384,3,1,""]},"neural_compressor.ux.components.model.tensorflow.keras":{KerasModel:[386,2,1,""]},"neural_compressor.ux.components.model.tensorflow.keras.KerasModel":{get_input_nodes:[386,3,1,""],get_output_nodes:[386,3,1,""],supports_path:[386,3,1,""]},"neural_compressor.ux.components.model.tensorflow.meta_graph":{MetaGraphModel:[387,2,1,""]},"neural_compressor.ux.components.model.tensorflow.meta_graph.MetaGraphModel":{get_input_nodes:[387,3,1,""],get_model_graph:[387,3,1,""],get_output_nodes:[387,3,1,""],supports_path:[387,3,1,""]},"neural_compressor.ux.components.model.tensorflow.model":{TensorflowModel:[388,2,1,""]},"neural_compressor.ux.components.model.tensorflow.model.TensorflowModel":{get_framework_name:[388,3,1,""],get_input_nodes:[388,3,1,""],get_model_graph:[388,3,1,""],get_output_nodes:[388,3,1,""],guard_requirements_installed:[388,3,1,""]},"neural_compressor.ux.components.model.tensorflow.saved_model":{SavedModelModel:[389,2,1,""]},"neural_compressor.ux.components.model.tensorflow.saved_model.SavedModelModel":{supports_path:[389,3,1,""]},"neural_compressor.ux.components.model.tensorflow.utils":{get_input_shape:[390,1,1,""]},"neural_compressor.ux.components.model_zoo":{download_config:[391,0,0,"-"],download_model:[392,0,0,"-"],downloader:[393,0,0,"-"],list_models:[395,0,0,"-"]},"neural_compressor.ux.components.model_zoo.download_config":{download_config:[391,1,1,""]},"neural_compressor.ux.components.model_zoo.download_model":{download_model:[392,1,1,""]},"neural_compressor.ux.components.model_zoo.downloader":{Downloader:[393,2,1,""]},"neural_compressor.ux.components.model_zoo.downloader.Downloader":{download:[393,3,1,""],download_config:[393,3,1,""],download_file:[393,3,1,""],download_model:[393,3,1,""],download_yaml_config:[393,3,1,""],get_yaml_url:[393,3,1,""],unpack_archive:[393,3,1,""]},"neural_compressor.ux.components.model_zoo.list_models":{check_version:[395,1,1,""],get_available_models:[395,1,1,""],get_framework_module_name:[395,1,1,""],get_installed_frameworks:[395,1,1,""],list_models:[395,1,1,""],validate_model_list:[395,1,1,""]},"neural_compressor.ux.components.names_mapper":{names_mapper:[397,0,0,"-"]},"neural_compressor.ux.components.names_mapper.names_mapper":{MappingDirection:[397,2,1,""],NamesMapper:[397,2,1,""]},"neural_compressor.ux.components.names_mapper.names_mapper.NamesMapper":{map_name:[397,3,1,""]},"neural_compressor.ux.components.optimization":{Optimizations:[403,2,1,""],execute_optimization:[398,0,0,"-"],factory:[399,0,0,"-"],graph_optimizer:[401,0,0,"-"],mixed_precision:[404,0,0,"-"],neural_coder_optimization:[407,0,0,"-"],optimization:[409,0,0,"-"],tune:[410,0,0,"-"],tuning_history:[413,0,0,"-"]},"neural_compressor.ux.components.optimization.execute_optimization":{check_if_collect_tuning_history:[398,1,1,""],execute_optimization:[398,1,1,""],execute_optimization_pytorch_script:[398,1,1,""],execute_optimization_regular:[398,1,1,""],parse_logs:[398,1,1,""],parse_model_data_to_bench_names:[398,1,1,""]},"neural_compressor.ux.components.optimization.factory":{OptimizationFactory:[399,2,1,""]},"neural_compressor.ux.components.optimization.factory.OptimizationFactory":{get_optimization:[399,3,1,""]},"neural_compressor.ux.components.optimization.graph_optimizer":{graph_optimization:[400,0,0,"-"],optimize_model:[402,0,0,"-"]},"neural_compressor.ux.components.optimization.graph_optimizer.graph_optimization":{GraphOptimization:[400,2,1,""]},"neural_compressor.ux.components.optimization.graph_optimizer.graph_optimization.GraphOptimization":{execute:[400,3,1,""],generate_config:[400,3,1,""]},"neural_compressor.ux.components.optimization.graph_optimizer.optimize_model":{optimize_graph:[402,1,1,""],optimize_graph_config:[402,1,1,""],parse_args:[402,1,1,""],set_eager_execution:[402,1,1,""]},"neural_compressor.ux.components.optimization.mixed_precision":{mixed_precision:[405,0,0,"-"],optimize_model:[406,0,0,"-"]},"neural_compressor.ux.components.optimization.mixed_precision.mixed_precision":{MixedPrecision:[405,2,1,""]},"neural_compressor.ux.components.optimization.mixed_precision.mixed_precision.MixedPrecision":{execute:[405,3,1,""],generate_config:[405,3,1,""]},"neural_compressor.ux.components.optimization.mixed_precision.optimize_model":{optimize_graph:[406,1,1,""],optimize_graph_config:[406,1,1,""],parse_args:[406,1,1,""],set_eager_execution:[406,1,1,""]},"neural_compressor.ux.components.optimization.neural_coder_optimization":{optimize_model:[408,0,0,"-"]},"neural_compressor.ux.components.optimization.neural_coder_optimization.optimize_model":{optimize_pt_script:[408,1,1,""]},"neural_compressor.ux.components.optimization.optimization":{DataloaderInterface:[409,2,1,""],Optimization:[409,2,1,""],OptimizationInterface:[409,2,1,""]},"neural_compressor.ux.components.optimization.optimization.Optimization":{execute:[409,3,1,""],generate_config:[409,3,1,""]},"neural_compressor.ux.components.optimization.tune":{tune_model:[411,0,0,"-"],tuning:[412,0,0,"-"]},"neural_compressor.ux.components.optimization.tune.tune_model":{parse_args:[411,1,1,""],set_eager_execution:[411,1,1,""],tune_model:[411,1,1,""]},"neural_compressor.ux.components.optimization.tune.tuning":{AccuracyCriterion:[412,2,1,""],Tuning:[412,2,1,""],TuningDetails:[412,2,1,""]},"neural_compressor.ux.components.optimization.tune.tuning.Tuning":{execute:[412,3,1,""],generate_config:[412,3,1,""]},"neural_compressor.ux.components.optimization.tuning_history":{TuningHistory:[413,2,1,""],Watcher:[413,2,1,""],tuning_history:[413,1,1,""],tuning_history_path:[413,1,1,""]},"neural_compressor.ux.components.optimization.tuning_history.TuningHistory":{send_history_snapshot:[413,3,1,""]},"neural_compressor.ux.components.optimization.tuning_history.Watcher":{history_file_modification_time:[413,3,1,""],stop:[413,3,1,""],was_history_file_changed:[413,3,1,""]},"neural_compressor.ux.components.profiling":{execute_profiling:[414,0,0,"-"],factory:[415,0,0,"-"],profile_model:[417,0,0,"-"],profiler:[418,0,0,"-"],profiling:[419,0,0,"-"],tensorflow_profiler:[421,0,0,"-"]},"neural_compressor.ux.components.profiling.execute_profiling":{execute_profiling:[414,1,1,""],execute_real_profiling:[414,1,1,""]},"neural_compressor.ux.components.profiling.factory":{ProfilerFactory:[415,2,1,""]},"neural_compressor.ux.components.profiling.factory.ProfilerFactory":{get_profiler:[415,3,1,""]},"neural_compressor.ux.components.profiling.profile_model":{load_profiling_details:[417,1,1,""],parse_args:[417,1,1,""]},"neural_compressor.ux.components.profiling.profiler":{Profiler:[418,2,1,""]},"neural_compressor.ux.components.profiling.profiler.Profiler":{profile_model:[418,3,1,""]},"neural_compressor.ux.components.profiling.profiling":{DataloaderInterface:[419,2,1,""],Profiling:[419,2,1,""]},"neural_compressor.ux.components.profiling.profiling.Profiling":{execute:[419,3,1,""],generate_config:[419,3,1,""]},"neural_compressor.ux.components.profiling.tensorflow_profiler":{factory:[420,0,0,"-"],profiler:[422,0,0,"-"],utils:[423,0,0,"-"]},"neural_compressor.ux.components.profiling.tensorflow_profiler.factory":{ProfilerFactory:[420,2,1,""]},"neural_compressor.ux.components.profiling.tensorflow_profiler.factory.ProfilerFactory":{get_profiler:[420,3,1,""]},"neural_compressor.ux.components.profiling.tensorflow_profiler.profiler":{Profiler:[422,2,1,""]},"neural_compressor.ux.components.profiling.tensorflow_profiler.profiler.Profiler":{build_dataloader:[422,3,1,""],convert_nodes_to_list:[422,3,1,""],create_tf_config:[422,3,1,""],get_node_by_name:[422,3,1,""],initialize_graph:[422,3,1,""],profile_model:[422,3,1,""]},"neural_compressor.ux.components.profiling.tensorflow_profiler.utils":{delete_assign:[423,1,1,""]},"neural_compressor.ux.inc_bench":{main:[424,1,1,""],prepare_environment:[424,1,1,""]},"neural_compressor.ux.utils":{consts:[426,0,0,"-"],environment:[427,0,0,"-"],exceptions:[428,0,0,"-"],executor:[429,0,0,"-"],expiring_dict:[430,0,0,"-"],github_info:[431,0,0,"-"],hw_info:[432,0,0,"-"],json_serializer:[434,0,0,"-"],logger:[435,0,0,"-"],parser:[436,0,0,"-"],proc:[437,0,0,"-"],processes:[438,0,0,"-"],singleton:[439,0,0,"-"],templates:[440,0,0,"-"],utils:[443,0,0,"-"],workload:[448,0,0,"-"],yaml_utils:[454,0,0,"-"]},"neural_compressor.ux.utils.consts":{DomainFlavours:[426,2,1,""],Domains:[426,2,1,""],ExecutionStatus:[426,2,1,""],Frameworks:[426,2,1,""],OptimizationTypes:[426,2,1,""],Precisions:[426,2,1,""],Strategies:[426,2,1,""]},"neural_compressor.ux.utils.environment":{Environment:[427,2,1,""]},"neural_compressor.ux.utils.environment.Environment":{clean_workloads_wip_status:[427,3,1,""],ensure_workdir_exists_and_writeable:[427,3,1,""],migrate_database:[427,3,1,""]},"neural_compressor.ux.utils.exceptions":{AccessDeniedException:[428,6,1,""],ClientErrorException:[428,6,1,""],InternalException:[428,6,1,""],NotFoundException:[428,6,1,""]},"neural_compressor.ux.utils.executor":{Executor:[429,2,1,""]},"neural_compressor.ux.utils.executor.Executor":{call:[429,3,1,""],call_one:[429,3,1,""],is_multi_commands:[429,3,1,""],refresh_workdir:[429,3,1,""]},"neural_compressor.ux.utils.expiring_dict":{ExpiringDict:[430,2,1,""],ExpiringDictItem:[430,2,1,""]},"neural_compressor.ux.utils.expiring_dict.ExpiringDictItem":{is_expired:[430,3,1,""]},"neural_compressor.ux.utils.github_info":{GithubInfo:[431,2,1,""]},"neural_compressor.ux.utils.github_info.GithubInfo":{tag:[431,3,1,""]},"neural_compressor.ux.utils.hw_info":{HWInfo:[432,2,1,""],get_bios_version:[432,1,1,""],get_distribution:[432,1,1,""],get_framework_dependency_info:[432,1,1,""],get_framework_info:[432,1,1,""],get_kernel_version:[432,1,1,""],get_number_of_sockets:[432,1,1,""],is_turbo_boost_enabled:[432,1,1,""]},"neural_compressor.ux.utils.hw_info.HWInfo":{initialize:[432,3,1,""],serialize:[432,3,1,""]},"neural_compressor.ux.utils.json_serializer":{JsonSerializer:[434,2,1,""]},"neural_compressor.ux.utils.json_serializer.JsonSerializer":{serialize:[434,3,1,""],serialize_item:[434,3,1,""]},"neural_compressor.ux.utils.logger":{change_log_level:[435,1,1,""]},"neural_compressor.ux.utils.parser":{AccuracyParser:[436,2,1,""],BenchmarkParserFactory:[436,2,1,""],OptimizationParser:[436,2,1,""],Parser:[436,2,1,""],PerformanceParser:[436,2,1,""],ProfilingParser:[436,2,1,""]},"neural_compressor.ux.utils.parser.AccuracyParser":{process:[436,3,1,""]},"neural_compressor.ux.utils.parser.BenchmarkParserFactory":{get_parser:[436,3,1,""]},"neural_compressor.ux.utils.parser.OptimizationParser":{process:[436,3,1,""]},"neural_compressor.ux.utils.parser.Parser":{process:[436,3,1,""]},"neural_compressor.ux.utils.parser.PerformanceParser":{process:[436,3,1,""],summarize_partial:[436,3,1,""],summarize_value:[436,3,1,""],update_partial:[436,3,1,""]},"neural_compressor.ux.utils.parser.ProfilingParser":{process:[436,3,1,""],unify_time:[436,3,1,""]},"neural_compressor.ux.utils.proc":{Proc:[437,2,1,""]},"neural_compressor.ux.utils.proc.Proc":{remove_logs:[437,3,1,""],run:[437,3,1,""]},"neural_compressor.ux.utils.processes":{NCProcesses:[438,2,1,""]},"neural_compressor.ux.utils.processes.NCProcesses":{remove_successful_logs:[438,3,1,""],return_code_all:[438,3,1,""]},"neural_compressor.ux.utils.singleton":{Singleton:[439,2,1,""]},"neural_compressor.ux.utils.templates":{metric:[441,0,0,"-"],workdir:[442,0,0,"-"]},"neural_compressor.ux.utils.templates.metric":{Metric:[441,2,1,""]},"neural_compressor.ux.utils.templates.metric.Metric":{calculate_throughput:[441,3,1,""],insert_data:[441,3,1,""]},"neural_compressor.ux.utils.templates.workdir":{Workdir:[442,2,1,""]},"neural_compressor.ux.utils.templates.workdir.Workdir":{clean_logs:[442,3,1,""],clean_status:[442,3,1,""],ensure_working_path_exists:[442,3,1,""]},"neural_compressor.ux.utils.utils":{check_module:[443,1,1,""],deprecated:[443,1,1,""],determine_ip:[443,1,1,""],export_to_csv:[443,1,1,""],filter_transforms:[443,1,1,""],get_dataset_path:[443,1,1,""],get_file_extension:[443,1,1,""],get_framework_from_path:[443,1,1,""],get_height_width_from_size:[443,1,1,""],get_metrics_dict:[443,1,1,""],get_model_zoo_config_path:[443,1,1,""],get_model_zoo_model_path:[443,1,1,""],get_module_version:[443,1,1,""],get_predefined_config_path:[443,1,1,""],get_shape_from_transforms:[443,1,1,""],get_size:[443,1,1,""],is_dataset_file:[443,1,1,""],is_development_env:[443,1,1,""],is_hidden:[443,1,1,""],load_dataloader_config:[443,1,1,""],load_help_nc_params:[443,1,1,""],load_metrics_config:[443,1,1,""],load_model_config:[443,1,1,""],load_model_wise_params:[443,1,1,""],load_precisions_config:[443,1,1,""],load_transforms_config:[443,1,1,""],load_transforms_filter_config:[443,1,1,""],normalize_domain:[443,1,1,""],normalize_framework:[443,1,1,""],normalize_string:[443,1,1,""],parse_bool_value:[443,1,1,""],parse_to_float_list:[443,1,1,""],parse_to_string_list:[443,1,1,""],parse_version:[443,1,1,""],release_tag:[443,1,1,""],replace_with_values:[443,1,1,""],verify_file_path:[443,1,1,""]},"neural_compressor.ux.utils.workload":{config:[444,0,0,"-"],dataloader:[445,0,0,"-"],evaluation:[446,0,0,"-"],graph_optimization:[447,0,0,"-"],mixed_precision:[449,0,0,"-"],model:[450,0,0,"-"],pruning:[451,0,0,"-"],quantization:[452,0,0,"-"],tuning:[453,0,0,"-"]},"neural_compressor.ux.utils.workload.config":{Config:[444,2,1,""]},"neural_compressor.ux.utils.workload.config.Config":{dump:[444,3,1,""],get_performance_configs:[444,3,1,""],get_performance_cores_per_instance:[444,3,1,""],get_performance_num_of_instance:[444,3,1,""],initialize:[444,3,1,""],load:[444,3,1,""],process_transform:[444,3,1,""],remove_accuracy_metric:[444,3,1,""],remove_dataloader:[444,3,1,""],set_accuracy_and_performance_batch_sizes:[444,3,1,""],set_accuracy_goal:[444,3,1,""],set_accuracy_metric:[444,3,1,""],set_evaluation_dataloader:[444,3,1,""],set_evaluation_dataset_path:[444,3,1,""],set_inputs:[444,3,1,""],set_optimization_precision:[444,3,1,""],set_outputs:[444,3,1,""],set_performance_cores_per_instance:[444,3,1,""],set_performance_iterations:[444,3,1,""],set_performance_num_of_instance:[444,3,1,""],set_performance_warmup:[444,3,1,""],set_quantization_approach:[444,3,1,""],set_quantization_batch_size:[444,3,1,""],set_quantization_dataloader:[444,3,1,""],set_quantization_dataset_path:[444,3,1,""],set_quantization_sampling_size:[444,3,1,""],set_transform:[444,3,1,""],set_workspace:[444,3,1,""]},"neural_compressor.ux.utils.workload.dataloader":{Dataloader:[445,2,1,""],Dataset:[445,2,1,""],Filter:[445,2,1,""],LabelBalance:[445,2,1,""],Transform:[445,2,1,""]},"neural_compressor.ux.utils.workload.dataloader.Dataloader":{serialize:[445,3,1,""],set_dataset:[445,3,1,""],set_transforms_from_list:[445,3,1,""]},"neural_compressor.ux.utils.workload.dataloader.Dataset":{is_dummy:[445,3,1,""],serialize:[445,3,1,""]},"neural_compressor.ux.utils.workload.dataloader.Transform":{serialize:[445,3,1,""]},"neural_compressor.ux.utils.workload.evaluation":{Accuracy:[446,2,1,""],Configs:[446,2,1,""],Evaluation:[446,2,1,""],Metric:[446,2,1,""],Performance:[446,2,1,""],Postprocess:[446,2,1,""],PostprocessSchema:[446,2,1,""]},"neural_compressor.ux.utils.workload.evaluation.Evaluation":{set_accuracy_postprocess_transforms:[446,3,1,""]},"neural_compressor.ux.utils.workload.evaluation.Metric":{serialize:[446,3,1,""]},"neural_compressor.ux.utils.workload.graph_optimization":{GraphOptimization:[447,2,1,""]},"neural_compressor.ux.utils.workload.graph_optimization.GraphOptimization":{set_precisions:[447,3,1,""]},"neural_compressor.ux.utils.workload.mixed_precision":{MixedPrecision:[449,2,1,""]},"neural_compressor.ux.utils.workload.mixed_precision.MixedPrecision":{set_precisions:[449,3,1,""]},"neural_compressor.ux.utils.workload.model":{Model:[450,2,1,""]},"neural_compressor.ux.utils.workload.model.Model":{serialize:[450,3,1,""]},"neural_compressor.ux.utils.workload.pruning":{AdamOptimizer:[451,2,1,""],AdamWOptimizer:[451,2,1,""],Approach:[451,2,1,""],Criterion:[451,2,1,""],CrossEntropyLossCriterion:[451,2,1,""],KnowledgeDistillationLossCriterion:[451,2,1,""],Optimizer:[451,2,1,""],Pruning:[451,2,1,""],SGDOptimizer:[451,2,1,""],SparseCategoricalCrossentropyCriterion:[451,2,1,""],Train:[451,2,1,""],WeightCompressionApproach:[451,2,1,""],parse_dict_value_to_float:[451,1,1,""],parse_dict_value_to_int:[451,1,1,""]},"neural_compressor.ux.utils.workload.pruning.Train":{serialize:[451,3,1,""]},"neural_compressor.ux.utils.workload.quantization":{Advance:[452,2,1,""],Calibration:[452,2,1,""],Quantization:[452,2,1,""],WiseConfig:[452,2,1,""],WiseConfigDetails:[452,2,1,""]},"neural_compressor.ux.utils.workload.tuning":{AccCriterion:[453,2,1,""],Diagnosis:[453,2,1,""],ExitPolicy:[453,2,1,""],MultiObjectives:[453,2,1,""],Strategy:[453,2,1,""],Tuning:[453,2,1,""],Workspace:[453,2,1,""]},"neural_compressor.ux.utils.workload.tuning.Tuning":{set_max_trials:[453,3,1,""],set_performance_only:[453,3,1,""],set_random_seed:[453,3,1,""],set_timeout:[453,3,1,""],set_workspace:[453,3,1,""]},"neural_compressor.ux.utils.yaml_utils":{float_representer:[454,1,1,""],pruner_representer:[454,1,1,""]},"neural_compressor.ux.web":{communication:[455,0,0,"-"],configuration:[456,0,0,"-"],exceptions:[457,0,0,"-"],router:[459,0,0,"-"],server:[460,0,0,"-"],service:[463,0,0,"-"]},"neural_compressor.ux.web.communication":{Message:[455,2,1,""],MessageQueue:[455,2,1,""],Request:[455,2,1,""],Response:[455,2,1,""],create_simple_response:[455,1,1,""]},"neural_compressor.ux.web.communication.MessageQueue":{get:[455,3,1,""],post_error:[455,3,1,""],post_failure:[455,3,1,""],post_success:[455,3,1,""]},"neural_compressor.ux.web.configuration":{Configuration:[456,2,1,""]},"neural_compressor.ux.web.configuration.Configuration":{determine_gui_port:[456,3,1,""],determine_log_level:[456,3,1,""],determine_server_port:[456,3,1,""],determine_url_prefix:[456,3,1,""],determine_values_from_environment:[456,3,1,""],dump_token_to_file:[456,3,1,""],get_command_line_args:[456,3,1,""],get_url:[456,3,1,""],is_port_taken:[456,3,1,""],set_up:[456,3,1,""]},"neural_compressor.ux.web.exceptions":{ServiceNotFoundException:[457,6,1,""]},"neural_compressor.ux.web.router":{DeferredRoutingDefinition:[459,2,1,""],DeferredSubprocessRoutingDefinition:[459,2,1,""],RealtimeRoutingDefinition:[459,2,1,""],Router:[459,2,1,""],RoutingDefinition:[459,2,1,""],find_pattern_in_graph:[459,1,1,""],get_model_graph:[459,1,1,""],get_system_info:[459,1,1,""]},"neural_compressor.ux.web.router.Router":{handle:[459,3,1,""]},"neural_compressor.ux.web.server":{allow_api_call:[460,1,1,""],block_iframe:[460,1,1,""],block_sniffing:[460,1,1,""],build_parameters:[460,1,1,""],disable_cache:[460,1,1,""],get_tls_args:[460,1,1,""],handle_api_call:[460,1,1,""],page_not_found:[460,1,1,""],require_api_token:[460,1,1,""],root:[460,1,1,""],run_server:[460,1,1,""],web_socket_publisher:[460,1,1,""]},"neural_compressor.ux.web.service":{benchmark:[461,0,0,"-"],history_snapshot_parser:[462,0,0,"-"],model:[464,0,0,"-"],optimization:[465,0,0,"-"],profiling:[466,0,0,"-"],request_data_processor:[467,0,0,"-"],response_generator:[468,0,0,"-"],workload:[469,0,0,"-"]},"neural_compressor.ux.web.service.benchmark":{BenchmarkService:[461,2,1,""]},"neural_compressor.ux.web.service.history_snapshot_parser":{HistorySnapshotParser:[462,2,1,""]},"neural_compressor.ux.web.service.history_snapshot_parser.HistorySnapshotParser":{extract_accuracy:[462,3,1,""],extract_performance:[462,3,1,""],parse_history_item:[462,3,1,""],parse_history_snapshot:[462,3,1,""]},"neural_compressor.ux.web.service.model":{ModelService:[464,2,1,""]},"neural_compressor.ux.web.service.model.ModelService":{get_model:[464,3,1,""]},"neural_compressor.ux.web.service.optimization":{OptimizationService:[465,2,1,""]},"neural_compressor.ux.web.service.profiling":{ProfilingService:[466,2,1,""]},"neural_compressor.ux.web.service.profiling.ProfilingService":{generate_csv:[466,3,1,""]},"neural_compressor.ux.web.service.request_data_processor":{RequestDataProcessor:[467,2,1,""]},"neural_compressor.ux.web.service.request_data_processor.RequestDataProcessor":{get_string_value:[467,3,1,""]},"neural_compressor.ux.web.service.response_generator":{ResponseGenerator:[468,2,1,""]},"neural_compressor.ux.web.service.response_generator.ResponseGenerator":{add_refresh:[468,3,1,""],from_exception:[468,3,1,""],get_status_code_for_exception:[468,3,1,""],serve_from_filesystem:[468,3,1,""]},"neural_compressor.ux.web.service.workload":{WorkloadService:[469,2,1,""]},"neural_compressor.ux.web.service.workload.WorkloadService":{get_code_template:[469,3,1,""],get_config:[469,3,1,""],get_output:[469,3,1,""]},env:{run_migrations_offline:[37,1,1,""],run_migrations_online:[37,1,1,""]},neural_compressor:{Benchmark:[255,2,1,""],DistillationConfig:[255,2,1,""],Pruning:[255,2,1,""],Quantization:[255,2,1,""],adaptor:[39,0,0,"-"],algorithm:[162,0,0,"-"],benchmark:[164,0,0,"-"],conf:[167,0,0,"-"],contrib:[169,0,0,"-"],data:[177,0,0,"-"],experimental:[219,0,0,"-"],metric:[256,0,0,"-"],mix_precision:[257,0,0,"-"],model:[259,0,0,"-"],objective:[264,0,0,"-"],pruners:[267,0,0,"-"],pruning:[271,0,0,"-"],quantization:[272,0,0,"-"],strategy:[277,0,0,"-"],training:[285,0,0,"-"],utils:[289,0,0,"-"],ux:[425,0,0,"-"],version:[470,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","method","Python method"],"4":["py","attribute","Python attribute"],"5":["py","data","Python data"],"6":["py","exception","Python exception"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:method","4":"py:attribute","5":"py:data","6":"py:exception"},terms:{"000":[203,476],"0000":494,"00000":203,"00001":203,"00003":203,"00004":203,"0001":[4,168,255],"0003":508,"0007":508,"001":[203,476,480],"002":480,"0022":498,"0030":508,"0046":508,"0058":508,"0106":508,"0115":508,"0119":508,"0130":508,"017":506,"01x":[485,508],"0213":508,"02340":250,"032":508,"04x":508,"05x":508,"068":486,"06x":508,"0734":508,"07x":508,"0837":504,"084913":434,"08t11":434,"095":505,"099":[203,476],"09x":508,"0_224_frozen":6,"0a0":485,"0xd0002b1":498,"100":[3,203,223,232,475,476,480,486,487,506,507,508],"1000":[3,234,441,486,507],"10000":[223,275],"100000":232,"10004":[478,489,493,497],"10006":478,"101":[227,492,508],"102":508,"1024":152,"103":506,"1046":508,"1054":508,"1081":502,"1083":502,"10833":216,"1086":502,"1091":502,"1097":502,"10g":498,"10x":508,"111":508,"112":508,"1130":508,"114":508,"116":506,"1189":508,"11x":508,"120":430,"123":[203,476,506],"124":508,"125":[436,508],"1250":508,"127":[204,205,476,508],"128":[201,204,205,216,476,506,508],"1280":3,"130":508,"133":508,"1365":[216,506],"1372":508,"139":486,"13top":508,"13x":[502,508],"141":508,"144":508,"1480":508,"1490":508,"1493":508,"14x":[502,508],"1501":508,"151":[502,508],"152":508,"153":[502,508],"1543":508,"155":508,"15583468973636627":3,"156":508,"1564":508,"15x":[485,508],"160":3,"1605":508,"162":508,"163":508,"165":486,"168":508,"16x":508,"16x16gb":498,"172":508,"175":508,"177":225,"178":508,"1797":508,"180":508,"181":508,"1810":250,"1835":508,"186":508,"1877":508,"188":508,"18x":508,"19358506798744202":3,"1936":508,"1951":508,"197":508,"198":508,"19x":[485,508],"1e6":3,"1x1":[245,478],"1x16":245,"1x2":245,"200":[1,215,507,508],"2000":507,"2012":203,"2016":434,"2020":491,"2021":486,"2022":[6,33,34,35,508],"203":508,"20x":508,"2105220049":498,"211":508,"2132":504,"2147":508,"216":508,"2164":508,"218":508,"21x":508,"221":508,"224":[6,179,235,473,475,476,480,486,506,507],"225":[179,473,475],"226":508,"229":[179,473,475],"2298":508,"229939":33,"22x":508,"235":508,"23x":[485,508],"244":508,"2454":508,"24aac32":485,"250":2,"254":508,"255":[289,290],"256":[3,179,208,473,475,476,480,506,507,508],"2566":508,"256gb":498,"2588":508,"2594":502,"25x":508,"261":508,"264":508,"2656":508,"26x":508,"272":508,"2751":508,"27x":508,"28x":[485,508],"291905":34,"292":502,"294":508,"29x":[502,508],"2gb":262,"2in4":499,"2x1":508,"2x2":245,"2xlarg":508,"300":[3,475],"303":502,"306":502,"307":508,"308":508,"30ghz":498,"30x":[485,508],"311":508,"315":502,"316":508,"319":508,"31x":[502,508],"320":3,"3200mt":498,"3218":502,"325":486,"3252":502,"327":508,"32accuraci":508,"32x":508,"330":508,"332":508,"333":508,"334":508,"336":508,"337":508,"338174d13706855fc6924cec7b3a8ae8":472,"33x":508,"347":508,"34f1":508,"34x":508,"359":508,"35x":508,"36x":[485,508],"370":508,"3717":508,"374":508,"37x":508,"381":508,"382":508,"384":[216,506],"3878":508,"38x":508,"39x":502,"3dgan":500,"3ghz":498,"3rd":[493,500,501],"3ubuntu":485,"401":508,"406":[473,475],"409":508,"40x":508,"410":508,"419":508,"41x":508,"420":[6,489],"423":508,"42x":[485,502],"432":508,"433":508,"434":508,"43x":508,"441":508,"4469":504,"44x":508,"454":508,"455":508,"456":[473,475],"459":508,"45x":508,"460":508,"466":508,"469":508,"47x":[502,508],"480":508,"485":[473,475,508],"490":508,"492":508,"497":502,"49x":508,"4th":500,"4x1":[245,508],"5000":472,"506":508,"508":502,"50iou":223,"50x":508,"518":508,"519":508,"51x":508,"52f1":508,"52x":508,"533":508,"536":508,"539":508,"53x":[502,508],"541":508,"542":508,"546":502,"5494":508,"54accuraci":508,"54x":[502,508],"551":502,"552":502,"5540":508,"55x":508,"561":508,"567":[486,508],"56be4db0acb8001400a502ec":225,"56x":508,"570":508,"575":508,"57x":508,"587":508,"58x":508,"597":508,"59x":[485,502,508],"601":508,"603":508,"604":508,"6057":508,"60x":502,"611":508,"613":508,"614":508,"615":508,"6187":508,"61accuraci":508,"61x":[485,508],"631847":3,"633":508,"636":508,"639":508,"63x":485,"641":508,"644":508,"6455":508,"648":508,"64x":502,"65x":508,"666":508,"66x":[485,508],"6739":508,"677":508,"680":508,"6845":508,"6850":502,"686":508,"68x":508,"690":508,"6962":502,"69x":[485,508],"6ece06672ed3":33,"6f0d0f71d92e":[33,34],"6ms":436,"7022":508,"7025":508,"7034":508,"70x":508,"7153":508,"722":508,"7226":508,"7229":508,"725":508,"7323":508,"7399":508,"73x":[485,508],"740":508,"7415":508,"7442":508,"748":508,"7495":504,"74x":508,"753":508,"75iou":223,"75x":[485,508],"761":508,"7614":508,"7615":508,"764":508,"7646":508,"76top":508,"76x":508,"770":508,"776":505,"78x":508,"791":508,"7965":508,"79x":485,"800":[216,506],"8001":[42,286,289],"8018":508,"8025":508,"8044":508,"8074":508,"8080":472,"8084":508,"80x":508,"8178":508,"819":508,"81x":508,"8213":508,"824":508,"8256":508,"8259":508,"8266":504,"8280":486,"8291":504,"8294":504,"8299":504,"82x":508,"8314":508,"8363":508,"8371":508,"8372":504,"8380":[498,502,508],"8382":508,"83x":508,"8411":508,"84913":434,"84x":508,"8626":508,"8684":508,"86b":498,"875":[179,506],"8782":508,"87f1":508,"8814":508,"885":508,"88x":[485,508],"894":508,"901":508,"9048":508,"9091":508,"916541":35,"91x":508,"931":498,"93x":508,"9403":508,"952":508,"9522":508,"9527":[275,482,504,507],"953":498,"95x":508,"960":508,"962":508,"96x":485,"97x":485,"98x":[485,508],"992":486,"999":502,"99x":508,"9e89549a08c8":[34,35],"abstract":[7,9,32,38,40,69,79,80,81,82,83,84,85,86,96,101,103,104,105,106,107,110,113,114,123,124,127,128,182,216,217,218,219,226,227,238,240,244,248,252,253,255,256,258,259,260,262,263,264,272,284,301,376,387,388,409,418,436,459,487],"boolean":[38,40,42,70,79,234,443],"break":[4,478,480],"case":[9,32,93,97,181,200,215,216,218,219,227,241,253,254,255,271,272,434,443,472,473,475,478,480,487,492,496,499,500,506],"class":[1,2,3,7,9,32,61,239,270,370,371,473,475,476,478,482,486,492,496,497,505,507],"const":[78,86,87,90,91,93,108,109,122,129,255,313,324,327,333,339,341,342,346,425,433,442],"default":[6,7,13,38,68,70,121,129,148,154,166,168,171,172,179,182,190,201,202,203,213,216,219,220,223,226,227,229,249,255,256,260,273,274,275,276,278,279,284,295,315,317,318,320,322,325,326,330,352,353,356,373,383,432,434,445,446,450,451,472,473,475,476,482,489,492,495,496,501,504,506,507],"enum":[42,67,295,397,426],"export":[223,258,259,263,285,443,505],"final":[4,9,32,85,250,278,436,496,499,503,507],"float":[3,4,13,38,40,43,67,68,70,129,148,179,201,213,220,221,223,224,225,232,234,235,248,250,251,252,260,263,275,298,314,323,331,332,347,353,408,413,430,434,436,441,443,444,451,454,462,471,476,482,492,506],"function":[1,2,4,7,9,32,40,43,70,85,129,148,171,172,190,219,230,237,238,241,251,254,262,273,274,276,278,279,286,289,472,473,475,478,487,489,490,492,493,499,504,505,507],"import":[1,2,3,4,6,9,32,154,219,229,232,285,295,473,475,476,478,480,486,492,493,494,495,496,497,499,501,505,506],"int":[3,38,40,42,43,68,70,129,148,154,179,199,200,201,202,213,216,221,223,227,232,234,235,239,258,259,263,264,285,301,312,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,334,336,338,339,340,341,342,343,344,346,390,422,429,430,432,434,435,436,437,438,443,444,451,453,456,468,476,492,499,506],"long":[216,484,506],"new":[6,9,32,42,67,79,129,141,154,177,181,191,197,203,212,214,216,248,249,252,254,262,295,338,339,343,455,473,474,480,481,493,500,503,504,506],"public":[0,129,474],"return":[1,2,3,4,7,9,13,32,38,40,42,43,44,67,68,70,73,76,79,80,83,84,85,86,90,91,93,97,104,108,109,113,114,115,116,117,118,126,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,152,154,159,160,162,166,171,172,177,179,181,182,187,199,200,203,207,210,211,212,213,214,215,216,217,219,220,221,223,224,225,226,227,229,230,231,232,233,235,237,238,239,240,244,248,249,250,251,252,254,256,260,262,263,264,270,272,273,274,275,276,278,279,284,285,288,289,290,294,295,313,314,316,323,324,325,326,327,329,331,332,356,359,362,393,429,432,434,436,437,438,443,446,455,456,459,476,480,492,493,494,496,505,507],"short":507,"static":[3,4,7,68,129,148,232,254,272,307,311,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,345,347,348,376,379,381,382,384,386,387,388,389,399,413,415,420,422,427,429,434,436,441,442,444,456,460,467,468,489,507,508],"super":[2,3,4,225,232,235,496],"switch":[4,108,505],"throw":434,"true":[3,4,42,85,86,108,129,152,154,172,181,199,201,203,204,215,216,221,223,227,232,244,248,284,393,429,432,443,476,480,492,496,501,505,506,507],"try":[1,199,456],"while":[4,5,6,70,250,275,472,475,486,489,493],AGE:234,AWS:[6,500,508],And:[93,190,219],Being:[0,474],For:[0,1,3,4,5,7,203,215,216,223,224,225,227,232,248,251,272,434,472,474,479,480,486,489,499,501,505,507,508],IDs:[222,223],Ice:500,LTS:498,NAS:[22,165,219,230,237,238,239,240,489],NOT:201,Not:428,OPs:[472,507],One:[6,9,32,472,475,480,489,499,500],STS:485,TLS:[460,472],That:[85,472,475],The:[0,1,2,3,4,5,7,8,9,10,11,13,15,22,30,31,32,38,40,43,44,61,68,70,76,93,97,115,116,117,129,154,159,160,161,162,164,165,166,171,172,177,178,179,182,184,185,187,191,197,201,202,203,204,205,207,209,210,211,212,214,216,217,218,219,220,221,222,224,225,226,227,229,230,231,232,233,234,235,237,238,239,240,241,244,248,249,250,251,252,253,254,255,256,260,264,270,271,272,273,274,275,276,278,279,284,285,286,288,289,290,294,295,313,314,316,319,323,324,327,328,331,332,339,344,347,349,350,351,352,353,354,355,368,375,376,425,472,473,474,475,476,478,479,480,481,482,485,486,487,489,490,492,493,494,496,497,499,501,503,505,506,507,508],Their:288,Then:[1,7,9,32,223,472,486],There:[227,254,472,478,489,492,493],These:[1,3,9,32,489],Ups:[6,500],Use:[182,474,480,500],Uses:3,Using:[0,474,500,507],Will:[149,173,174,177,456,478,489],With:[1,4,7,120,475,496,499,500,508],Yes:508,__call__:[9,32,177,209,210,211,212,475],__dict__:3,__getitem__:[9,32,177,199,203,207,212,214,216,473,475,476],__init__:[2,3,7,9,32,476,492,496,507],__iter__:[177,199,203,207,212,473,475],__len__:[177,199,203,207,212,475,476],__new__:2,__next__:475,__str__:3,__version__:42,_acc:505,_add_observer_:505,_epoch_ran:[217,219],_fusedbatchnormex:85,_generate_dataload:[191,197],_job:371,_jobscontrolqueu:370,_jobsmmanag:371,_kei:275,_make_divis:3,_mkllayernorm:93,_observer_forward_hook:505,_post_eval_hook:[68,505],_pre_eval_hook:505,_propagate_qconfig_help:68,_quantizedconv:115,_quantizeddeconv:115,_quantizedmatmul:[117,118],_recordingobserv:505,_result_list:496,_search_pattern:129,_summary_:[278,285],a100cuda:508,abc:[7,225,376,436,505,507],abcadaptor:7,abctunestrategi:507,abil:[7,475],abl:[38,70,104,171,172,215,272,273,274,275,276,278,279,284,499],abound:500,about:[0,347,376,431,432,438,472,474,475,482,501,508],abov:[7,76,223,473,486,499],abs:[67,250,471],abs_max:244,abs_sum:244,absolut:[227,233,482,492,498,499,507],abus:[0,474],acc1:3,acc5:3,acc:[2,3,40,43,227,235,264,485,502,505,508],acc_predictor:235,acccriterion:453,acceler:[5,6,478,499,500,501,507],accelerator_execution_tim:328,accept:[0,7,37,472,474,493],access:[90,91,93,129,165,166,428,443,456,460,472],accessdeniedexcept:428,accompani:491,accord:[2,7,42,171,177,201,202,203,212,214,216,219,252,253,263,273,274,275,276,278,279,284,442,476,480,499,501,506,507],accordingli:[254,507],account:[0,232,474,504,507],accumul:223,accur:4,accuraci:[2,3,4,6,9,32,68,164,171,172,181,217,218,219,227,231,232,233,235,237,241,253,255,264,271,272,273,274,275,276,278,279,284,300,314,324,333,339,341,412,436,444,446,462,472,473,475,479,480,481,482,485,486,492,493,495,496,497,499,500,502,503,504,505,507,508,509],accuracy_criterion:[9,32,482,496,504,507],accuracy_criterion_threshold:331,accuracy_criterion_typ:331,accuracy_go:444,accuracycriterion:412,accuracypars:436,accuracyspars:508,achiev:[6,9,32,218,219,253,255,272,481,492,497,499,500,505,507],acq:275,acq_max:275,acquisit:275,across:[6,9,32,44,218,219,228,253,255,272,477,499,509],act:[0,199,474],action:[0,474,486],activ:[3,4,6,7,38,40,43,44,68,70,137,278,352,471,472,479,481,482,485,498,505,507],activation_max:353,activation_min:353,activation_onli:44,activation_post_process:[3,505],actual:[4,70,227,480],adadelta:480,adam:187,adamoptim:451,adamw:187,adamwoptim:451,adapt:[0,40,43,68,69,70,474],adaptor:[6,10,288,481,489,501,503,505,507],adaptor_registri:[7,38],add:[3,7,13,44,67,75,87,129,137,154,187,203,220,227,249,251,254,307,313,314,316,323,324,325,326,327,328,331,332,333,334,338,339,340,341,342,343,345,361,443,468,472,474,476,480,486,492,495,496,504,505,507],add_benchmark:[333,339],add_dataset:[334,339],add_dummy_dataset:[339,343],add_edg:361,add_graph:505,add_histogram:505,add_model:[339,340,343],add_modul:505,add_nod:[129,361],add_optim:[339,341],add_origin_loss:182,add_output_graph_nod:141,add_profil:[339,342],add_quantization_optim:[339,341],add_refresh:468,add_result:[333,339,342],add_standard_optim:[339,341],add_tuning_histori:[339,341],add_unit:443,added:[44,275,313,314,316,323,324,325,326,327,331,332,472,486,493,505],adding:[472,486,505],addit:[3,85,93,159,171,285,472,478,486,503],addition:[480,507],additional_log_nam:[429,437],addn:7,address:[0,460,472,474,493,500],addv2:[7,75,92,93],adher:474,adjust:[3,4,235],advanc:[0,6,452,474,475,485,507],advantag:475,afc:225,aff:215,after:[2,3,4,9,32,42,44,68,179,183,184,190,201,216,217,219,232,248,250,251,252,278,430,472,473,475,476,478,489,492,495,496,497,499,501,504,505,506,507],again:[203,476,486,501],against:221,age:[0,474],agent:2,aggreg:[129,438],aggress:252,aggressive_ratio:252,agnost:[223,478],agnostic_mod:223,aid:477,aim:[2,475,507],albert:508,alemb:[427,484,490],alembic_vers:[334,335],alexnet:508,algorithm:[2,6,7,13,42,165,215,220,227,230,234,237,238,240,278,289,290,478,489,499,505,507,509],algorithm_registri:[160,162],algorithm_typ:[160,162],algorithmschedul:[160,162],alibaba:[6,500],align:[0,216,474,506],alignimagechannel:506,alignimagechanneltransform:216,all:[0,1,3,4,6,7,9,32,38,43,44,61,68,70,83,86,108,109,121,160,162,173,174,177,181,182,187,191,197,199,203,207,210,211,212,214,216,220,223,225,226,227,239,242,243,244,245,248,251,254,256,258,259,262,263,264,270,273,274,275,278,284,289,290,299,310,312,321,337,339,344,349,350,363,365,368,369,375,376,379,381,388,394,401,403,407,408,410,416,421,425,434,438,460,472,474,475,476,480,485,486,490,497,498,499,500,501,506,507],all_metrics_per_categori:223,allenai:[224,225],allow:[3,4,187,275,460,472,473,478,480,482,486,492,493,507],allow_api_cal:460,almost:3,along:[485,490],alpha:233,alreadi:[4,7,181,203,215,430,456,472,476,489],also:[2,3,5,6,7,13,177,200,203,207,212,216,220,272,472,473,474,475,478,485,486,489,492,496,497,499,501,507,509],altern:[168,255],although:[200,504],alwai:[184,185,223,473,492,499],amd:[6,489,508],among:227,amort:275,amount:3,amper:499,amx:104,anaconda:[485,490],analys:251,analysi:504,analyt:[6,481,485,490,500],analyz:[4,129,148,260,499,504,505],anchorgener:1,ani:[0,1,93,148,217,219,223,225,297,298,300,302,304,305,306,307,308,309,311,313,314,316,323,324,325,326,327,328,332,334,335,345,347,352,353,356,358,364,373,376,383,386,387,388,390,393,395,398,402,406,408,411,414,417,422,423,429,430,432,434,436,437,443,444,445,446,447,449,450,451,452,453,454,455,459,460,467,468,472,474,475,480],ann:2,anno_dir:[202,476],anno_path:[227,492],annot:[202,223,476,492],anoth:[13,38,70,129,216,219,220,229,285,475,478,495,506,507],answer:[0,216,224,225,474,506,508],answer_start:225,answeringsquad:508,anywher:499,apach:[491,509],api:[4,8,11,15,30,31,43,68,93,98,129,218,219,223,253,255,272,333,334,335,336,337,338,340,341,342,343,459,460,475,486,488,489,495,503,504,507],app:[425,458,481],appear:[0,472,474],append:[1,3,159,254,275,496,497],append_attr:159,appl:507,appli:[0,4,7,137,221,248,250,472,474,497,499,501,504,507],applic:[179,428,456,458,460,472,500,505,506],apply_batchmatmulv2_fus:137,apply_batchmatmulv2_mul_add_fus:137,apply_conv_biasadd_relu_fus:144,apply_matmul_biasadd_fus:137,apply_matmul_biasadd_relu_fus:137,apply_the_transform:[132,133,134,135,136,137,138,141,142,143,144,146,147],appoint:[0,474],approach:[1,2,6,68,165,219,230,231,232,237,238,311,444,451,478,482,489,500,507],appropri:[0,474],approxim:[13,220,221,492],apr:500,apt:[484,485,490],arbitrari:497,arcfac:508,architectur:[181,230,231,237,238,240,478,485,490,499,500,509],archiv:393,archive_path:393,area:[216,223,492,506],aren:148,arg:[1,2,3,9,32,42,68,76,126,201,202,203,218,219,229,248,253,254,258,259,260,263,264,275,285,300,302,304,305,306,315,317,318,320,322,325,326,330,429,437,456,475,476,478,480,494,499,505,506],argument:[2,251,254,297,402,406,411,417,429,456,473,478,486],arithmet:4,arm:[6,489,508],arr:295,arrai:[38,40,43,68,70,129,148,154,216,223,227,232,234,239,263,275,289,290,506],arrang:[202,203,206,476,499],arrow:472,art:499,articl:[5,224,225],artifici:2,arxiv:250,as_attach:468,asd932_:[203,476],asd:[298,414],ask:490,aspect:[216,506],assert:[3,496],assertionerror:[248,249,250],assign:[223,295,333,334,339,340,341,342,472,480,493],assist:503,associ:[37,223,334,335],assum:[3,7,215,223,239],asym:[7,67,507],asymmetr:471,atom:491,att:[224,225],attach:478,attack:[0,474],attent:[0,201,474,478],attention_mask:[201,499],attr:[129,148,154],attr_valu:148,attribut:[7,9,32,67,85,129,148,159,165,166,363,364,368,425,441,487,493],attribute_to_kwarg:67,attribute_typ:358,attributeerror:182,aug:500,augment:44,augment_graph:44,author:[460,491],auto:[1,273,295,481],autom:2,automat:[1,6,9,32,203,206,218,219,228,235,253,255,272,472,476,481,489,493,497,506,507,509],automixedprecisiontunestrategi:273,autopep8:474,aux:42,avail:[0,6,8,10,11,15,22,30,31,37,260,311,315,317,318,322,325,326,330,395,472,485,489,498,504,507],averag:[3,223,224,225,227,478,492,496,499,507],averagemet:3,avg:[3,4],avgpool:7,avoid:[1,201,505],avx512:493,avx512_bf16:493,awar:[9,32,38,40,43,68,70,173,174,177,219,229,248,254,479,480,481,489,493,495,497,508],axi:67,azur:[6,500],b_dataload:[9,32,473,495],b_filter:42,back:[3,38,40,43,68,70,216,232],backbon:504,backend:[1,5,9,32,40,43,68,69,70,187,204,205,206,208,214,216,228,471,480,482,487,489,506],backward:[4,9,32,190,219,223,285,478,480,499,503],badli:[85,93,104],bake:85,balanc:498,ban:[0,474],bandwidth:[5,493],bar:472,barthez:508,base:[2,7,13,38,40,42,43,67,68,69,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,149,152,153,160,161,162,163,164,165,166,171,172,173,174,175,177,178,179,181,182,183,184,185,186,187,188,190,191,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,223,226,227,228,230,231,234,235,237,238,240,241,242,243,244,245,248,250,252,253,254,255,256,258,259,260,262,263,264,271,272,273,274,275,276,278,279,284,286,289,290,295,300,301,302,304,305,306,309,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,351,352,353,355,358,360,361,364,374,376,379,381,383,384,386,387,388,389,397,400,405,409,412,422,426,428,430,432,436,437,438,439,441,443,444,445,446,447,449,450,451,452,453,456,457,459,461,465,466,476,479,480,481,482,485,498,504,505,507,508],base_dataload:[193,196,197,198,200],base_model:[260,262,263],basedataload:[191,193,196,197,198,200],baselin:[235,485,504,505],baseline_acc_0:505,baseline_accuraci:332,baseline_perform:332,basemetr:[226,227,256],basemodel:[258,259,260,262,263],basetransform:[177,178,179,212,213,214,216],bash:505,basi:3,basic:[6,215,230,237,248,489,490,504],basic_na:[2,219,237,255],basicna:[2,230,237],basictoken:215,basictunestrategi:274,batch:[3,4,9,32,38,40,42,70,85,183,184,190,191,193,197,199,200,219,235,241,255,271,285,313,324,441,472,475,478,486,499,502,506,508],batch_id:[9,32,190,219,255,271],batch_idx:480,batch_sampl:[183,184,191,193,196,197,198,200],batch_siz:[2,3,9,32,183,184,191,193,196,197,198,199,200,201,202,235,301,313,324,422,444,473,475,476,480,486,487],batchmatmul:137,batchmatmulv2:137,batchnorm2d:3,batchnormwithglobalnorm:85,batchsampl:199,bayesian:[2,240,491],bayesianoptimizationsearch:240,bayesiantunestrategi:275,bbox:[1,223,492],bboxes_labels_scor:1,beam:[13,220,492],becaus:[1,216,223,248,499,506,507],becom:[7,85],been:[2,9,13,32,86,215,220,234,248,250,472,478,486,493,509],befor:[126,190,201,217,219,241,248,250,251,252,278,333,472,474,475,476,478,480,484,486,496,499,504,505,507,509],before_delete_benchmark_entri:333,begin:[3,190,219,241,250,251,255,271,478,499,507],behavior:[0,7,9,32,223,474,478,494,505,507],being:[223,235,254,289,290,364],belong:[203,260],below:[1,2,4,7,9,32,77,89,97,254,273,274,471,474,478,480,486,487,492,496,497,499,505,507],bench:[312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,398,424],benchark:313,benchmark:[6,11,38,40,70,183,184,219,254,255,264,314,321,324,333,339,341,344,345,368,425,426,436,441,458,463,475,481,486,494,495,507,508],benchmark_api_interfac:[339,344,368],benchmark_conf:[164,165,255],benchmark_config_gener:[303,368,425],benchmark_data:296,benchmark_detail:298,benchmark_id:[298,313,314,324],benchmark_mod:[297,436],benchmark_model:[299,368,425],benchmark_nam:313,benchmark_result:[313,321,344,368],benchmark_result_upd:298,benchmark_result_update_pytorch_script:298,benchmarkaddparamsinterfac:[333,339,345],benchmarkapiinterfac:[333,339],benchmarkconf:473,benchmarkconfiggener:300,benchmarkeditparamsinterfac:[333,339,345],benchmarkparserfactori:436,benchmarkresult:[313,314],benchmarkservic:461,benefit:[5,497,499],bert:[200,201,216,476,478,482,492,499,506,508],bert_base_cola:485,bert_base_mrpc:485,bert_base_mrpc_stat:502,bert_base_nli_mean_tokens_stsb_stat:502,bert_base_rt:485,bert_base_sparse_mrpc_stat:502,bert_base_sst:485,bert_base_st:485,bert_large_mrpc:485,bert_large_qnli:485,bert_large_squad:485,bert_large_squad_stat:502,bert_mini_mrpc_stat:502,bert_mini_sst2_stat:502,besid:[7,474,478,497],best:[0,2,4,6,9,32,68,216,217,218,219,230,231,237,238,253,255,272,474,485,490,496,506,507,509],best_configur:294,best_model:[217,219],best_model_weight:294,best_qmodel:278,best_scor:[217,219],best_tune_accuraci:332,best_tune_perform:332,beta:93,better:[4,6,9,32,70,120,171,172,239,272,273,274,275,276,278,279,284,479,492,493,499,500,504,507],between:[1,3,7,9,32,70,149,163,182,216,224,226,227,232,234,235,256,278,347,455,459,473,478,481,486,489,492,503,504,506,507],bf16:[7,40,69,104,115,117,486,493,501,507],bf16_op:[73,126,501],bf16convert:[73,501],bf16wrapper:501,bfloat16:[486,493,501],bfp16:481,bia:[3,70,148,149,505],bias0_nam:[38,40,43,68,70],bias1_nam:[38,68,70],biasadd:[7,75,87,89,137,144],biascorrect:149,bibtex:491,bicub:[216,506],biggest:[273,274],bilibili:500,bilinear:[179,216,506],bilinearimagenet:506,bilinearimagenettransform:179,bilingu:[13,220],bilstm:508,bin:[289,290],binari:[6,154,227,484,492,509],bind:181,bind_al:505,bio:[432,498],bit:[5,479,493,500],black:507,black_nod:44,blendcnn:[478,508],bleu:[219,221,226,255,492],bleu_hook:221,bleu_scor:[13,220,221],bleu_token:220,bleu_util:[219,226,255],blob:[3,220,221,224,225,248],block:[3,232,248,251,460,489,496,499],block_ifram:460,block_siz:248,block_size_1:248,block_size_2:248,block_snif:460,blockwise_over_matmul_gemm_conv:251,blue:472,bodi:[0,474],bool:[38,42,43,44,68,85,86,129,148,154,172,179,199,201,203,216,221,223,227,232,234,235,248,284,323,356,361,364,376,379,381,382,383,384,386,387,389,393,395,398,413,429,430,432,437,443,445,456,462,468,476,492,506],boolen:[43,68,70],boost:[432,493,500],booster:479,border:506,both:[0,2,4,5,7,154,238,240,474,475,479],bottom:[129,273,274,472],bound:[97,181,216,219,223,232,275,492,506],boundari:[216,345,506],bowl:225,box:[1,9,32,216,223,227,472,492,505,506,507],bracket:307,branch:154,brand:[491,498],breviti:[13,220,221,492],bridg:[7,489],briefli:499,bright:506,bring:[218,219,253,255,272,474],broad:489,broadcast:[216,480,506],broadcast_optimizer_st:480,broadcast_paramet:480,bronco:225,brought:494,brows:357,browser:[356,472],bug:474,build:[3,7,42,141,230,232,237,238,260,263,313,314,316,327,328,332,356,413,422,443,460,472,481,490,494,507],build_dataload:422,build_info:[313,314,316,323,324,327,328,332],build_paramet:460,built:[2,9,32,98,184,185,187,213,214,216,254,473,480,481,496,506,507],builtin:480,bulk:[328,339,342],bulk_add:328,bulk_add_result:[339,342],button:[472,489],bycategori:223,c1c2:97,c6a:508,c6g:508,c6i:508,cach:[13,220,377,460,484],caffenet:508,cal_dl:[9,32],calcul:[9,32,44,70,182,204,205,224,225,235,245,248,250,251,264,278,286,289,347,436,441,476,492,496,499,504,507],calculate_ms:347,calculate_quantization_param:44,calculate_scale_zeropoint:44,calculate_throughput:441,calib_cfg:42,calib_data:[42,475],calib_dataload:[6,9,32,183,184,254,272,475,476,487,492],calib_func:272,calib_iter:7,calib_mod:44,calib_model:42,calib_tensor:42,calibcollector:42,calibdata:42,calibr:[3,7,9,32,38,40,42,43,68,164,171,172,218,219,253,254,255,272,274,275,276,278,279,284,289,290,452,475,487,489,507],calibration_data:[123,126],call:[1,2,7,9,32,37,42,190,219,223,234,235,241,248,250,251,255,271,312,344,429,437,438,472,475,487,499,505,506,507],call_on:429,callabl:[2,168,225,255,285,443,459,460],callback:[241,286,288,289,459],calul:248,camembert:508,can:[1,2,3,4,5,6,7,9,32,79,149,163,164,171,172,181,183,184,200,203,216,219,223,225,227,248,250,251,252,255,264,272,273,274,275,276,278,279,284,398,427,434,443,472,473,475,476,478,480,481,482,485,486,489,490,492,493,494,496,497,498,499,501,504,505,506,507],candidate_distr_q:[289,290],cannot:[1,223,432,484,505],cantain:[224,225],capabl:[7,38,40,43,68,69,70,493,507],capac:504,care:223,cascad:[6,485,486],cast:[501,506],cast_tensor:67,castonnxtransform:216,castpytorchtransform:216,casttftransform:216,categor:492,categori:[38,70,203,222,223,476],category_id:223,category_id_set:223,category_stat:223,caus:499,center:[6,216,506,507],centercrop:[473,475,506,507],centercroptftransform:216,centercroptransform:216,cento:[6,485],central_fract:[179,506],cern:500,cert:472,certain:504,certif:472,cfg:[94,95,165],cfg_fname:165,cfg_from_fil:295,chang:[3,104,120,149,163,250,252,295,309,314,413,435,441,474,475,480,484,492,505,506,507],change_log_level:435,channel:[3,7,149,163,179,216,235,248,485,489,490,499,506,508],channel_axi:[161,163],channels_last:179,characterist:[0,474],chart:[472,504,505],check:[3,4,6,42,68,85,86,129,154,172,249,254,284,295,334,339,376,379,381,382,384,386,387,389,395,398,413,429,430,432,443,445,472,474,480,486,490],check_all_fold:86,check_config:249,check_const_input:86,check_if_collect_tuning_histori:398,check_if_custom_metric_or_dataload:[334,339],check_is_pruned_step:250,check_modul:443,check_mx_vers:42,check_vers:395,checkbox:472,checknumer:[103,148],checkpoint:[9,32,294,494],checkpoint_dir:294,checkpoint_sess:260,cheng:491,child:[97,505],chines:500,choic:[7,201,472,476,492],choos:[203,472,485,489,503,507],chosen:[38,472],chuanqi:491,chunk:[216,506],cifar100:[203,476],cifar10:[203,476],cifar:[203,476,508],circumst:[0,474],ckpt:[70,154,260,272,508],claim:[491,498],clarifi:[0,474],class_1:[203,476],class_n:[203,476],classic:507,classif:[6,201,216,227,251,478,492,500],classifi:[3,227,476,478],classificationimagenet:508,classificationmnli:508,classificationmrpc:508,classificationqnli:508,classificationqqp:508,classificationsst:508,classmethod:[242,243,244,431,464,466,469],clean:[182,215,313,324,327,333,334,339,341,342,343,427,442,474],clean_log:442,clean_statu:[313,324,327,333,339,341,342,442],clean_workloads_wip_statu:427,clear:[7,13,199,220,226,227,235,256,492],clear_csv:235,clear_featur:182,clearli:129,click:[6,472,489,500,505],client:[456,472],clienterrorexcept:428,clip_grad_norm_:499,clone:[6,472,485,490],close:[4,149,163],cloud:[6,500],cls:[38,61,68,160,162,177,182,187,203,207,210,211,212,214,216,239,244,248,250,252,264,270,284],clx:486,cmd:486,cnn:508,cnt:[3,4,478],coco:[202,223,227,485,492],coco_label_map:[219,226,255],coco_tool:[219,226,255],cocoev:223,cocoevalwrapp:223,cocomap:492,cocomapv2:[227,492],coconpi:[202,476],cocoraw:[202,476],cocorecord:476,cocorecorddataset:202,cocowrapp:223,code:[1,6,7,9,32,171,172,181,219,229,251,254,272,273,274,275,276,278,279,284,334,339,357,375,438,468,469,475,476,478,480,481,485,487,489,491,492,496,497,499,500,504,505,506,507],codenam:493,coder:[6,489,500],coeffici:[77,233],cola:[201,476,485,492,508],collabor:474,collaps:[363,368,425,472],collat:[9,32],collate_fn:[183,184,191,193,196,197,198,200,476],collect:[3,42,70,177,183,184,185,186,188,212,214,216,220,225,226,227,256,286,289,295,296,398,419,430,432,443,444,505,507],collector:42,collectorbas:42,collecttransform:216,color:472,colorjitt:506,column:[232,472,499],column_nam:232,com:[0,3,6,220,221,224,225,248,251,472,474,476,485,486,490,491,503,504,508,509],combin:[1,7,40,69,171,172,179,190,219,254,272,273,274,275,276,278,279,284,295,482,489,497,500,501,506,507],combine_histogram:295,combine_mean_std:475,come:507,command:[181,219,313,324,327,333,339,341,342,429,437,456,472,480,486],command_line_of_script:298,comment:[0,474,476,492,506],commentsbalanc:508,commit:[0,474],common:[0,4,6,9,10,32,219,229,235,238,239,240,248,254,288,437,438,443,473,474,475,476,478,480,481,485,486,487,490,494,495,499],common_cap:7,common_op:7,common_pattern:7,common_precis:7,commpon:285,commun:[0,255,425,458,459,460,472,474],compact:[478,499],compar:[129,227,278,472,475,479,486,492,504,505,507],compare_kei:295,compare_label:[40,43,68,70,227,492],compare_node_attr:129,comparison:[503,505],compat:[9,32,70,104,154,223,232,260,480,485,494,503],compil:[220,498],complaint:[0,474],complet:[86,472,507,508],complex:493,compli:507,compon:[2,6,9,10,32,217,219,230,237,241,253,254,255,285,425,459,462,474,475,480,481,491,497,498],compos:[43,68,70,148,216,475,506],composetransform:216,compress:[5,6,219,241,285,478,489,496,497,499,509],compression_manag:285,compressionmanag:285,compressor:[1,2,7,9,32,42,68,181,187,190,213,214,216,219,226,227,229,248,251,253,254,256,260,424,431,443,473,474,475,476,477,478,480,481,483,484,485,486,487,490,491,492,493,494,496,497,499,500,503,505,506,507],comput:[3,4,5,13,67,85,190,217,219,220,221,223,224,225,227,233,479,481,492,493,499,507],compute_bleu:221,compute_spars:[244,245],computemetr:223,concat:153,concat_gener:216,concatv2:7,concept:[7,9,32,487,504],conclud:2,concret:[171,273,274,275,276,278,279,284],conda:[472,484,485,490,503],condit:[108,201,202,203,216,476,491,506,507],conduct:1,conf:[1,2,4,9,32,160,162,171,172,181,219,228,229,241,254,272,273,274,275,276,278,279,284,285,454,473,475,478,486,487,507],conf_fnam:[230,237],conf_fname_or_obj:[2,9,32,164,181,190,217,218,219,228,229,230,231,237,238,241,253,254,255,271,272],confidenti:[0,472,474],config:[2,40,42,43,68,69,168,171,172,181,190,218,219,232,238,241,248,249,250,251,252,255,273,274,275,276,278,279,284,285,288,294,295,296,297,300,301,302,304,306,309,333,339,341,342,346,347,391,393,400,402,405,406,409,411,412,419,422,425,433,443,446,447,448,449,453,454,464,466,469,472,476,478,480,486,489,494,499,501,505,507],config_file_path:251,config_gener:[255,368,425],config_inst:[181,219],configgener:[300,301,302,304,305,306],configur:[2,3,7,9,32,37,38,40,42,43,68,69,70,129,164,165,168,171,172,173,174,175,177,181,201,202,203,206,217,218,219,223,229,230,231,232,234,237,238,241,249,251,253,254,255,271,272,273,274,275,276,278,279,284,285,294,300,301,302,303,304,305,306,307,308,309,310,313,324,334,336,339,398,425,427,443,444,445,446,447,449,450,451,452,453,458,460,472,473,476,479,481,492,496,503,506,508],configuration_pars:[310,368,425],configuration_path:301,configuration_wizard:[255,368,425],configurationintel:498,configurationpars:307,configure_ag:234,configure_nsga2:234,confirm:472,conflict:484,connect:[37,250,324,333,334,336,337,338,339,340,341,342,343,472,499,504],connector:459,consequ:[486,493],consid:[0,1,154,227,474,475,478,507],consist:[1,9,32,78,86,472,474,507],consolid:[485,490],constant:[79,85,129,148,275,426,475,506],constant_valu:216,constrain:4,constraint:[171,218,219,253,255,272,475,504,507],construct:[0,183,184,185,186,188,204,205,208,288,473,474,476,480,507],consum:475,contact:[0,474,503,504],contain:[9,32,38,40,43,44,68,70,79,90,91,93,97,129,148,154,164,171,172,201,202,203,217,218,219,223,224,225,229,232,241,242,243,244,248,249,250,251,252,253,255,271,272,273,274,275,276,278,279,284,294,299,303,310,315,317,318,320,321,322,325,326,329,330,334,339,344,349,350,354,357,363,368,369,375,394,401,403,404,407,408,410,416,421,425,475,476,478,489,492,499,505,507],content:476,content_fold:[208,476],context:37,contigu:[159,499],continu:[2,9,32,223,248,499],contraint:93,contrast:[248,506],contribut:[0,6,488],control:[1,9,32,38,40,70,109,160,162,235,339,344,472,498,507],conv0:505,conv1:[7,507],conv2:[7,507],conv2d:[1,3,7,40,69,83,84,88,89,94,95,149,505],conv:[3,7,38,44,116,144],conv_3:44,conv_4:44,convbnrelu:3,conveni:472,convent:[203,223,478],convers:[6,77,104,219,229,481,493,501],convert:[1,3,4,5,9,32,38,42,67,68,70,73,75,76,77,78,79,80,81,82,83,84,85,86,89,96,97,101,103,104,105,106,107,110,113,114,123,124,126,127,128,213,215,216,219,223,227,229,238,240,249,258,259,260,263,285,315,322,330,422,434,481,486,493,495,501,506],convert_by_vocab:215,convert_examples_to_featur:216,convert_ids_to_token:215,convert_nodes_to_list:422,convert_sub_graph:68,convert_to_unicod:215,convert_tokens_to_id:215,convertaddtobiasaddoptim:75,converted_model:493,convertlayoutoptim:76,convertleakyreluoptim:77,convertnantorandom:78,convertplaceholdertoconst:79,convolut:[85,478,499,500],convrelu2d:3,cooper:[6,485,493],coordin:[216,275,506],copi:[148,249],copy_attr:148,copyright:491,core:[181,219,234,313,472,491,498,502,508],core_id:181,core_list:[181,219],cores_per_inst:[313,444,473,475,486],corner:[7,216,506],corpor:[491,498],correct:[0,3,149,163,223,224,225,227,249,397,472,474],correct_k:3,correl:233,correspond:[7,9,13,32,70,201,220,223,227,248,250,254,275,499,504,507],cost_factor:233,could:[0,9,32,70,171,172,203,254,272,273,274,275,276,278,279,284,474,479,486,495,497,499,507],count:[2,3,42,238,476],count_model_paramet:238,coupl:200,cours:497,cover:[2,6,9,32,474,487,500],cpu:[3,4,115,116,117,118,126,129,148,235,474,485,489,493,498,500,501,505,509],cpu_execution_tim:328,cpx:486,creat:[0,2,7,9,32,33,34,35,37,70,129,148,183,184,191,197,201,203,217,219,223,231,232,237,238,239,254,262,275,288,312,329,338,339,343,344,422,442,455,468,474,476,482,485,486,494,495,504,505,507],create_acc_predictor:[2,231,237],create_al:[312,344],create_constant_nod:[129,148],create_criterion:[217,219],create_dir_entri:356,create_entri:356,create_eval_func:288,create_file_entri:356,create_latency_predictor:[2,231,237],create_macs_predictor:[2,231,237],create_nod:[129,148],create_nodes_map:141,create_optim:[217,219],create_project:[329,338,339,343],create_search_space_pool:239,create_simple_respons:455,create_sqlalchemy_engin:[312,344],create_tf_config:422,create_train_func:288,create_training_set:232,creation:[37,310],creationflag:[429,437],criteria:[1,9,32,218,219,241,248,250,253,255,271,272,481,507],criterion:[3,4,11,68,168,184,187,217,219,255,412,451,478,486,499,507],criterion_cl:182,criterion_registri:182,criterion_tupl:68,criterion_typ:182,critet:182,critic:[0,6,474],crop:[179,216,476,506],crop_pad:216,crop_ratio:[208,476],cropres:506,cropresizetftransform:216,cropresizetransform:216,croptoboundingbox:[216,506],cross:[9,32,187,226,227,256,487,507],crossentropyloss:182,crossentropylosscriterion:451,crossover_eta:234,crossover_prob:234,crowd:223,crt:472,crucial:499,cryptographi:472,cse:97,csp:460,csv:[2,232,235,443,472],csv_path:235,ct1000mx500ssd1:498,ctrl:508,ctx:[42,475],current:[2,3,7,9,32,40,43,69,70,85,93,97,129,219,229,235,248,250,251,252,275,472,480,481,482,492,496,499,507],current_best_model:278,current_it:505,current_prune_step:252,current_sparsity_ratio:250,cursor:472,curv:492,custom:[9,32,68,232,254,294,334,339,478,481,499,504],custom_metr:[9,32,487],custom_non_quant_dict:68,customized_msg:295,customobj:496,cuurent:250,cv2:179,cwd:[429,437],cycl:[2,475],d64:498,dai:507,data:[3,6,7,11,38,40,42,43,44,67,70,78,126,129,148,154,164,171,172,181,182,183,184,219,235,248,254,255,262,272,273,274,275,276,278,279,284,295,298,301,307,308,309,311,333,334,336,337,338,339,340,341,342,343,345,347,356,372,373,383,391,392,393,395,398,412,414,422,429,441,443,444,445,446,447,449,450,451,452,453,455,459,464,466,467,469,472,475,476,480,481,482,485,486,490,492,493,501,504,505,506,507],data_dir:[201,476],data_format:[177,179,203,207,212],data_layer_typ:475,data_load:[3,4,43,70],data_loader_test:[3,4],data_nthread:475,data_path:[206,476],data_shap:475,data_sourc:199,data_x:[40,42],databas:[33,203,312,313,314,315,316,317,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,340,341,342,343,344,413,427,442],database_loc:[312,344],datafram:[232,260,263],datalad:444,dataload:[6,7,9,15,32,33,38,40,42,43,44,68,70,171,172,177,184,190,217,219,241,253,254,255,271,272,273,274,275,276,278,279,284,285,288,296,301,307,311,321,334,337,339,344,346,368,409,419,422,425,433,443,444,448,472,476,480,486,487,492,493,495,505,506,507],dataloader_data:[296,307,334,339,409,419],dataloader_id:315,dataloader_path:[334,339],dataloaderinterfac:[296,409,419],dataloadermodul:475,dataloaders_queri:315,dataloaders_to_upd:346,dataloaderwrap:42,dataset:[2,4,6,7,9,15,32,38,40,43,68,70,171,172,177,183,184,191,193,196,197,198,199,200,212,218,219,223,224,225,227,229,235,253,254,272,273,274,275,276,278,279,284,313,321,324,327,334,339,343,344,345,356,368,441,443,444,445,473,475,480,481,482,485,486,492,507,508],dataset_api_interfac:[339,344,368],dataset_data:[334,339,399,400,405,409,412,445],dataset_format:[177,203,207,212],dataset_id:[313,316,324,327,334,338,339],dataset_loc:505,dataset_nam:[316,334,339],dataset_path:[2,235,444],dataset_registri:[177,203,207,212],dataset_typ:[177,203,207,212,218,219,229,253,316],datasetaddparamsinterfac:[334,339,345],datasetapiinterfac:[334,339],datastructur:223,datatyp:[129,148,501,507],date:[33,34,35,413],datetim:434,db_connect:324,db_manag:[255,368,425,462],db_model:[333,344,368,425],db_oper:[344,368,425],db_session:[33,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,338,339,341,343,346],dbapi:37,dbmanag:[312,344],dbox:1,ddr4:498,deal:285,deberta:508,debug:[4,349,350,354,472,481,507],dec:500,decid:[7,221,250,273,274,278,356,482,503,507],decis:492,decod:[13,220,492,506],decode_singl:1,decodeimag:506,decor:[1,2,7,38,61,90,91,93,154,160,162,177,187,203,207,210,211,212,214,216,226,227,239,244,248,250,252,256,264,270,284,295,439,507],decorator_metr:[226,227,256],decreas:[3,122],deem:[0,474],deep:[5,6,7,9,32,166,471,475,485,489,490,493,500,507,509],deep_get:166,deep_set:166,deeper:478,deepest:478,def:[1,2,3,4,7,9,32,90,91,93,141,171,172,272,273,274,275,276,278,279,284,476,478,480,492,496,499,505,507],default_alpha:233,default_col:193,default_cost_factor:233,default_dataload:[197,200],default_max_iter:233,default_qconfig:3,defaultconf:165,defaultdataload:[193,197,200],deferredroutingdefinit:459,deferredsubprocessroutingdefinit:459,defin:[0,2,3,4,7,40,42,43,67,68,69,70,79,80,81,82,83,84,85,86,96,101,103,104,105,106,107,110,113,114,116,123,124,127,128,129,148,171,172,182,230,231,234,237,238,239,240,241,248,249,250,251,252,272,273,274,275,276,278,279,284,294,295,370,371,372,455,472,474,476,478,489,492,496,497,499,504,505,507],definit:[70,129,361,374,383,429,459],degrad:[5,479],degre:498,delet:[328,333,334,339,340,341,342,343,499],delete_assign:423,delete_benchmark:[313,333,339],delete_dataset:[316,334,339],delete_model:[323,339,340],delete_optim:[324,339,341],delete_profil:[327,339,342],delete_project:[329,339,343],delete_result:328,delete_tuning_detail:331,deliv:[6,500,509],democrat:500,demonstr:[7,483,485,486,495,499,505],deni:428,dens:[219,241,252,499,508],dense_shap:[205,476],densiti:507,denver:225,depend:[2,7,38,42,70,85,171,172,181,219,230,237,238,272,273,274,275,276,278,279,284,474,484,486,507],deploi:[9,32,478,507,509],deploy:477,deprec:[217,219,443,506],depth:[232,478,501],depthwiseconv2dn:[7,88],dequant:[1,3,112,115,117,118,120,137,278,347,505],dequantize_tensor:[278,347],dequantizecastoptim:80,dequantstub:3,deriv:[42,67,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,190,217,219,248,250,252,295],derogatori:[0,474],desc:[478,499],describ:[7,43,68,70,235,472,505],descript:[42,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,223,238],design:[2,9,32,184,185,200,219,234,253,499],desir:[179,213,216,506],destin:[38,44,70,219,229,495],destinatin:38,detail:[0,6,70,216,313,316,323,324,327,329,331,333,334,336,339,340,341,342,343,347,352,412,417,431,474,487,492,493,499,503,504,505,507,508],detect:[1,68,223,227,260,443,472],detection_box:223,detection_boxes_list:223,detection_class:223,detection_classes_list:223,detection_mask:223,detection_scor:223,detection_scores_list:223,detection_typ:223,detectionboxes_precis:227,detections_list:223,determin:[0,3,456,474,482],determine_gui_port:456,determine_ip:443,determine_log_level:456,determine_server_port:456,determine_url_prefix:456,determine_values_from_environ:456,determinist:[482,507],develop:[1,6,9,32,443,474,488,490,493,500,501,504,509],deviat:[216,506],devic:[4,113,114,115,116,117,118,121,126,129,140,145,148,153,182,235,478,499,509],diagnosi:[255,336,339,345,368,425,453,459],diagnosis_api_interfac:[339,344,368],diagnosis_config:324,diagnosisapiinterfac:[336,339],diagnosisfactori:348,diagnosisoptimizationparamsinterfac:[336,339,345],dialog:472,dict:[1,38,40,42,43,68,70,154,165,166,171,172,181,182,187,200,219,222,223,224,225,227,230,232,235,237,238,239,240,241,242,243,244,248,249,250,251,252,260,272,273,274,275,276,278,279,284,286,288,289,294,295,296,298,301,307,308,309,311,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,352,353,356,364,373,376,383,391,392,393,395,398,399,400,405,409,412,413,414,415,417,419,420,422,429,430,432,434,436,437,443,444,445,446,447,449,450,451,452,453,455,456,459,460,462,464,466,467,469,492,505,507],dictionari:[43,44,68,70,90,91,93,165,166,168,215,223,230,232,235,237,238,240,255,315,317,318,320,322,325,326,330,334,335,337],dictionaries_api_interfac:[339,344,368],dictionariesapiinterfac:[337,339],dictonari:[337,339],did:3,differ:[0,1,2,3,6,9,13,32,149,160,162,163,182,203,216,218,219,220,226,227,234,237,238,240,243,248,253,254,255,256,272,472,474,475,476,478,480,483,485,486,487,489,492,494,495,496,499,505,506,507,509],difficult:7,diffus:[6,500],digit:[220,500],dilatedcontract:81,dim:[216,244,275,506],dimens:[90,91,193,216,235,245,275,476,478,499,506],dimension:307,dir:[9,32,68,159,201,294,476,484,487],direct:[124,248,397],directli:[9,32,200,223,227,249,492,505],directori:[202,203,260,294,295,356,427,443,476,480,484,505],direntri:356,disabl:[0,154,432,460,474],disable_cach:460,disable_observ:4,disable_random:154,disappear:505,discov:505,discret:507,disil:[217,219],disk:[38,68,70],dispatch:[173,174,177,489],displai:363,distanc:[278,347,478],distibut:432,distil:[6,22,168,182,219,255,285,489,497,509],distilbert:[201,476,508],distilbert_base_uncased_emotion_stat:502,distilbert_base_uncased_mrpc_stat:502,distilbert_base_uncased_sst2_stat:502,distillation_conf:[165,217,219],distillationconf:478,distillationconfig:[168,255],distilroberta:508,distilroberta_base_wnli_stat:502,distribut:[3,6,42,149,163,183,184,191,193,196,197,198,199,200,432,478,485,490,503,507],distribute_calib_tensor:42,distributedoptim:480,distributedsampl:480,dive:[6,485],diverg:[286,289,290,478],divid:[3,507],divis:3,divisor:3,dlabel:1,dlrm:[227,508],do_lower_cas:[201,215,216,476,506],do_transform:[73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,115,116,117,118,120,121,122,123,124,126,127,128,133,140,141,145,149,152,153],doc:[248,492,499],doc_span_index:216,doc_strid:[216,506],doc_token:216,document:[216,471,480,482,493,503,506],doe:[3,4,13,220,223,232,476,482,492,503,506,507],doesn:[7,129,216,254,442,473,475,480],doing:[217,219],domain:[311,318,321,337,339,344,368,375,425,426,428,443,455,460,472,499,507],domain_flavour:[321,344,368,374,443],domain_flavour_id:323,domain_flavour_nam:318,domain_id:[323,330],domain_nam:317,domainflavour:[318,426],don:[1,37,149,163,434,472,507],done:[3,4,478,495,499],dot:[166,443,493],dotdict:165,doubl:500,down:[3,85],download:[203,368,391,392,394,395,425,472,476,485,486,490,503,509],download_config:[368,393,394,425],download_fil:393,download_model:[368,393,394,425],download_path:393,download_yaml_config:393,draw:[347,504,507],drive:498,driven:[6,9,32,493,496,505,509],drop:[199,223,249,493,499,508],drop_dupl:232,drop_last:199,dropout:3,dry_run:480,dscore:1,dst_type:260,dtype:[3,7,67,129,148,204,205,213,216,475,476,505,506,507],due:[104,499,505],dummi:[6,204,205,227,339,343,445,472,476,486,492],dummy_dataset:207,dummy_dataset_v2:207,dummy_v2:[205,476],dummydataset:[204,205],dump:[38,40,43,44,68,70,129,295,305,413,434,444,456,505,507],dump_calibr:44,dump_data_to_loc:295,dump_elapsed_tim:295,dump_fp32:152,dump_graph:129,dump_op_typ:44,dump_search_result:[2,238],dump_tim:505,dump_token_to_fil:456,dumper:454,duplic:[85,93,122,275],durat:[313,324,327,333,339,341,342,496,504],dure:[4,42,70,85,232,235,248,252,254,262,481,493,494,496,497,499,505],dyna:[2,219,232,233,234,235,236,237,255,489],dynam:[4,7,85,191,197,254,303,475,478,481,489,500,508],dynamic_length:[201,476],dynas_manag:[219,235,236,237],dynas_predictor:[219,235,236,237],dynas_search:[219,236,237],dynas_util:[219,234,236,237],dynast:[219,237,255],each:[3,4,7,9,32,40,43,44,68,69,70,75,76,77,78,81,82,87,88,89,92,94,95,96,98,100,101,103,105,106,107,110,112,113,118,120,121,122,123,124,126,127,128,129,149,153,179,193,199,206,213,216,221,223,224,225,234,235,250,260,263,264,278,289,290,472,475,476,478,482,496,497,499,504,505,506,507],eager:[5,251,297,402,406,411,480,489,501,505,508],earli:[482,507],eas:[475,485,490,500],easi:[219,253,472,475,500,504],easier:[148,472,500],easili:[4,7,496,499],econom:[0,474],ecosystem:500,edg:[361,363,368,425,506],edit:[0,1,333,339,341,342,345,474],edit_benchmark:[333,339],edit_optim:[339,341],edit_profil:[339,342],edu:[203,476],educ:[0,474],effect:[7,499],effici:[2,6,475,478,497,500],efficientnet:508,effort:[9,32],eightbit:[70,505],either:[4,172,223,284,493,497],elaps:295,elast:232,electron:[0,474],element:[3,44,199,223,248,251,476,489,492,499],elementwise_over_al:251,elementwise_over_matmul_gemm_conv:251,elif:3,elim:97,elimin:[89,486],els:[3,7,42,85,86,154,199,429,443,505],embed:159,emit:37,emot:508,empathi:[0,474],empir:[149,163],empti:[3,223],enabl:[3,6,70,250,432,472,480,481,486,493,498,499,500,501,509],enable_eager_execut:480,encapsul:[129,171,172,272,273,274,275,276,278,279,284,494],encod:[223,232,506],encodejp:506,encount:475,encrypt:472,end:[3,4,7,129,154,190,215,216,219,232,250,251,255,264,271,478,485,486,490,496,499,505,506,507],end_node_nam:129,end_posit:216,end_step:250,endlessli:507,endpoint:460,engin:[7,37,234,312,324,344],enhanc:501,enough:473,ensp:[476,492,506],ensur:[3,42,44,216,251,275,376,379,381,388,427,472,480,482,506],ensure_list:42,ensure_supported_path:376,ensure_tensor_name_has_port:148,ensure_workdir_exists_and_writ:427,ensure_working_path_exist:442,entail:482,enter:[108,109],entir:[1,3,4,9,32,272,499],entranc:[173,174,177],entri:[90,91,93,187,218,254,353,356,436,443,491],entropi:[289,290,507],enumer:[7,42,67,239,285,295,299,397,403,426,480,499,505],env:[181,429,437],env_arg:429,env_var:181,environ:[0,181,255,395,424,425,433,456,472,474,507,509],epoch:[4,9,32,190,217,219,241,250,251,255,271,285,478,480,499],eps:163,equal:[149,163,492],equal_dict:295,equat:[67,225,227],equival:[79,232],erf:92,error:[13,220,227,233,254,428,455,492,507],esri:490,estim:[2,3,4,227,230,231,235,237,238,260,507],estimate_accuracy_top1:235,estimate_lat:235,estimate_mac:235,estimator_sess:260,etc:[40,69,164,190,215,217,218,219,225,233,234,241,253,255,271,272,294,478,489,504],ethernet:498,ethnic:[0,474],euclidean:[278,347,478],eval:[1,3,4,43,190,219,223,505],eval_batch_s:[3,4],eval_dataload:[4,9,32,171,172,254,272,273,274,275,276,278,279,284,475,487,507],eval_frequ:[217,219],eval_func:[9,32,171,172,254,272,273,274,275,276,278,279,284,473,475,476,480,493,507],eval_metr:272,eval_subnet:235,evalu:[2,3,4,7,9,13,32,38,40,43,68,70,164,171,172,181,201,217,219,220,223,224,225,226,227,229,230,231,234,235,237,238,241,250,251,254,255,256,272,273,274,275,276,278,279,284,288,300,302,304,306,307,425,433,444,448,475,476,478,486,487,489,492,493,495,496,499,504,505,507],evaluate_squad:[219,226,255],evaluation_data:307,evaluation_interfac:234,evaluation_result:480,evaluation_time_cost:480,evaluationinterfac:[234,235],evaluationinterfacemobilenetv3:235,evaluationinterfaceresnet50:235,evaluaton:43,evalut:43,even:[37,85,472,499],event:[0,474,505],everi:[3,7,40,69,90,91,93,248,250,251,499,507],everyon:[0,474],everyth:249,evolutionari:2,exact:224,exact_match_scor:224,exact_sparsity_ratio:248,exactli:480,examin:499,exampl:[0,1,6,7,9,32,44,201,202,203,213,215,216,223,224,225,227,233,251,285,321,338,344,368,392,393,394,395,443,472,474,476,481,482,487,488,489,495,501,503,506,507,509],example_index:216,example_input:68,examples_api_interfac:[339,344,368],examplesapiinterfac:[338,339],exce:[216,506],except:[129,255,295,425,433,434,443,458,468,508],exclud:[7,109],excluded_op_nam:[94,95],execut:[9,32,37,40,43,68,70,73,76,152,190,217,219,230,231,237,241,250,253,254,272,288,294,296,297,298,313,324,327,333,339,341,342,398,400,402,405,406,409,411,412,414,419,422,426,429,437,438,459,472,478,480,481,486,493,497,499,508],executable_nc_wrapp:486,execute_benchmark:[299,368,425],execute_optim:[368,403,425],execute_optimization_pytorch_script:398,execute_optimization_regular:398,execute_profil:[368,416,425],execute_real_benchmark:298,execute_real_profil:414,execution_command:[313,324,327],execution_statu:[313,324,327],executionstatu:[313,324,327,333,339,341,342,426,442],executor:[255,298,425,433],exercis:3,exhaust:240,exhaustivetunestrategi:276,exist:[2,9,32,33,76,148,166,181,182,223,238,260,262,314,333,339,341,342,379,427,442,443,486,492,499,507],exit:[472,482,486,493,507],exit_polici:[331,482,504,507],exitpolici:453,expand:[289,290],expand_a:3,expand_quantized_bin:[289,290],expand_ratio:3,expanddim:83,expanddimsoptim:83,expanded_group:[359,362],expect:[0,9,32,203,298,414,474,481,484,507],expens:[85,478,507],experi:[0,9,32,474,504,507],experiment:[1,2,4,6,13,175,178,179,255,422,473,476,478,480,486,493,494,495,496,497,499,501,503,506],expir:430,expires_at:430,expiring_dict:[255,425,433],expiringdict:430,expiringdictitem:430,explain:481,explan:474,explicit:[0,148,474],explicitli:[486,487],explor:7,exporsingleimagedetectionboxestococo:223,export_to_csv:443,exportdetectionstococo:223,exportgroundtruthtococo:223,exportsingleimagedetectionboxestococo:223,exportsingleimagedetectionmaskstococo:223,exportsingleimagedetectionstococo:223,exportsingleimagegroundtruthtococo:223,expos:472,express:[0,70,220,474],extend:[3,85],extend_engin:129,extens:[2,7,68,254,382,443,481,489,493,494,500,507],extern:[7,223,262,472],extra:225,extract:[90,91,93,129,203,462,476],extract_accuraci:462,extract_perform:462,f1_score:[224,225],face:[0,6,474,500,503],fact:4,factor:[482,498,508],factori:[349,368,403,416,421,425,436],fail:[1,129],failur:[1,455],fair:[0,474],faith:[0,474],fake:[1,4],fake_qu:[112,126,140,145],fallback:[273,274,486,493,501,507],fals:[3,4,7,9,32,38,40,42,43,44,68,70,86,94,95,113,116,123,129,133,140,145,149,152,153,154,172,179,181,182,183,184,191,193,196,197,198,200,201,203,216,223,226,227,232,233,234,235,248,256,262,284,288,364,383,429,432,437,443,462,468,475,476,492,496,505,506,507],fan_out:3,faq:[0,6,474],fashion:508,fashionmnist:[203,476],fast:[6,500],fastbiascorrect:161,faster:[475,477,500,508],fastform:499,fbgemm:[3,4,471],fcn:508,featur:[3,129,168,182,201,213,216,255,473,474,475,477,478,486,493,494,500,503,506],feb:500,fed:1,feed:[3,38,68,154,200,311,478],feed_dict:[154,200],feedback:240,feeder:311,feng:491,ferplu:508,fetch:[84,223,475],fetchweightfromreshapeoptim:84,few:[6,472,500,507],field:[7,9,32,129,148,193,203,223,254,472,473,480,482,486,507],figur:[2,499],file:[2,7,9,32,68,148,154,164,165,171,172,201,202,203,206,215,216,217,218,219,223,229,230,231,232,233,235,237,238,241,249,251,253,254,255,271,272,273,274,275,276,278,279,284,294,295,300,301,302,303,304,305,306,356,393,402,406,413,436,442,443,444,456,460,464,466,468,469,472,476,480,484,486,487,491,492,494,496,499,505,506,507],file_brows:[255,368,425],file_path:443,filenam:[203,233,295,393,413,437,476],filepath:232,filesystem:[357,443,468],fill:[93,315,317,318,320,322,325,326,330,472,504,506],fill_dictionari:[315,317,318,320,322,325,326,330],filter:[42,175,177,201,202,203,204,205,206,208,212,316,356,445,476,489,499,505,507],filter_nam:356,filter_registri:[177,210,211,212],filter_requested_entri:356,filter_transform:443,filter_typ:[177,210,211,212],finbert_financial_phrasebank_stat:502,find:[2,6,9,32,67,90,91,93,154,227,238,239,262,275,295,393,459,472,499,504,505,507,509],find_best_model_arch:[2,238],find_by_nam:67,find_node_by_nam:262,find_nodes_by_initi:262,find_pareto_front:239,find_pattern_in_graph:[362,459],fine:[4,5,6,201,476,499,500],finetun:508,finish:[472,507],firewal:472,first:[2,3,4,7,44,70,116,149,163,166,201,215,217,219,223,356,472,476,486,490,493,501,504,505,507],first_conv_or_matmul_quant:507,first_n:152,fit:[1,4,6,9,32,272,275,475,476,478,480,487,492,494,496,497,499],fix:[201,250,474,476,481,507],fix_dynamic_shap:390,flag:[221,272,285,453],flake8:474,flask:[460,472],flask_socketio:460,flaubert:508,flavour:[318,337,339,426],flex:6,flexibl:[218,219,241,253,255,271,272,473,478,499],flip:[179,216,506],float16:476,float32:[7,44,204,205,216,223,473,476,506],float_model_fil:3,float_represent:454,floatfunct:3,flop:235,flow:[1,2,219,224,225,241],fmt:3,fmtstr:3,focu:507,focus:[0,7,474,486],fold:[85,86],foldbatchnormnodesoptim:85,folder:[70,154,203,208,272,294,476,505],follow:[0,2,3,4,5,7,9,10,32,44,93,109,112,115,116,117,118,129,203,219,220,223,241,471,472,473,474,476,478,481,482,485,486,490,491,492,494,495,497,499,505,507],footprint:[218,219,241,253,255,264,271,272,479,496,499,507],forc:[493,501],force_bf16:486,forfeit:472,forg:[472,484,485,490],form:[85,93,104,223,225,472,478],formal:250,format:[3,7,9,32,38,40,43,44,67,68,70,76,154,177,201,202,203,207,212,219,223,229,232,238,398,434,476,478,480,492,493,494,495,509],former:104,formerli:[6,485,509],formula:499,forward:[3,4,42,182,505],foster:[0,474],found:[6,9,32,217,219,230,231,237,238,262,275,428,443,460,493,507],four:505,fp16:493,fp32:[6,7,38,40,68,69,70,115,117,149,163,171,172,227,273,274,275,276,278,279,284,294,347,481,485,492,493,501,502,503,504,505,507,508],fp32_baselin:[40,43,68,70,288],fp32_graph:149,fp32_model:[278,295,475],fp32_op:[73,126],fp32_optimized_model:486,fp32_tensor:[278,347],fpn:1,fraction:[179,506],fragment:7,frame:193,framework:[5,6,9,32,38,40,43,68,70,173,174,177,182,183,184,187,200,203,204,205,206,207,208,210,211,212,214,216,218,219,226,227,228,235,253,254,255,256,258,259,260,262,263,272,288,297,311,321,337,339,344,346,348,368,376,379,381,382,388,395,402,406,411,415,426,432,443,444,471,472,475,476,480,481,482,483,485,486,487,489,490,492,493,499,500,506,507,508,509],framework_dataloaders_config:346,framework_dataset:203,framework_id:[315,322,323,330,346],framework_nam:[320,395,432],framework_specific_info:[7,38,40,43,68,70],framework_vers:395,free:[0,9,32,171,172,272,274,275,276,278,279,284,474,492,496,504],freez:[4,112,499],freeze_bn_stat:4,freeze_max:[113,114],freeze_min:[113,114],freezefakequantopoptim:112,freezevaluetransform:113,freezevaluewithoutcalibtransform:114,frequenc:[217,219,250,498],frequent:490,from:[0,1,2,3,4,5,6,7,9,13,32,38,40,42,67,68,70,84,90,91,93,129,141,148,154,171,172,182,183,184,190,191,197,198,202,203,204,205,206,208,217,219,220,223,224,225,229,232,233,234,235,239,241,248,249,250,251,252,254,260,264,273,274,275,276,278,279,284,288,294,295,313,316,317,318,320,323,324,325,326,327,329,331,333,334,336,339,340,341,342,343,345,356,361,379,382,391,392,393,395,417,422,437,441,443,444,445,460,462,467,468,473,474,475,476,478,479,480,483,484,486,489,492,493,494,495,496,497,499,500,501,503,504,505,506,507,509],from_except:468,front:[2,238,239],frozen:[9,32,70,79,260,272,384,387,472,494],frozen_pb:[368,375,385],frozen_pb_sess:260,frozenpbmodel:384,full:[5,6,9,32,67,181,201,202,203,219,472,476,484,485,490,491],fulli:[254,507],fulltoken:215,fully_connect:40,func:[43,182,254,443,460],functool:3,further:[0,93,474,493,494],fuse:[3,4,7,38,42,68,70,87,88,92,93,94,95,115,116,117,118,120,144,505],fuse_fx_model:68,fuse_model:[3,4],fuse_modul:3,fuse_pattern:116,fusebiasaddandaddoptim:87,fusecolumnwisemuloptim:88,fuseconvredundantdequantizetransform:115,fuseconvrequantizetransform:116,fuseconvwithmathoptim:89,fused_map:70,fused_mapping_revers:70,fused_model:68,fused_node_map:70,fusedbatchnorm:[85,104],fusedbatchnormv2:104,fusedbatchnormv3:85,fusedbatcnormv3:93,fusedop:93,fusegeluoptim:92,fuselayernormoptim:93,fusematmulredundantdequantizetransform:117,fusematmulrequantizedequantizenewapitransform:118,fusematmulrequantizedequantizetransform:118,fusematmulrequantizenewapitransform:118,fusematmulrequantizetransform:118,fusenodestartwithconcatv2:[133,143],fusenodestartwithconv2d:[134,144],fusenodestartwithdeconv2d:135,fusenodestartwithfusedbatchnormv3:[132,142],fusenodestartwithfusedinstancenorm:136,fusenodestartwithmatmul:[137,146],fusenodestartwithpool:[138,147],fusepadwithconv2doptim:94,fusepadwithfp32conv2doptim:95,fusetransposereshapeoptim:96,fusion:[3,7,40,69,93,132,133,134,135,136,137,138,141,142,143,144,146,147],futur:[6,85,171,172,183,184,274,275,276,278,279,284,485,489,493,495],fvcore:235,fwk:260,fx_model:159,fx_op_cfg:68,gain:[5,485,497,500],gamma:93,gan:500,gap:494,gather:[42,44,248,432],gaussian:[275,507],gcp:[6,500],gelu:92,gemm:499,gen:[493,500,501],gender:[0,474],gener:[6,7,38,42,67,70,113,114,171,172,177,181,191,197,199,200,204,205,206,212,214,216,219,220,228,232,241,248,251,254,272,273,274,275,276,278,279,284,295,296,297,300,301,302,303,304,305,306,334,339,345,400,405,409,411,412,417,418,419,428,437,468,472,475,478,486,492,493,496,498,499,500,501,505,506,507,509],generaltopk:227,generate_accuracy_config:300,generate_config:[296,400,405,409,412,419],generate_csv:466,generate_custom_templ:[334,339],generate_dataloader_config:301,generate_evaluation_config:[300,302,304,306],generate_graph_optimization_config:302,generate_hook:[217,219,241],generate_internal_pattern:70,generate_mixed_precision_config:304,generate_model_config:301,generate_optim:[336,339],generate_output_graph:[113,114],generate_output_graph_rang:[113,114],generate_performance_config:300,generate_prefix:[181,219],generate_prun:[219,241],generate_quantization_config:306,generate_templ:[334,339],generate_tuning_config:306,generategraphwithqdqpattern:126,geomean:[6,489],get:[1,5,7,40,43,68,69,70,90,91,93,129,148,154,159,164,166,177,181,187,212,214,216,218,219,235,240,248,250,252,253,255,260,262,263,264,275,278,289,290,295,301,307,308,309,311,313,316,317,318,320,323,324,325,326,327,328,329,333,334,336,338,339,340,341,342,343,346,347,348,356,361,373,376,377,379,381,382,386,387,388,390,393,395,398,399,413,415,420,422,424,431,432,436,443,444,455,459,460,464,466,467,468,469,472,473,475,476,489,490,505,507,509],get_all_weight_nam:263,get_architectur:181,get_available_model:395,get_benchmark_detail:[333,339],get_bios_vers:432,get_block_size_dict:248,get_boundary_nod:[310,368,425],get_bounded_thread:181,get_code_templ:469,get_command_line_arg:456,get_config:469,get_configur:[310,368,425],get_const_dim_count:[90,91],get_core_id:181,get_dataload:311,get_dataset_detail:[334,339],get_dataset_path:443,get_default_path:373,get_default_qat_qconfig:4,get_default_qconfig:3,get_diagnosi:348,get_directory_entri:356,get_distribut:432,get_domain:311,get_domain_flavour_id:318,get_domain_id:317,get_eightbit_pattern:70,get_embedding_contigu:159,get_feedback:240,get_file_extens:443,get_filter_valu:356,get_final_text:216,get_framework:[311,382],get_framework_dataloaders_config:346,get_framework_dependency_info:432,get_framework_from_path:[382,443],get_framework_id:320,get_framework_info:432,get_framework_module_nam:395,get_framework_nam:[376,379,381,388],get_framework_transforms_config:346,get_fuse_pattern:[40,69,70],get_gradi:263,get_graph_input_output:129,get_graph_optim:43,get_height_width_from_s:443,get_histogram_data:347,get_input:263,get_input_nod:[376,386,387,388],get_input_shap:390,get_installed_framework:395,get_intermediate_output:44,get_kernel_vers:432,get_longest_fus:[132,133,134,135,136,137,138,141,142,143,144,146,147],get_mac:235,get_mask:248,get_mask_singl:248,get_masks_glob:248,get_masks_loc:248,get_metr:[233,311],get_metrics_dict:443,get_mixed_precision_combin:[40,69,70],get_model:[311,382,464],get_model_by_nam:329,get_model_detail:[339,340],get_model_fwk_nam:260,get_model_graph:[376,379,387,388,459],get_model_typ:[260,377],get_model_zoo_config_path:443,get_model_zoo_model_path:443,get_module_vers:443,get_nod:361,get_node_by_nam:422,get_non_hidden_directory_entri:356,get_non_quant_modul:68,get_number_of_socket:432,get_object:311,get_observer_dict:505,get_op_detail:[336,339,347],get_op_list:[336,339,347],get_op_typ:[40,43,68,69,70],get_op_types_by_precis:[43,68,70],get_ops_recurs:68,get_optim:399,get_optimization_by_project_and_model:324,get_optimization_data:[338,339],get_optimization_detail:[339,341],get_optimization_type_by_id:325,get_optimization_type_by_nam:325,get_optimization_type_for_precis:325,get_optimization_type_id:325,get_optype_wise_:70,get_output:469,get_output_nod:[376,386,387,388],get_param:216,get_param_typ:307,get_paramet:233,get_pars:436,get_pattern:248,get_pattern_lock_mask:248,get_performance_config:444,get_performance_cores_per_inst:444,get_performance_num_of_inst:444,get_physical_id:181,get_pinned_benchmark:324,get_possible_valu:311,get_postprocess_result:216,get_precis:[40,43,69,70,311],get_precision_by_id:326,get_precision_by_nam:326,get_precision_id:326,get_predefined_config_path:[301,443],get_predefined_configur:309,get_predefined_dataset:[334,339],get_profil:[415,420],get_profiling_detail:[339,342],get_project_detail:[339,343],get_prun:250,get_quantization_approach:311,get_quantization_cap:[40,43,68,69,70],get_requested_path:356,get_result:328,get_scale_zero:262,get_schedul:252,get_setting_valu:356,get_shape_from_transform:443,get_siz:[295,443],get_sorted_graph:148,get_sparsity_ratio:[248,251],get_status_code_for_except:468,get_strategi:311,get_string_valu:467,get_subnet:235,get_supported_framework:382,get_system_info:459,get_target:275,get_target_nod:361,get_tensor_by_nam:154,get_tensor_val_from_graph_nod:154,get_tensor_valu:505,get_tensors_info:[347,376],get_thread:181,get_threads_per_cor:181,get_threshold:[289,290],get_tls_arg:460,get_torchvision_map:216,get_torchvision_model:235,get_transform:311,get_tuning_histori:295,get_url:456,get_vers:[40,43,69,70],get_weight:263,get_yaml_url:393,getagnosticmod:223,getcategori:223,getcategoryidlist:223,getsiz:3,getter:377,git:[6,472,485,490],github:[3,6,220,221,224,225,248,251,391,393,431,472,474,476,483,485,490,491,503,509],github_info:[255,425,433],githubinfo:431,give:[44,475,507],given:[2,37,42,43,44,70,90,91,93,154,215,216,223,262,272,356,362,376,379,381,382,384,386,387,389,430,443,456,475,499,506],global:[1,248,507],global_step:250,glue:[13,220,227,476,492],gluon:[9,32,42,272,494],goal:[6,164,172,217,218,219,241,253,255,271,272,284,444,497,507,509],going:506,gong:491,good:[0,474,482,507],googl:[129,493,500],googleapi:[6,486],googlenet:508,got:[3,154,273,274,484,486,505],gpu:[113,114,126,129,148,489,499,509],gracefulli:[0,474],grad:263,grad_nam:263,gradient:[250,263,489,499,508],gradient_accumulation_step:499,gradual:[252,499],grain:500,gram:221,granular:[7,40,69,489,499,507],graph:[7,9,32,43,44,68,70,73,79,80,81,82,83,84,85,86,93,96,97,98,101,103,104,105,106,107,108,109,110,113,114,123,124,127,128,129,141,148,149,152,153,154,200,218,255,258,259,260,262,263,302,304,368,376,379,387,388,390,400,401,402,407,408,422,423,425,444,447,459,476,478,480,481,487,492,494,501,505],graph_bas:[73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,97,98,100,101,103,104,105,106,107,108,109,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128],graph_def:[70,76,154,260,272,390,422,423],graph_def_sess:260,graph_info:[68,70],graph_node_name_map:[70,154],graph_optim:[219,228,255,302,368,403,407,408,425,433,448,486],graph_optimization_conf:[165,218,219,486],graph_optimization_config_gener:[303,368,425],graph_read:[363,368,425],graph_sess:260,graph_transform_bas:[149,152,153],graphanalyz:129,graphcseoptim:97,graphdef:[70,79,80,83,84,86,93,97,108,109,115,116,117,118,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,154,260,422,494],graphfoldconstantoptim:86,graphmodul:[1,68,159,501],graphoptim:[219,228,302,400,447],graphoptimizationconfiggener:302,graphread:362,graphrewriterbas:[73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128],graphrewriterhelp:129,graphtransformbas:[149,152,153],grappler:98,grappleroptim:98,greatest:507,greedi:215,grid:[2,240],gridsearch:240,groud:182,ground:[182,224,225],ground_truth:[224,225],groundtruth:223,groundtruth_box:223,groundtruth_boxes_list:223,groundtruth_class:223,groundtruth_classes_list:223,groundtruth_dict:223,groundtruth_is_crowd:223,groundtruth_mask:223,group:[3,364,489,499,505,506,507,508],group_nam:364,groupnod:364,growth:493,guarante:507,guard_requirements_instal:[376,379,381,388],gui:[455,456,460,472,489,490],guid:[6,201,476,478,481,485,490],guidelin:[6,488],guom:491,hack:220,had:[9,32],haihao:491,half:493,hand:[2,223,472],handl:[1,9,32,83,85,154,232,233,234,434,459,460,475],handle_api_cal:460,harass:[0,474],hard:475,hardwar:[7,40,69,432,478,486,489,493,498,499,500],harm:[0,474],harmon:[225,227],has:[2,7,13,38,40,43,68,70,85,86,90,91,93,97,116,129,148,181,219,220,234,248,250,273,274,472,475,481,486,489,493,501,504,509],has_positive_input:129,have:[0,3,9,13,32,97,129,154,183,184,199,215,220,223,227,234,248,250,472,474,475,480,491,492,493,496,499],head:499,header:[393,468,484],heavi:479,height:[179,216,235,248,480,499,506],hello:485,helloworld:[9,32,476,506],help:[3,6,9,32,79,229,262,311,443,475,485,494,507,509],helper:[67,68,159,215,438],here:[1,3,4,6,7,9,32,37,93,223,230,237,472,476,480,485,492,496,499,503,504,507],hidden:[7,248,443,499],hidden_dim:3,high:[4,204,205,476,485,490,500,507],higher:[1,4,9,32,171,172,239,272,273,274,275,276,278,279,284,478,492,493,499,504],higher_is_bett:[9,32,492,496],highli:500,highlight:[361,364,472],highlight_pattern:361,hist:[227,289,290],hist_edg:[289,290],histogram:[3,286,289,295,336,339,347,481,505],histogramobserv:3,histor:104,historgram:[289,290],histori:[294,332,339,341,345,398,413,462,507],history_cfg:294,history_file_modification_tim:413,history_item:462,history_snapshot:462,history_snapshot_pars:[425,458,463],historysnapshotpars:462,hoc:220,hold:[223,275,475],holder:[208,476],hook:[4,68,171,182,190,217,219,241,273,284,288,478,499,505],horizont:[216,506],host:480,hostconst:121,hot:232,hour:507,how:[3,7,9,32,216,217,219,234,235,248,472,473,474,476,478,480,481,487,499,506,507],howev:[251,499],howpublish:491,hpo:171,html:0,http:[0,3,6,203,220,221,223,224,225,248,250,251,468,472,476,485,486,490,491,503,509],hubert:508,hue:506,hug:[6,500],huge:479,huggingfac:476,huggingface_model:251,hvd:[226,227,256,480],hw_info:[255,425,433],hwinfo:432,hybirdblock:[9,32,272],hybridblock:494,hyper:[9,32],hyperparamet:507,icelak:[6,485],icon:472,idea:507,ident:[0,3,97,103,129,148,248,474,478,486],identifi:[85,90,91,93,223,260],ids:[13,181,215,220,223,492],idx1:[203,476],idx3:[203,476],idx:[3,9,32,239,476],ieee:493,ifram:460,ignor:[295,476],ignore_exit_cod:[429,437],ignore_kei:295,illeg:254,ilsvrc2012:[2,235],imag:[3,4,179,202,203,206,208,213,216,223,235,441,472,476,480,486,505,506,508],image_format:[208,476],image_height:223,image_id:[223,492],image_list:[206,476],image_nam:476,image_recognit:505,image_width:223,imageclassifi:203,imagefold:[203,473,475,476,480],imagenet:[2,4,175,179,203,206,213,235,485,505,506,508],imagenet_dataset:207,imagenet_transform:[212,214],imagenetpath:235,imagenetraw:[206,476],imagerecord:[476,480],imagerecordit:475,imageri:[0,474],img1:[206,476],img2:[206,476],img_dir:[202,476],imgx:[206,476],iml:500,impact:[273,274,278,503,507],imper:1,implement:[4,6,7,9,13,32,40,43,68,69,70,75,76,77,78,81,82,87,88,89,92,94,95,96,98,100,101,103,105,106,107,110,112,113,118,120,121,122,123,124,126,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,149,153,171,172,177,196,199,200,203,207,212,220,226,227,244,248,252,256,272,273,274,275,276,278,279,284,473,475,476,503,505,507,509],import_csv:232,importerror:484,improv:[3,5,9,32,474,486,499,501,507,508],in_arrai:232,in_graph:[148,154],in_graph_is_binari:154,in_plan:3,inappropri:[0,474],inc:[4,6,216,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,500,503],inc_bench:[6,255,425,472],inc_model:494,incept:508,inception_resnet_v2:485,inception_v1:485,inception_v2:485,inception_v3:[485,505],inception_v4:485,inceptionv3:505,inceptionv3_dump_tensor:505,inceptionv3_fp32_pretrained_model:505,incid:[0,474],includ:[0,5,6,40,177,182,201,203,207,210,211,212,214,216,218,219,223,228,248,252,253,255,272,289,290,472,474,476,481,485,490,491,492,499,501,505,507,509],include_lay:[286,289],include_metrics_per_categori:223,include_nod:42,include_tensors_kl:42,include_tensors_minmax:42,inclus:[0,474],incompat:484,incorpor:[479,507],increas:[3,477,489],increasingli:499,increment:[223,273,274,507],index:[90,91,93,177,181,199,203,207,212,219,239,264,295,460,475,492],indexdataset:199,indic:[199,201,217,219,223,239,240,472,473,484,505],indices2params_vec:240,individu:[0,2,93,231,232,237,248,474],industri:[476,492],infer:[3,4,6,7,9,32,42,44,141,148,218,219,253,255,260,272,471,475,478,481,486,493,496,499,500,505,507],info:[1,38,40,43,68,129,183,184,188,248,254,260,313,314,316,323,324,327,328,332,432,443,459,472,474,486,494],infom:[43,70,183,184],inform:[0,6,7,8,10,11,15,22,30,31,42,70,171,172,183,184,185,186,223,248,250,251,252,254,273,274,275,276,278,279,284,311,347,376,431,432,438,474,478,482,488,494,499,501,503,505,508],infrastructur:477,ingest:223,inherit:[2,7,40,43,68,69,70,182,198,216,250,252,475],init:[3,182,476,492,496],init_by_cfg:[230,237],init_cfg:[231,237],init_feature_match:182,init_for_search:[231,237],init_loss_func:182,init_search_cfg:238,init_train_cfg:[217,219],initi:[2,3,9,32,67,154,171,172,182,190,198,217,219,230,231,237,238,249,250,254,262,273,274,275,276,278,279,284,312,334,335,344,393,422,424,432,444,475,476,486,492,493,499,507],initial_valu:430,initialize_associ:[334,335],initialize_databas:[312,344],initialize_graph:422,initialize_precision_optimization_types_associ:[334,335],injectdummybiasaddoptim:82,inner:2,innov:[6,500],inp:3,inplac:[3,4],input:[2,7,9,32,38,42,44,67,68,70,76,79,80,81,82,83,84,85,86,87,93,94,95,96,97,101,103,104,105,106,107,108,110,113,114,123,124,126,127,128,129,148,154,159,171,172,182,184,185,190,201,202,203,205,213,215,216,217,219,223,228,235,241,254,258,259,260,262,263,272,273,274,275,276,278,279,284,285,295,297,307,329,333,334,336,339,340,341,342,343,376,386,387,388,390,402,406,411,417,444,472,475,476,478,480,486,487,492,493,494,499,505,506],input_arg:[190,219],input_arrai:232,input_channel:3,input_data:307,input_desc:42,input_fil:216,input_fn:260,input_graph:[43,140,141,145,148,149,297,402,406,411,418],input_graph_def:[79,80,83,84,86,93,97,108,109,129,148],input_id:[201,216,478,499],input_kwarg:[190,219],input_mask:[216,478],input_model:[241,494,505],input_model_tensor:347,input_nam:263,input_nod:323,input_node_nam:[107,140,145,148,154],input_output_nam:98,input_pb:[152,153],input_s:235,input_shap:[205,476],input_tensor:[260,263],input_tensor_nam:260,inputbatch:216,inputfeatur:[201,216],inputoutputinti:67,insecur:472,insert:[1,3,126,129,141,152,489,501,505],insert_data:441,insertlog:152,insertprintminmaxnod:100,insid:[223,478,499],inspect:[38,40,43,68,70,472,503,505],inspect_activ:70,inspect_tensor:[38,40,43,68,70],inspect_typ:[38,40,43,68,70,347],inspect_weight_and_bia:70,instal:[376,379,381,388,395,481,484,498,509],instanc:[0,1,2,7,171,172,181,201,219,224,225,227,230,237,238,272,273,274,275,276,278,279,284,285,313,472,474,485,502,507,508],instances_val2017:[202,476],instanti:[9,32,497],instead:[3,7,165,166,200,295],institut:203,instruct:[5,104,472,478,481,485,490,493,500],instrument:505,insult:[0,474],int32:[38,40,43,68,70,476],int64:476,int8:[1,4,7,38,40,43,67,68,69,70,149,163,213,278,289,290,347,471,472,476,479,481,485,501,502,503,504,505,506,507],int_label:492,integ:[7,217,219,223,227,239,248,250,252,289,290,481,507],integr:[7,154,182,472],intel:[0,2,5,7,9,32,68,187,219,226,227,248,251,256,424,474,477,478,479,481,483,485,486,490,491,493,494,496,497,498,499,500,501,502,503,505,507],intel_ssdsc2kw01:498,intelcaff:500,intelon:[6,500],inteltensorflow:[206,208],intend:[9,32,474],inter:[177,199,203,207,212],inter_area:179,inter_pol:179,interact:504,interest:[0,6,474,505],interfac:[2,6,9,32,40,43,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,98,100,101,103,104,105,106,107,110,112,113,114,118,120,121,122,123,124,126,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,149,153,173,174,177,218,219,234,235,241,253,254,255,264,271,272,288,289,290,296,333,334,335,336,337,338,339,340,341,342,343,345,409,412,419,431,481,489,503,509],interleav:[202,476],intermedi:[44,67,182,489,499],intermediatelayersknowledgedistillationloss:182,intern:[70,129,428,475],internalexcept:428,internet:[203,472,476],interpol:[216,492,506],intersect:[7,227,492],intrins:4,introduc:[7,97,481,499,503],inturn:492,invert:3,inverted_residual_set:3,invertedresidu:3,investig:[0,474],invok:[9,32,223],involv:3,iou:[223,227],iou_thr:[223,227,492],iou_typ:223,ipex:[5,68,485,489,508],irregular:499,is_ckpt_format:154,is_contigu:244,is_dataset_fil:443,is_dataset_or_directory_entri:356,is_development_env:443,is_directori:356,is_directory_entri:356,is_dummi:445,is_expir:430,is_fused_child:68,is_fused_modul:68,is_fused_op:68,is_glob:248,is_hidden:443,is_imposs:216,is_last_fused_child:68,is_model_or_directory_entri:356,is_model_path:382,is_model_quant:42,is_multi_command:429,is_port_taken:456,is_qat:68,is_quant:505,is_saved_model_format:154,is_turbo_boost_en:432,isinst:3,isiter:42,isn:[90,91,93,129],issu:[0,472,474,490,505],item:[67,166,215,249,345,430,462,480,504],item_list:67,iter:[1,2,4,7,38,40,42,43,44,68,70,154,171,172,177,183,184,199,203,204,207,212,238,250,252,272,273,274,275,276,278,279,284,288,289,290,313,444,475,478,499,505,507],iter_bar:478,iter_op:154,iterabledataset:[175,177,199,202,203,205,207,212],iterablesampl:199,iteration_list:[38,40,43,68,70],iterativeschedul:252,iterator_sess_run:154,itex_mod:[113,126,140,145],itex_qdq_mod:[94,95],its:[0,2,70,120,129,203,215,216,221,222,250,254,275,472,474,475,478,491,492,493,498,499,504,506,507],jan:500,jiong:491,jit:[3,505],jitter:506,job:369,jobs_control_queu:[368,369,425],jobs_manag:[255,368,425],jobsmanag:370,john:166,join:220,jonathanhuang:223,jpeg:506,jpg:[202,206,208,476],json:[201,202,216,305,417,419,427,434,443,476,494,506],json_path:417,json_seri:[255,301,352,353,358,360,361,364,374,383,409,412,425,432,433,441,444,445,446,447,449,450,451,452,453],jsonseri:[301,352,353,358,360,361,364,374,383,409,412,432,434,441,444,445,446,447,449,450,451,452,453],judg:250,jun:500,jupyt:6,just:[2,3,4,37,183,184,185,186,188,191,197,216,485,486,497,506,507],kaiming_normal_:3,keep:[1,7,248,249,503],keep_pre_mask:248,keepdim:3,kei:[43,68,70,129,148,154,166,223,239,249,251,260,286,288,289,295,436,451,472,505],kendal:233,kept:248,kera:[9,32,93,187,260,368,375,385,480,494],keras_sess:260,kerasmodel:386,kernel:[7,432,498,499,507],kernel_s:3,keyerror:275,keynot:[6,500],keyword:68,kit:481,kl_diverg:289,know:[3,129,183,184,430,480,503],knowledg:[6,182,217,219,479,489,494,509],knowledgedistillationframework:182,knowledgedistillationloss:182,knowledgedistillationlosscriterion:451,known:[6,183,184,275,499,505,507,509],kriz:[203,476],kullback:478,kullbackleiblerdiverg:182,kwarg:[2,67,68,132,133,134,135,136,137,138,141,142,143,144,146,147,184,185,188,216,218,219,229,251,253,254,258,259,260,262,263,272,285,294,295,300,302,304,305,306,315,317,318,320,322,325,326,330],l954:220,l983:220,lab:6,label:[1,9,13,32,38,70,171,172,179,182,184,185,201,203,204,205,206,213,216,220,222,226,227,232,233,256,272,273,274,275,276,278,279,284,364,476,492,499,506],label_fil:[201,216,476,506],label_list:227,label_map:492,label_nam:475,label_shap:[205,476],label_shift:[213,506],label_width:475,labelbal:445,labelbalancecocorawfilt:209,labelbalancecocorecordfilt:209,labelshift:[213,506],lack:475,lake:[6,485,486,493,500],lakecoop:485,lakeskylakeic:485,land:[6,500],languag:[0,13,220,474,500],larg:[223,475,478,508],larger:70,lasso:[489,499],lassounbalanc:508,last:[3,68,70,116,171,199,248,273,274,275,276,278,279,284,413,472,493,507],last_batch:[183,184,191,193,196,197,198,200],last_channel:3,last_nod:44,last_tune_accuraci:332,last_tune_perform:332,latenc:[2,5,231,232,233,235,237,441,485,486,504,507],latency_predictor:235,later:[295,486,505],latest:[427,485,490,500,503],latter:104,launch:[475,493],launcher:[2,9,32,478,499],layer:[3,7,38,40,43,68,69,70,93,182,248,249,251,286,288,289,295,455,475,479,489,499,503,507],layer_map:182,layer_nam:248,layer_tensor:[286,289],layerhistogramcollector:[286,289],layernorm:93,layout:76,lazi:295,lazyimport:295,lead:[443,478,493,499],leadership:[0,474],leaf:505,leakyrelu:77,learn:[5,6,7,9,32,471,475,476,481,485,487,489,490,493,499,500,505,507,509],learning_r:[168,255],least:[227,251,499,507],leav:[9,32],left:[179,216,472,506],legal:[6,488],leibler:478,len:[3,9,32,216,275,476,480,499,506],length:[13,199,201,216,220,223,476,492,506],less:[77,199,478,499],level:[0,3,40,43,435,456,474,507],leverag:[2,98,478,486,497],libgl:484,librari:[6,9,32,219,471,481,485,490,509],lie:[2,238],life:475,light:[472,479],like:[1,2,7,38,40,43,68,70,97,120,122,129,148,154,171,172,191,197,203,218,219,227,233,250,253,254,255,260,272,273,274,275,276,278,279,284,285,472,474,478,481,482,486,489,495,497,499,507],limit:[4,275,474,478,481,499,505],line:[9,32,456,472,480,489,505],linear:[3,67,248,478],linearli:67,link:[472,476,508],linkedin:[6,500],list:[3,6,7,13,38,40,42,43,44,67,68,70,76,79,129,148,154,171,172,179,181,182,199,201,215,216,219,220,221,223,224,225,227,232,234,235,239,241,248,251,260,263,264,272,273,274,275,276,278,279,284,285,286,289,290,307,309,311,313,315,316,317,318,320,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,339,340,341,342,343,345,346,347,356,359,361,362,364,376,382,383,386,387,388,390,395,398,402,406,422,429,434,436,437,438,443,444,445,446,447,449,451,455,462,471,485,496,501,505,507],list_benchmark:[333,339],list_by_domain:330,list_by_framework:[315,322,330],list_dataload:[337,339],list_dataloaders_by_framework:[337,339],list_dataset:[334,339],list_domain:[337,339],list_domain_flavour:[337,339],list_for_precis:325,list_metr:[337,339],list_metrics_by_framework:[337,339],list_model:[339,340,368,394,425],list_of_dict:[334,335],list_optim:[339,341],list_optimization_typ:[337,339],list_optimization_types_for_precis:[337,339],list_precis:[337,339],list_profil:[339,342],list_project:[329,339,343],list_transform:[337,339],list_transforms_by_domain:[337,339],list_transforms_by_framework:[337,339],listen:472,littl:5,load:[2,3,38,215,216,223,233,238,260,272,294,295,417,443,444,475],load_data_from_pkl:295,load_dataloader_config:443,load_help_nc_param:443,load_metrics_config:443,load_model:3,load_model_config:443,load_model_wise_param:443,load_precisions_config:443,load_profiling_detail:417,load_quantization_config:347,load_saved_model:260,load_search_result:[2,238],load_state_dict:3,load_transforms_config:443,load_transforms_filter_config:443,load_vocab:215,loadannot:223,loader:[40,42,171,172,254,272,273,274,275,276,278,279,284],local:[70,248,295,309,339,344,357,377,472,504],local_config_fil:[40,43,68,70],local_step:[250,251],locat:[9,32,216,473,480,503,506,507],lock:[248,489,497,499],lockbalanc:508,log:[1,152,241,298,313,324,327,333,339,341,342,398,435,436,437,438,442,456,472,504,505,507],log_interv:480,log_level:[312,344,435],log_nam:429,logdir_spec:505,logger:[219,246,255,286,289,425,429,433],logic:[171,172,273,284,455,507],login:504,logit:[182,478],loglevel:507,logo:[491,498],longer:[141,201,216,476,506],longest:[215,216,506],longform:508,look:[7,492,496],loop:[2,4,264,285,504,507],loss:[3,4,6,168,182,190,218,219,227,241,253,255,271,272,285,478,479,480,482,485,492,493,499,507],loss_cal:182,loss_cal_sloss:182,loss_sum:478,loss_typ:182,loss_weight:182,lot:[1,482],low:[4,5,6,7,9,32,40,69,70,171,172,204,205,218,219,228,253,255,272,273,274,275,276,278,279,284,473,476,480,481,493,500,507,509],lower:[3,5,215,216,225,443,471,479,499,500,506],lowercas:[201,476],lowest:499,lpot:[473,486,500,503],lvwerra:508,m50cyp2sbstd:498,mac:[2,231,233,235,237],machin:[13,220,309,472,485,490,500,505],macs_predictor:235,made:[4,7,93,233,235,503],mae:[227,492],magnitud:[9,32,227,489,499,508],magnitudepost:508,magnitudeprun:250,magnitudequant:508,mai:[0,9,32,129,148,154,264,474,475,484,491,493,498,500],mail:[0,474],main:[3,6,171,187,251,273,284,424,460,480],mainli:252,mainstream:6,maintain:[0,6,227,474,494,499,503],mainten:7,major:[9,32,487],make:[0,1,3,7,148,149,163,199,248,250,252,312,344,376,472,474,475,492,501,507],make_modul:42,make_nc_model:42,make_nod:67,make_symbol_block:42,makeiter:154,male:166,manag:[6,232,233,234,235,312,344,346,369,427,442],manage_workspac:[255,368,425],mandatori:[171,172,272,274,275,276,278,279,284,482],mani:[234,235,264,475,485,490,507],manner:[3,478,494],manual:[203,476],manufactur:498,map:[42,44,70,141,216,218,219,222,223,224,225,227,232,241,248,250,253,255,271,272,397,473,476,480,492,499],map_kei:227,map_nam:397,map_point:[223,227,492],mape:233,mapper:[232,333,396,397],mappingdirect:397,mar:500,mark:498,marketplac:[6,500],mask:[201,223,245,248,250,252,263,499,508],mask_rcnn_inception_v2:485,mask_shap:[244,245],mask_weight:250,maskpostprocessor:1,maskrcnn:1,maskrcnnfpnfeatureextractor:1,master:[3,220,221,224,225,248,251],match:[4,129,215,223,224,478,482],match_node_nam:[137,144],matcher:182,materi:481,math:89,matmul:[7,44,69,75,88,108,109,118,137,248],matrix:245,matter:[199,501],max:[3,43,44,67,70,149,163,216,224,225,275,453,471,472,506,507],max_answer_length:[216,506],max_dim:[216,506],max_grad_norm:499,max_input_chars_per_word:215,max_iter:233,max_min_data:[113,114],max_name_valu:[113,114],max_num_class:223,max_ord:221,max_output:1,max_ports_tri:456,max_query_length:[216,506],max_seq_length:[201,216,476,506],max_sparsity_ratio_per_lay:[248,250],max_trail:507,max_trial:[453,482,507],max_val:[3,289,290],maxim:[499,507],maximum:[44,67,77,201,216,221,248,250,275,476,506],maxk:3,maxpool:7,mbart:508,mean:[3,4,7,9,32,85,93,179,216,223,225,227,233,235,248,264,473,475,480,482,492,499,506,507],mean_valu:[179,506],meaning:[443,497],measur:[2,7,9,32,38,40,43,68,70,154,181,234,235,264,462,473,478,486,492,495,502,505,507],measure_lat:235,measure_step:235,mechan:504,media:[0,474],medium:223,meet:[1,6,254,486,496,500,505,507],member:[0,7,219,228,474],memori:[5,9,32,38,68,97,218,219,241,253,255,271,272,475,479,481,493,496,499,507],merg:[505,507],mergeduplicatedqdqoptim:127,messag:[152,443,455,460,507],messagequeu:455,met:[2,172,284,493,505,507],meta_graph:[368,375,385],metagraph:387,metagraphdef:260,metagraphmodel:387,metainfochangingmemopoptim:120,metaop:120,method:[1,2,3,4,5,6,68,129,148,149,159,177,183,184,199,200,203,207,209,210,211,212,214,216,226,227,232,235,238,239,240,244,256,258,259,260,262,263,429,434,438,455,473,475,478,479,481,482,492,497,499,501,506,507],metric:[2,6,7,9,11,13,32,38,40,43,68,70,171,172,184,217,218,219,230,231,233,235,237,238,239,240,241,253,254,255,271,272,273,274,275,276,278,279,284,288,307,311,316,321,334,337,339,344,368,425,433,440,443,444,446,462,472,473,475,480,481,486,493,504,505,507,508],metric_cl:[184,185,226,227,256,473],metric_data:307,metric_fn:[224,225],metric_max_over_ground_truth:[224,225],metric_registri:[226,227,256],metric_typ:[226,227,256],metrics_convers:238,metrics_queri:322,micro:436,microcod:498,microsecond:436,microsoft:7,might:[1,472,474,507],migrat:[37,427],migrate_databas:427,mime:460,mimetyp:468,mimic:4,min:[3,44,70,149,163,471,472,506],min_dim:[216,506],min_val:[3,289,290],min_valu:3,mini:[9,32,38,40,70,199,508],minilm_l6_h384_uncased_sst2_stat:502,minim:[6,149,163,275,478,492,499,507],minimal_accuraci:332,minimum:[44,67,507],minmax:[7,42,507],minmaxobserv:3,miou:227,misc:491,miss:307,mit:491,mix:[6,7,70,273,404,405,406,449,481,489],mixed_precis:[219,255,304,368,403,425,433,448],mixed_precision_config_gener:[303,368,425],mixedprecis:[22,219,228,304,405,449,493],mixedprecision_conf:165,mixedprecisionconfiggener:304,mkl:509,mla:[7,471],mldash:223,mlp:[0,474],mlpc:[0,474],mlperf:500,mnist:[203,476,480],mnli:[201,476,492,508],mobil:[478,508],mobilebert:[201,476,478,508],mobilenet:[3,504,508],mobilenet_v1_1:6,mobilenetv1:485,mobilenetv2:508,mobilenetv3:[2,234,235],mode:[3,5,7,37,38,40,43,67,68,70,129,181,219,223,260,295,313,436,472,473,486,489,501],model:[1,2,4,7,9,11,32,38,40,42,43,44,68,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,129,148,154,159,164,168,171,172,181,182,184,185,200,201,203,216,217,218,219,227,228,229,230,231,233,235,237,238,240,241,248,249,250,251,252,253,254,255,272,273,274,275,276,278,279,284,285,288,294,295,297,298,299,301,311,313,321,324,327,329,336,337,338,339,340,341,343,344,345,347,356,361,362,363,366,367,368,392,393,395,398,401,402,403,404,406,407,408,410,411,416,418,421,422,425,426,433,443,448,458,459,463,473,475,476,478,479,480,481,482,486,487,489,491,492,493,496,497,498,499,500,503,504,505,506,509],model_api_interfac:[339,344,368],model_build:[2,230,237,238],model_convers:[219,255,481],model_dict:443,model_fil:3,model_id:[313,323,324,327],model_info:393,model_kwarg:68,model_list:395,model_nam:[235,323,329,443],model_name_or_path:[201,476],model_obj:[218,219,228],model_path:[154,362,377,382,443],model_src_dir:393,model_typ:[201,347,377,476],model_type_gett:[368,375,425],model_wis:507,model_wise_param:[336,339],model_wrapp:44,model_zoo:[255,368,425],modeladdparamsinterfac:[339,340,345],modelapiinterfac:[339,340],modelconvers:[22,219,229,495],modelproto:[43,494],modelrepositori:382,models:[264,496,507],modelservic:464,modelwis:[40,273,274],modif:[3,7,413,475],modifi:[1,9,32,79,85,93,104,203,251,423,472,473,480],modul:[1,3,4,236,237,246,247,433,440,448,472,473,478,489,492,494,501,505],module_nam:[250,252,295,443],momentum:[3,250,489,499],momentumbalanc:508,momentumunbalanc:508,more:[2,3,4,6,7,85,148,154,171,216,223,248,273,284,472,476,478,480,485,486,489,490,492,493,496,497,499,501,507,508,509],moreoev:250,mose:220,mosesdecod:220,most:[9,32,227,472,493,499,507],motiv:474,move:[1,70,503],movesqueezeafterreluoptim:101,mrpc:[201,227,476,485,492,508],mscoco:223,mse:[227,347,353,472,492,503],mse_impact_lst:278,mse_metric_gap:[278,347],msetunestrategi:278,mteval:220,much:[216,217,219,478,482,486,499,506],mul:[77,88,89,92,93,137],mul_:3,multi:[2,97,181,219,223,234,307,475,476,489,496,499],multi_metr:492,multi_object:496,multiclass:492,multilabel:492,multiobject:453,multipl:[3,9,32,85,187,204,205,206,208,214,216,228,250,273,274,429,476,497,504,507,509],multipli:[3,482],must:[1,7,9,32,216,223,227,485,486,490,506,507],mutation_eta:234,mutation_prob:234,mxnet:[6,7,9,32,42,177,196,200,203,206,207,210,211,212,214,216,218,219,226,227,253,255,256,260,272,483,485,489,493,494,507,509],mxnet_dataload:195,mxnetadaptor:40,mxnetcifar100:203,mxnetcifar10:203,mxnetcropresizetransform:216,mxnetcroptoboundingbox:216,mxnetdataload:196,mxnetfashionmnist:203,mxnetimagefold:203,mxnetimagenetraw:206,mxnetmetr:227,mxnetmnist:203,mxnetmodel:[40,260],mxnetnormalizetransform:216,mxnetqueri:40,mxnettransform:216,mxnettranspos:216,mymodel:3,n_best_siz:[216,506],n_gpu:499,n_iter:275,n_metric:239,n_pareto_point:239,n_point:239,n_total:499,n_warmup:275,naiv:44,name:[1,3,6,7,38,43,44,67,68,70,76,85,86,90,91,93,129,141,148,154,160,162,166,177,181,182,184,185,187,188,201,202,203,206,207,210,211,212,214,216,222,223,226,227,232,233,235,241,244,248,250,252,254,256,260,263,286,289,295,313,317,318,320,323,324,325,326,327,329,347,356,358,376,379,381,382,388,395,396,397,398,422,432,443,445,467,472,473,476,480,482,485,486,491,492,494,498,503,504,505,507,508],named_children:505,named_paramet:480,names_mapp:[255,368,425],namesmapp:397,nan:78,nas:[2,219,255],nas_method:239,nas_registri:[2,239],nas_util:[219,237,255],nasbas:[2,230,231,237,238],nasconfig:[2,165,219,231,237,238],nation:[0,203,474],nativ:509,natur:[13,220],navig:472,nbest_predict:[216,506],nc_inceptionv3:505,nc_mode:443,nc_model:[40,42,241],nc_resnet50_v1:480,nchw:76,ncmodel:42,ncprocess:[429,438],ndarrai:[90,91,93,129,216,232,234,263,275,286,289,484,506],nearest:[216,506],necessari:[0,2,9,32,67,217,219,474,494,504,507],need:[1,4,7,9,32,37,38,40,42,43,68,70,75,76,77,78,81,82,85,87,88,89,92,94,95,96,98,100,101,103,104,105,106,107,110,112,113,118,120,121,122,123,124,126,127,128,129,140,141,145,148,171,172,177,183,184,185,186,191,197,199,200,203,209,210,211,212,216,226,227,232,254,256,262,272,273,274,275,276,278,279,284,294,295,462,472,473,475,476,478,480,489,493,496,499,501,503,506,507],neg:129,nepoch:[4,478],nest:166,net:[1,3],network:[2,3,6,232,235,250,472,478,479,500,509],neural:[1,7,9,32,42,68,181,187,190,213,214,216,219,226,227,229,241,248,251,253,254,256,260,424,431,443,473,474,475,476,477,478,480,481,483,484,485,486,487,490,491,492,493,494,496,497,500,503,505,506,507],neural_coder_optim:[368,403,425],neural_coder_perform:298,neural_coder_tim:298,neural_compressor:[1,2,4,6,9,13,32,473,475,476,478,480,486,487,492,493,494,495,496,497,499,501,503,506,507],neval_batch:[3,4],never:507,nevertheless:[3,4],new_api:[94,95,100,116,123,140,145,149],new_const_nod:129,new_grad:263,new_nod:129,new_nodes_list:262,new_quantized_nam:67,new_tensor:263,new_v:3,newapi:118,newer:85,newlin:225,newmetr:492,next:[2,171,238,252,273,274,275,276,278,279,284,472,493,507],next_annotation_id:223,next_nod:44,next_tune_cfg:[171,273,274,275,276,278,279,284,507],nfl:225,ngram:[13,220,492],nhwc:76,nic:498,nightli:[6,472,490],nll_loss:480,nlp:[251,482,499],no_grad:3,node0_nam:[38,68,70],node1:480,node1_nam:[38,68,70],node2:480,node:[7,42,44,67,70,73,76,77,78,79,85,86,87,90,91,93,97,109,122,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,154,260,262,345,358,359,360,361,362,363,368,376,386,387,388,422,423,425,472,480,505],node_a:129,node_b:129,node_def:[90,91,93,129],node_from_map:[90,91,93],node_list:70,node_map:[90,91,93],node_nam:[86,90,91,93,129,148,154,260,262,328,422],node_name_detail:129,node_name_from_input:[90,91,93,129,148],node_name_list:152,nodedef:[85,90,91,93,129,148,422],nodes_to_convert:79,non:[1,3,187,249,498,499,507],non_quant_modul:68,non_traceable_module_class:1,nondigit_punct_r:220,none:[2,3,5,7,9,13,32,38,40,42,43,44,67,68,70,86,113,129,148,154,159,165,166,168,171,172,175,181,182,183,184,190,191,193,196,197,198,199,200,201,202,203,204,205,206,208,213,216,217,218,219,220,223,226,227,228,229,230,232,234,235,237,238,241,245,249,253,254,255,256,260,263,264,272,273,274,275,276,278,279,284,285,286,288,289,294,295,296,297,298,300,301,302,304,305,306,307,308,309,312,314,315,316,317,318,320,322,324,325,326,328,330,333,334,335,338,339,342,344,345,346,361,376,379,381,388,393,395,400,402,405,406,409,411,412,413,414,418,419,422,424,427,429,430,432,435,437,438,441,442,443,444,445,446,447,449,451,452,453,455,456,460,468,476,492,505,506,507],nonzero:499,norm:4,normal:[85,93,216,225,443,473,475,496,506],normal_:3,normalize_answ:225,normalize_domain:443,normalize_framework:443,normalize_str:443,normalize_string_list:307,normalizetftransform:216,normalizetransform:216,notabl:3,notat:[165,166],note:[2,3,6,9,32,38,40,43,68,70,77,223,251,275,329,339,343,472,473,480,481,482,485,486,499,502,505,507,508,509],notfoundexcept:[428,456,457],noth:[223,437],notic:[149,163,181,219,491],notimplementederror:[182,226,227,256],nov:[6,500],novel:479,now:[1,2,216,441,476,480,486,495,506,507],npy:[202,476],npy_dir:[202,476],npz:[203,476],nsdf3:[203,476],nsga2:[2,234],num:[275,295,492],num_bin:[42,286,289,290],num_calibration_batch:3,num_class:[3,227],num_cor:[175,201,202,476],num_correct:227,num_detect:[223,227,492],num_ev:[2,234],num_eval_batch:[3,4],num_gt_box:223,num_of_inst:[444,473,475,486],num_of_process:480,num_quantized_bin:[289,290],num_replica:480,num_sampl:227,num_thread:327,num_train_batch:4,num_train_epoch:499,num_warmup:422,num_work:[183,184,191,193,196,197,198,200],numactl:[181,219],number:[3,4,68,90,91,202,213,216,224,225,227,234,238,248,275,289,290,379,432,441,444,472,476,480,482,492,499,504,506,507],number_bin:[289,290],number_of_inst:313,numer:[3,4,5,227,471,485,493,500],numpi:[38,40,43,68,70,90,91,93,129,154,216,223,227,232,234,239,289,290,484,506],nvidia:[6,489,499,508],nxm:[245,248],obejct:249,obj:[42,164,200,217,218,219,229,230,231,237,238,241,249,253,254,255,271,272,288,295],object:[1,2,3,6,9,13,32,38,40,42,43,67,68,70,79,80,81,82,83,84,85,86,96,97,101,103,104,105,106,107,108,109,110,113,114,115,116,117,118,123,124,127,128,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,159,160,162,164,165,166,171,172,173,174,177,181,182,183,184,185,186,187,188,190,191,197,199,201,202,203,207,210,211,212,214,215,216,217,218,219,220,223,226,227,228,231,232,234,237,238,240,241,242,243,244,248,249,250,251,252,253,254,255,256,260,263,271,272,273,274,275,276,278,279,284,286,288,289,290,294,295,311,325,326,329,331,372,434,437,443,455,456,460,472,473,475,476,481,484,492,493,494,497,506,507],object_detect:223,objective_registri:264,objext:68,oblig:[0,474],observ:[3,482,504,505,507],observer_dict:505,obtain:[248,249,252,504,507],occur:[13,220],oct:[6,500],ofa:[234,235],ofa_mbv3_d234_e346_k357_w1:2,ofarunn:235,off:[3,90,91,93,501],offens:[0,474],offer:[472,476],offici:[0,154,220,224,225,472,474,485,492,509],offlin:[0,37,295,474],offset_height:[216,506],offset_width:[216,506],often:[475,478,497,499],old:[10,295,503],old_constant_node_nam:129,old_end_node_nam:129,old_hist:295,old_input_nam:129,old_input_node_nam:129,old_node_nam:129,old_output_nam:129,old_output_node_nam:129,on_after_compute_loss:[190,219,241,285,478],on_after_ev:[250,251],on_after_optimizer_step:[250,251],on_batch_begin:241,on_batch_end:241,on_before_ev:[250,251],on_before_optimizer_step:[190,219,250,251,285,499],on_epoch_begin:[9,32,190,219,241,250,251,255,271,285,288,499],on_epoch_end:[9,32,190,219,241,250,251,255,271,285,288,478,499],on_post_forward:[217,219],on_step_begin:[9,32,190,219,241,250,251,255,271,288,499],on_step_end:[9,32,190,219,241,250,251,255,271,285,288,499],on_train_begin:[190,219,241,250,251,285,478],on_train_end:[190,219,241,250,251,285],onc:[9,32,85,129,154,187,252,472,475,500],one:[2,6,7,9,13,32,129,141,173,174,177,216,219,220,223,226,227,229,232,248,251,252,256,285,472,475,478,479,480,485,486,489,490,492,493,496,497,499,503,506,507],oneapi:[6,481,485,490,500],onednn:[6,471,509],onehot:232,onehot_gener:232,ones:223,ones_:3,oneshotschedul:252,onli:[3,7,9,32,40,43,44,68,70,76,79,80,81,82,83,84,85,86,93,96,97,101,103,104,105,106,107,110,113,114,123,124,127,128,149,163,181,183,184,187,201,219,229,248,250,260,443,453,455,456,473,475,480,486,490,493,505,507],onlin:[0,6,37,474,504],onnx:[5,7,9,32,43,44,67,258,259,263,285,298,398,481,483,485,489,493,494,500,509],onnx_diagnosi:[349,368,425],onnx_ml_pb2:494,onnxbilinearimagenettransform:179,onnxdataload:43,onnxmetr:43,onnxmodel:262,onnxquant:7,onnxresizecropimagenettransform:179,onnxrt:[177,210,211,212,214,216,226,227,256,350,351,366,368,375,425],onnxrt_diagnosi:[349,350,368],onnxrt_integerop:[216,482],onnxrt_integeropsadaptor:43,onnxrt_qdqadaptor:43,onnxrt_qlinearop:216,onnxrt_qlinearopsadaptor:43,onnxrt_qoperatoradaptor:43,onnxrt_read:[363,365,368],onnxrtadaptor:43,onnxrtaug:44,onnxrtbertdataload:197,onnxrtbertdataset:201,onnxrtcroptoboundingbox:216,onnxrtdataload:197,onnxrtdiagnosi:351,onnxrtglu:227,onnxrtimagenetdataset:175,onnxrtitmetr:227,onnxrtittransform:216,onnxrtmodel:379,onnxrtqlmetr:227,onnxrtqltransform:216,onnxrtqueri:43,onnxrtread:366,onnxruntim:[6,7,43,219,228,351,355,482,489],onnxtransform:43,op1:7,op2:7,op3:7,op_activ:352,op_defin:328,op_detail:[347,349,368,425],op_entri:[349,368,425],op_list:[38,40,43,68,70,278,505],op_nam:[68,278,347,352,353,361,362,505],op_registri:61,op_run:328,op_to_stor:486,op_typ:[61,278],op_wis:[505,507],op_wise_config:[126,140,145],op_wise_param:[336,339],op_wise_sequ:[140,145],opactiv:352,opdetail:[347,352],open:[0,6,9,32,219,472,474,484,509],opencv:484,opentri:353,oper:[1,3,67,129,154,179,248,455,459,472,496,506,507],oppattern:352,opportun:85,oppos:482,ops:[7,68,83,85,89,93,97,104,108,109,126,152,273,274,278,289,290,493,501],opset_vers:[258,259,263,285],opt:509,opt_cfg:98,opt_model:[254,497],optim:[2,3,4,6,7,9,11,32,43,68,76,80,83,84,86,97,98,108,109,115,116,117,118,148,168,184,217,218,219,233,240,250,251,253,255,272,285,286,289,298,302,304,321,325,326,331,333,334,335,336,337,338,339,341,342,344,345,347,348,349,350,351,354,355,368,425,426,436,441,444,447,451,458,463,478,480,481,485,489,490,491,494,498,499,500,501,504,505,507,509],optimization_api_interfac:[339,344,368],optimization_data:[339,341,399,400,405,409,412],optimization_detail:398,optimization_id:[324,325,339,341,398],optimization_nam:[324,325,338,339],optimization_typ:[321,324,344,368],optimization_type_id:324,optimization_workdir:413,optimizationaddparamsinterfac:[338,339,341,345],optimizationapiinterfac:[339,341],optimizationeditparamsinterfac:[339,341,345],optimizationfactori:399,optimizationinterfac:409,optimizationpars:436,optimizationservic:465,optimizationtyp:[324,325,426],optimize_graph:[402,406],optimize_graph_config:[402,406],optimize_model:[368,401,403,404,407],optimize_pt_script:408,optimized_model:[324,486],optimized_model_id:324,optimized_model_tensor:347,optimizeqdqgraph:140,optimizer_cl:187,optimizer_registri:187,optimizer_tupl:68,optimizer_typ:187,option:[2,9,32,38,40,43,68,70,129,148,168,171,172,182,201,216,219,223,229,234,235,248,254,255,272,273,274,275,276,278,279,284,285,295,301,312,313,314,316,323,324,327,329,331,332,334,339,344,347,376,383,386,387,388,393,402,406,412,413,415,420,429,430,434,437,443,444,449,451,453,462,468,473,475,476,482,486,493,506,507],optuna:234,optyp:42,optypewis:7,opweight:352,opwis:[7,40,278],orchestr:[6,285,489],order:[1,9,13,32,220,221,254,273,274,278,445,492,499,505,507],ordereddict:[334,339,444],ordinari:504,org:[0,6,223,250,472,490],organ:[69,472],ori_shap:245,orient:[0,474],orig_answer_text:216,orig_text:216,origin:[3,7,67,159,181,216,219,232,248,249,250,251,298,476,486,499,506],orm:[33,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,333,338,339,341,343,346],other:[0,1,9,32,68,90,91,93,148,200,225,254,260,434,460,472,474,482,486,489,491,494,496,498,499,506,507,508],otherwis:[0,172,203,216,284,474,476,506],oup:3,ouput:148,our:[2,3,6,7,149],out:[1,6,9,32,148,201,202,203,218,219,248,253,255,262,272,474,476,509],out_graph_def:154,out_graph_fil:154,out_plan:3,outcom:227,outdat:129,outer:193,outperform:2,output0_nam:[38,68,70],output1_nam:[38,68,70],output:[1,3,4,7,9,13,32,37,44,68,70,76,82,83,93,97,108,109,115,117,122,129,148,154,166,171,172,182,184,185,215,217,219,220,223,227,232,233,248,260,272,273,274,275,276,278,279,284,285,286,289,313,324,327,333,339,341,342,376,386,387,388,402,406,444,472,475,478,480,486,487,492,494,499,505,506,507],output_channel:3,output_dir:437,output_fn:216,output_graph:[402,406,411,486],output_index_map:[227,492],output_model:505,output_nam:141,output_nod:[141,323],output_node_nam:[106,107,140,141,145,148,154],output_nodes_nam:129,output_path:[223,262,493],output_tensor:[154,260],output_tensor_nam:260,output_tensors_dict:505,outsid:455,over:[3,4,6,177,203,207,212,223,227,489,492,507],overrid:[171,190,219,273,284,295,434],overview:6,overwrit:[177,203,207,212],overwrite_exist:181,own:[2,40,43,68,69,70,97,199,216,472,475,476,489,492,496,504,507],p_sum:[289,290],pack:[67,84],packag:[7,9,32,303,310,315,317,318,320,321,322,325,326,329,330,349,350,354,357,363,365,368,369,375,394,396,401,404,407,408,410,416,421,425,458,472,484,485,490,503,507],pad:[3,94,95,201,216,476,506],paddedcentercroptransform:216,padding_mod:506,page:474,page_not_found:460,pair:[44,126,493],panda:232,panel:472,paper:[478,499],par:2,para_vec:240,paragraph:[224,225],parallel:[202,476,499],param:[3,7,44,67,68,69,70,84,90,91,93,113,114,129,148,154,181,187,191,197,201,223,224,226,227,256,275,295,315,346,443,494,507],param_count:234,param_dict:[182,187,232],param_group:307,param_nam:[44,307],param_upperbound:234,paramet:[3,4,9,13,32,38,40,42,43,44,61,67,68,70,79,80,81,82,83,84,85,86,93,96,97,101,103,104,105,106,107,108,109,110,113,114,123,124,127,128,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,154,159,160,162,164,165,166,168,171,172,177,179,181,182,187,199,200,201,203,207,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,229,230,231,232,233,234,235,237,238,239,240,241,244,248,249,250,251,252,253,254,255,256,260,263,264,270,271,272,273,274,275,276,278,279,284,285,288,289,290,294,295,307,311,315,316,334,335,336,339,345,347,356,382,424,429,434,436,437,442,443,445,455,456,472,475,476,480,482,489,492,499,504,506,507],parameter_typ:397,parametermanag:[232,235],params_feed:[310,368,425],params_interfac:[328,333,334,336,338,339,340,341,342,344,368,425,462],params_per_typ:[336,339],params_vec2params_dict:[238,240],paramt:272,paraphrase_xlm_r_multilingual_v1_stsb_stat:502,paras_vec:238,parent:[129,245,250,252,505],pareto:[2,238,239],pars:[7,70,148,213,216,297,307,333,334,336,339,340,341,342,345,398,402,406,411,417,436,443,451,462,506],parse_arg:[297,402,406,411,417],parse_benchmark_data:[333,339],parse_benchmark_edit_data:[333,339],parse_bool_valu:443,parse_dataload:307,parse_dataset_data:[334,339],parse_dict_value_to_float:451,parse_dict_value_to_int:451,parse_evaluation_data:307,parse_graph:129,parse_history_item:462,parse_history_snapshot:462,parse_list_valu:307,parse_log:398,parse_metr:307,parse_model_data:[339,340],parse_model_data_to_bench_nam:398,parse_model_wise_config:[336,339],parse_multidim_list:307,parse_nod:345,parse_not_to_prun:249,parse_op_wise_config:[336,339],parse_optimization_data:[336,339,341],parse_optimization_edit_data:[339,341],parse_profiling_data:[339,342],parse_profiling_edit_data:[339,342],parse_profiling_result_data:[339,342],parse_to_float_list:443,parse_to_prun:249,parse_to_string_list:443,parse_transform:307,parse_tune_config:42,parse_tuning_histori:[339,341],parse_valu:307,parse_vers:443,parse_wise_paramet:[336,339],parsed_dataset_data:[334,339],parsed_result:436,parsedecodecocotransform:178,parsedecodeimagenet:[213,506],parsedecodeimagenettransform:179,parsedecodevoctransform:216,parser:[165,255,307,425,429,433,462],part:[1,7,44,217,219,223,248,250,475,478,485,486,490,493,499],parti:223,partial:[3,436],particip:[0,474],partit:480,partner:500,parzen:507,pascal:203,pass:[1,3,4,7,9,32,100,104,154,215,251,254,295,390,442,455,456,473,475,476,478,480,487,492,496,499,501,507],past:7,pat:[6,500],path:[2,3,9,32,38,40,43,68,70,148,154,164,165,201,202,203,216,217,218,219,229,230,231,232,235,237,238,241,249,251,253,254,255,260,263,271,272,285,295,301,313,316,323,324,327,333,334,339,341,342,356,362,373,376,379,381,382,384,386,387,388,389,393,413,429,443,444,453,468,472,473,475,476,478,480,486,487,492,494,495,499,506,507],path_imgrec:475,path_to_cert:472,path_to_private_kei:472,path_to_sav:285,patient:478,pattern:[7,38,40,69,70,84,85,93,116,120,126,129,144,203,219,242,246,250,255,336,339,352,361,362,459,476,489,497,508],pattern_data:352,pattern_map:70,pattern_registri:244,pattern_typ:244,patternbas:[244,245],patternlockprun:250,patternninm:248,patternnxm:248,pbar:499,pbound:275,peak:496,pegasu:508,peleenet:508,penalti:[13,220,221,492],pencil:472,pend:484,penghui:491,pengxin:491,pentium:491,per:[3,7,9,32,40,43,68,69,70,181,200,223,235,289,290,313,472,486,498,501,508],per_category_ap:223,per_channel:[7,507],per_channel_quantized_model:3,per_channel_symmetr:3,per_tensor:[7,507],per_tensor_symmetr:3,percentag:[225,233],perchannelminmaxobserv:3,perf:498,perform:[2,4,6,7,9,32,85,120,164,181,201,215,218,219,230,231,233,235,237,238,241,253,255,264,271,272,300,314,324,333,339,341,427,436,444,446,453,462,472,473,475,477,479,481,485,486,489,490,492,493,494,495,496,497,498,499,500,501,502,505,507,508],performance_onli:[70,126,140,145,153,453,507],performancebycategori:223,performancepars:436,performancethroughput:508,perm:[216,506],perman:[0,474],permiss:[0,474],permut:[216,506],persist:494,person:[0,6,166,474,500],perspect:507,phase:[2,160,162,254,499,501,507],phi:491,physic:[0,181,474],pick:3,pid:[429,437],piec:[13,215,220,492],pil:[216,506],pin:[324,339,341],pin_accuracy_benchmark:[324,339,341],pin_memori:[183,184,191,193,196,197,198,200],pin_performance_benchmark:[324,339,341],pip:[6,472,480,484,485,490,503],pipelin:[40,43,68,70,217,219,230,231,237,254,479,497],pixel:[223,506],pkl:295,place:[263,485,490,505],placehold:[79,199],placeholderwithdefault:79,plai:[258,259,262,263,499,500],plan:[489,493],platform:[104,432,481,485,486,489,500,504,508],platinum:[498,502,508],pleas:[2,4,5,6,129,201,202,203,206,248,250,251,472,476,479,480,490,492,493,496,499,501,503,504],plu:472,plug:[6,500],png:[203,476],point:[3,4,44,67,213,224,225,239,264,275,471,481,482,492,506,507],polici:[0,6,278,474,486,498],polit:[0,474],pollut:223,pool1:507,pooler:1,poor:505,pop:472,popen:437,popul:[2,234],popular:[6,7,9,32,219,476,478,499,507,509],popularli:492,port:[90,91,93,148,456,460,472],port_default:456,portion:201,posit:[0,129,216,472,474,492],possibl:[181,219,232,311,472,482,486,497,501,507],post:[0,3,4,7,9,32,38,40,43,171,172,216,254,272,274,275,276,278,279,284,455,474,479,480,481,485,489,490,497,505,507],post_batch:42,post_epoch_end:[190,219,241],post_error:455,post_failur:455,post_node_nam:100,post_success:455,post_training_dynamic_qu:482,post_training_quantization_conf:497,post_training_static_qu:[482,507],postcseoptim:122,posterior:507,postfix:[113,114],posthostconstconvert:121,postprocess:[7,9,32,38,40,43,68,70,177,184,212,214,216,254,446,473,475,505,506],postprocess_cfg:288,postprocess_cl:[184,188,473],postprocessor:1,postprocessschema:446,potenti:2,power:[478,498],pragma:2,pramet:216,pre:[3,7,171,172,201,272,273,274,275,276,278,279,284,476,478,486,493,499,500,505,507,508],pre_batch:42,pre_epoch_begin:[190,219,241],pre_mask:248,pre_node_nam:100,pre_process:[190,217,219,230,237,241,253,480],preced:220,precis:[4,5,6,7,9,32,38,40,43,68,69,70,171,172,218,219,223,225,227,228,253,255,264,272,273,274,275,276,278,279,284,311,321,324,325,334,335,336,337,338,339,344,368,402,404,405,406,426,444,447,449,471,472,473,479,480,481,489,500,507,509],precision_id:[323,324,325,326],precision_nam:[325,326],pred:[3,154,226,227,256,492],pred_list:227,pred_text:216,predefin:[6,301,334,338,339,443,509],predict:[2,3,9,13,32,154,184,185,216,220,224,225,226,227,233,235,256,478,492,505,506],predictor:[2,231,232,233,235,237],predictor_mod:235,prefer:[164,218,219,253,255,272],prefix:[68,154,181,219,220,456,486,505],prepar:[3,4,6,42,68,219,253,334,339,424,476,480],prepare_compress:285,prepare_custom_config_dict:1,prepare_environ:424,prepare_fx:68,prepare_model_data:42,prepare_predefined_dataload:[334,339],prepare_predefined_transform:[334,339],prepare_qat:4,prepare_sub_graph:68,preprocess:[1,177,212,214,216,217,219,475,480,506],preprocess_thread:475,prerequisit:485,present:[90,91,93,472,500],preserv:482,previou:[238,472,503,505,507],previous:[234,475],primari:507,primarili:486,print:[3,4,227,472,478,480,492,507],print_size_of_model:3,prior:[3,42,112,507],prioriti:[273,274,278],privat:[0,474],prob:1,problem:[201,227,234,492,493],problemmultiobject:234,proc:[255,425,433],procedur:[2,165],process:[2,4,9,32,38,40,43,68,70,171,172,177,179,181,201,202,203,212,213,214,216,219,230,231,234,237,238,241,248,250,251,252,255,272,273,274,275,276,278,279,284,294,310,391,392,395,425,429,433,436,437,444,472,473,475,476,478,479,480,481,486,497,499,505,506,507,509],process_and_check_config:249,process_config:249,process_param_dict:232,process_result:216,process_succeed:413,process_transform:444,processor:[467,485,486,493,498,500,501,502,508],produc:478,product:[6,9,32,481,489,493,498,500,504,507],profession:[0,474],profil:[255,305,321,328,339,342,344,345,368,425,426,436,458,463],profile_model:[368,416,418,422,425],profilerfactori:[415,420],profiling_api_interfac:[339,344,368],profiling_config_gener:[303,368,425],profiling_data:[415,419,420,422],profiling_detail:414,profiling_id:[327,328,339,342,414],profiling_nam:327,profiling_result:[321,327,344,368],profilingaddparamsinterfac:[339,342,345],profilingapiinterfac:[339,342],profilingconfiggener:305,profilingeditparamsinterfac:[339,342,345],profilingpars:436,profilingresult:[327,328],profilingresultaddparamsinterfac:[328,339,342,345],profilingservic:466,program:[480,486,493],progress:252,progressbar:499,project:[0,216,313,316,321,323,324,327,333,334,338,339,340,341,342,343,344,368,474,488,500,504,507],project_api_interfac:[339,344,368],project_data:[296,399,400,405,409,412,419],project_detail:[298,329,398,414],project_id:[313,316,323,324,327,329,334,338,339],project_nam:[329,334,339],projectapiinterfac:[339,343],promis:[479,485,499],prompt:[472,480],proof:[9,32],propag:42,properti:[9,32,201,364,429,491,498],property_char:220,proport:227,propos:[2,7,238,478,493,499],protected_nod:[103,148],proto:[213,216,506],provid:[2,9,32,129,171,172,177,190,212,214,216,218,219,223,232,241,253,254,255,271,272,273,274,275,276,278,279,284,356,376,382,429,438,462,471,472,473,474,475,479,480,481,482,483,485,489,490,493,494,505,508],provide_perform:462,proxi:1,prune:[6,22,148,190,219,242,243,244,246,248,249,250,252,254,255,263,285,425,433,448,480,481,489,497,500,509],prune_conf:497,prune_config:249,prune_util:[219,246,255],prune_weights_:263,pruner:[219,241,246,248,251,255,454],pruner_info:251,pruner_registri:270,pruner_represent:454,pruning_conf:[165,255,271],pruning_func:499,pruning_recip:[219,255],pruningconf:[219,241],pseudo:[171,172,272,273,274,275,276,278,279,284,505],ptq:[1,5,480,481,489,505],publicli:498,publish:[0,474,491,493],pull:[90,91,93],punct_nondigit_r:220,punctuat:[215,220,225],pure:241,purif:500,purpos:[232,481,493,507],put:[193,203,476,478,499],pycocotool:[223,484,490],pylint:474,pymoo:[232,234,235],pymoo_vector:232,pyobject:484,pypi:[6,472,490],python:[1,9,10,32,98,154,203,219,223,295,395,472,474,476,480,485,490,501,506,509],pytorch:[1,5,6,7,9,32,177,182,187,200,203,206,207,210,211,212,214,216,218,219,226,227,228,246,248,251,253,255,256,263,272,298,368,375,398,408,425,478,480,482,483,485,489,490,493,494,499,500,503,507,509],pytorch_dataload:195,pytorch_fx:1,pytorch_fxadaptor:68,pytorch_ipexadaptor:68,pytorch_linear_feature_match:182,pytorch_prun:[219,255],pytorch_script_bench_optim:298,pytorch_script_bench_original_model:298,pytorchadaptor:68,pytorchalignimagechannel:216,pytorchbasemodel:263,pytorchcifar100:203,pytorchcifar10:203,pytorchcriterion:182,pytorchcropresizetransform:216,pytorchcrossentropyloss:182,pytorchdataload:198,pytorchfashionmnist:203,pytorchfxmodel:263,pytorchimagenetraw:206,pytorchintermediatelayersknowledgedistillationloss:182,pytorchintermediatelayersknowledgedistillationlosswrapp:182,pytorchipexmodel:263,pytorchknowledgedistillationloss:[182,478],pytorchknowledgedistillationlosswrapp:182,pytorchloss:227,pytorchmetr:227,pytorchmnist:203,pytorchmodel:263,pytorchmxnettransform:216,pytorchmxnetwrapfunct:216,pytorchnormalizetransform:216,pytorchoptim:187,pytorchqueri:68,pytorchscriptmodel:381,pytorchselfknowledgedistillationloss:182,pytorchsgd:187,pytorchtransform:216,pytorchtranspos:216,q_capabl:68,q_config:[40,43,69,70],q_dataload:[171,172,273,274,275,276,278,279,284,487,507],q_func:[4,7,9,32,38,40,43,68,70,171,172,254,273,274,275,276,278,279,284,507],q_hook:[171,172,273,274,275,276,278,279,284],q_model:[1,4,9,32,219,229,475,476,480,487,492,494,495,496],q_sum:[289,290],qas:[224,225],qas_id:216,qat:[4,68,219,229,479,480,481,489,495],qat_model:4,qconfig:[3,4,42,505],qconfigmap:68,qdq:[5,258,259,260,263,285,489],qdq_enabl:70,qfunc:[219,253],qint8:3,qintegerop:[5,489],qlinear:[7,227,508],qlinearop:[5,489],qnli:[201,476,485,492,508],qqp:[201,476,492,508],qscheme:3,qsym_model:42,qtensor_to_tensor:42,qtype:[7,67],qualiti:[13,220],quanit:[38,40,43],quant:[1,3],quant_format:[258,259],quant_mod:[263,285],quantconf:[219,253,272],quantformat:67,quantil:507,quantiz:[3,7,22,38,40,42,43,44,67,68,69,70,112,116,118,120,126,141,164,171,172,183,184,190,213,218,219,229,254,255,262,274,275,276,278,279,284,285,286,289,290,294,295,306,311,339,341,347,425,433,444,448,472,473,475,476,480,481,485,486,487,489,491,492,493,494,495,496,497,500,503,505,506,507,509],quantizable_nod:42,quantization_aware_training_conf:497,quantization_candid:44,quantization_cfg:[40,43,70],quantization_conf:[165,255,272],quantization_config_gener:[303,368,425],quantization_threshold:44,quantizationconfiggener:306,quantizationmod:67,quantize_data:67,quantize_data_with_scale_zero:67,quantize_graph_bas:[132,133,134,135,136,137,138,140,142,143,144,145,146,147],quantize_input:[38,70],quantize_rang:67,quantize_sym_model:42,quantized_bin:[289,290],quantized_data:67,quantized_model:4,quantized_nod:126,quantized_typ:[289,290],quantized_value_typ:67,quantizedconv2d:[3,70],quantizedconvrelu2d:3,quantizediniti:67,quantizedinput:[213,506],quantizedmatmul:118,quantizedmatmulwithbiasanddequant:118,quantizedrnnconvert:123,quantizedv2:70,quantizedvalu:67,quantizedvaluetyp:67,quantizegraphbas:[140,141,145],quantizegraphforintel:145,quantizegraphhelp:148,quantizenodebas:[132,133,134,135,136,137,138,141,142,143,144,146,147],quantizev2:[122,137],quantstub:3,quanttyp:67,queri:[38,40,42,43,68,70,129,154,315,322,330,333,334,336,337,338,339,340,341,342,343],query_fused_pattern:[7,38],query_fusion_pattern_nod:129,query_fw_cap:[7,38,40,43,68,70,507],query_quantizable_nod:42,query_to_list:[315,322,330],querybackendcap:[7,40,43,68,69,70],question:[0,7,216,224,225,474,490,506,508],question_text:216,queu:370,queue:[455,460],quickli:[6,9,32,507,509],quint8:67,r34:1,race:[0,474],rais:[3,13,85,90,91,93,104,129,182,220,223,226,227,248,249,250,256,275,443,456,499],ran:[217,219],rand_crop:475,rand_mirror:475,random:[2,78,148,154,179,216,232,240,275,453,482,506],random_crop:[179,506],random_flip_left_right:[179,506],random_sampl:[232,275],random_se:[272,275,285,331,453,482,504,507],random_st:275,randomcrop:506,randomcroptftransform:216,randomcroptransform:216,randomhorizontalflip:[216,475,506],randomli:[2,216,240,275,506,507],randomresizedcrop:[475,506],randomresizedcropmxnettransform:216,randomresizedcroppytorchtransform:216,randomresizedcroptftransform:216,randomresizedcroptransform:216,randomsearch:240,randomst:275,randomtunestrategi:279,randomverticalflip:[216,506],rang:[3,4,7,204,205,216,223,232,285,476,478,480,482,499,506],rank:[233,480],rapid:[6,485],rate:499,rather:[9,32,85,487],ratio:[149,163,213,216,248,250,251,252,476,485,499,502,506,508],ration:248,ratiospars:508,raw:[6,202,206,492,507],raw_imag:[177,203,207,212],reach:[172,248,252,284,474,499,507],read:[154,206,216,249,251,362,366,367,476,481,501,504],read_graph:154,read_squad_exampl:216,reader:[362,363,368,425],readi:441,readm:480,real:[67,183,184,204,480,500],realdiv:[89,92],realiz:[480,492,496,501,504],realtim:[459,485],realtimeroutingdefinit:459,reason:[0,104,183,184,474,475,505,507],rebuild:129,recal:[223,225,227],receiv:504,recent:493,recip:[9,32,218,219,253,255,272,481,507],recogn:220,recognit:[472,480,505],recommend:[3,7,9,32,184,185,475,499,507],reconstruct:500,record:[1,3,182,201,202,203,476,504,505,507],recov:[40,43,70,295,479],recover_tuned_model:[40,70],recurs:[68,295],reduc:[3,5,7,9,32,85,244,475,479,493,500,501,507],reduce_rang:3,reducemax:44,reducemin:44,ref_2_4_int8:7,ref_2_4_uint8:7,refer:[4,5,6,7,9,13,32,201,220,221,226,227,248,250,251,256,473,476,479,480,485,487,491,492,493,496,499,503,506,507],reference_bin:[289,290],reference_corpu:221,reference_distr_p:[289,290],refin:[9,32,487],reflect:[492,498,506],refresh:468,refresh_tim:468,refresh_workdir:429,regard:[0,474,501],regardless:[0,223,474],regist:[2,7,9,32,38,61,160,162,177,182,187,190,203,207,210,211,212,214,216,217,219,226,227,239,240,241,242,243,244,248,250,252,256,264,270,275,284,473,476,480,492,496,507],register_forward_hook:505,register_hook:[190,219],register_hooks_for_model:182,register_pattern:248,register_prun:250,register_schedul:252,registr:[160,162,177,187,203,207,210,211,212,214,216,244],registri:[248,250,252],registry_criterion:182,regress:[201,474],regressor:233,regular:[220,249,499],reinstal:484,reject:[0,474],rel:[482,504,507,508],relat:[4,5,217,219,223,241,248,255,271,288,375,378,380,385,461,464,465,466,469],releas:[6,9,32,431,443,485,488,490],release_tag:443,relev:275,religion:[0,474],relu6:[3,7,97],relu:[3,7,38,97,144,505],remap:93,remind:472,remov:[0,3,70,85,97,108,120,122,129,141,148,182,225,313,316,323,324,327,329,331,333,379,437,438,444,473,474,486,499,505],remove_accuracy_metr:444,remove_all_hook:182,remove_dataload:444,remove_dead_nod:141,remove_log:437,remove_nod:129,remove_node_with_single_input_output:129,remove_number_of_samples_from_shap:379,remove_successful_log:438,remove_training_nod:148,removetrainingnodesoptim:103,renam:[79,104,503],renamebatchnormoptim:104,reorder:148,repeat:[3,245,507],repeat_mask:245,repercuss:[0,474],replac:[1,3,43,108,109,129,225,443,480,486,503],replace_al:129,replace_const_nod:129,replace_constant_graph_with_constant_nod:129,replace_nod:129,replace_single_nod:129,replace_with_valu:443,replic:223,repo:[3,476,483,509],report:[0,472,474,504],report_progress:393,report_spars:[260,263],repositori:[368,373,375,425,431,488],repres:[0,67,203,208,223,225,227,315,317,318,320,322,325,326,329,330,441,474,476,507],represent:[0,79,232,313,314,316,319,323,324,327,328,331,332,454,474,479,496],reproduc:474,requant:[116,118,505],request:[356,368,369,370,391,392,395,413,425,455,457,459,460,464,466,467,469,472,475],request_data_processor:[425,458,463],request_id:[298,398,413,414,437],requestdataprocessor:467,requir:[2,3,4,7,9,32,190,219,223,235,254,260,297,299,307,310,363,369,376,379,381,388,394,401,402,403,404,406,407,408,410,411,416,421,425,472,473,475,479,480,486,490,493,494,498,503,505,507,509],require_api_token:460,required_typ:307,rerange_quant:153,rerangequantizedconcat:153,res:[3,275],res_save_path:[2,238],rescal:[216,506],rescalekeraspretraintransform:216,rescaletftransform:216,rescaletransform:216,research:[3,491],reserv:[9,32,171,172,190,219,254,274,275,276,278,279,284],reset:[3,13,220,226,227,256,264,456,492],reset_non_value_to_default:249,reshap:[84,93,244],residu:3,resiz:[179,201,202,216,473,475,476,506,507],resize_method:179,resize_shap:[208,476],resize_sid:[179,506],resizecropimagenet:[480,506],resizemxnettransform:216,resizepytorchtransform:216,resizetftransform:216,resizetransform:216,resizewithaspectratio:179,resizewithratio:[216,506],resnet101:[485,508],resnet18:508,resnet34:[1,508],resnet50:[3,6,235,480,485,486,504,508],resnet50_fp32_pretrained_model:[480,486],resnet50_measur:486,resnet50_v1:[480,486],resnet50v1:485,resnet:[6,480,486,508],resnext101_32x16d_wsl:508,resnext101_32x8d:[485,508],resolut:235,resourc:[393,478,485,499],respect:[0,474,479,499],respons:[38,40,43,68,70,432,436,442,455,459,460,464,466,468,469],response_gener:[425,458,463,464,466,469],responsegener:468,restrict:[93,499,504],result:[0,2,3,7,9,13,32,38,40,43,68,70,154,171,179,182,216,220,223,224,225,226,227,232,234,238,256,264,273,274,275,276,278,279,284,296,298,313,314,327,328,333,339,342,345,419,459,462,472,473,474,475,478,480,482,486,489,491,492,496,499,500,504,505,506,507,508],result_list:264,results_csv_path:2,resum:[6,171,172,272,273,274,275,276,278,279,284,285],retrac:501,retrain:479,retriev:[199,438],retrun:129,return_code_al:438,revers:472,review:[0,474],revis:[33,34,35],rewrit:[79,80,81,82,83,84,85,86,96,101,103,104,105,106,107,110,113,114,123,124,127,128],rgb:179,right:[0,1,179,223,441,472,474,475,506],rmax:[44,67,471],rmin:[44,67,471],rmse:[227,233,492,507],rnn:508,rnn_detail:123,roberta:[201,476,508],roberta_base_mrpc_stat:502,roc:[218,219,227,241,253,255,271,272],role:[258,259,262,263,499],rollov:[183,184,191,193,196,197,198,200],root:[175,201,202,203,227,233,258,259,260,262,263,285,460,473,475,476,480,492,507],root_rank:480,round:[3,4,149,163,471,482],round_nearest:3,rout:459,router:[255,425,458],routingdefinit:459,routinu:[219,253],row:[472,499],rpnhead:1,rpnpostprocessor:1,rte:[201,476,485,492,508],rtype:[118,275,438],rule:499,run:[4,6,7,37,38,40,42,44,68,129,154,171,172,181,200,215,219,232,235,249,250,272,273,274,275,276,278,279,284,394,437,458,459,460,472,474,480,481,484,486,493,499,500,503,504,505,507,509],run_forward:42,run_inst:[181,219],run_migrations_offlin:37,run_migrations_onlin:37,run_search:234,run_serv:460,run_tun:505,run_tuning_dump_tensor:505,runner:235,runs_v3:505,runtim:[7,9,32,481,482,483,485,489,509],s_loss:241,s_output:241,sacrif:500,safe:[289,290,474],safe_entropi:[289,290],salient:499,same:[3,7,70,79,154,201,216,223,241,295,473,475,476,478,480,498,505,506,507],sampl:[2,6,9,32,100,126,177,199,203,207,212,216,226,227,239,256,275,324,379,444,475,476,481,489,506,507,508],sample_weight:[226,227,256],sampler:[183,184,191,193,196,197,198,200,480],sampling_s:[324,444,475,507],samsum:508,saniti:254,sapphir:[6,485],sart:264,satisfi:[200,485,490],satur:506,save:[1,2,3,5,9,32,38,40,43,68,70,129,177,203,207,212,233,238,254,258,259,260,262,263,285,286,289,295,486,487,493,494,495,499],save_histori:234,save_model_to_fil:262,save_path:[40,43,70,258,259,263,285,494],save_to_disk:[38,40,43,68,70],saved_model:[154,219,229,368,375,385,495],saved_model_dir:[3,260],saved_model_sess:260,saved_model_tag:260,saved_result:494,savedmodel:[70,260,272,508],savedmodelmodel:389,scalabl:[6,485,486,493,498,500,501,502,508],scalar:[9,32,171,172,272,273,274,275,276,278,279,284,289,290,492,493],scale:[3,4,38,44,67,70,85,149,163,179,213,216,262,471,482,506],scale_after_norm:85,scale_c:[149,163],scale_nam:67,scale_propagation_concat:507,scale_propagation_max_pool:507,scalepropagationtransform:124,scaler:[9,32],scenario:[7,9,32,37,311,472,473,478,486,499],schedul:[22,219,246,250,255,285,497],scheme:[7,40,67,69,460,475,507],scienc:[485,490],scipi:275,scope:[154,190,219],score:[1,13,220,221,223,224,225,227,248,250,492,496,499,504,507],script:[3,37,220,221,224,225,297,298,381,398,402,406,408,411,417,480,489,500],scripted_quantized_model_fil:3,se5c6200:498,se_resnext50_32x4d:508,search:[6,13,93,165,171,172,218,219,220,230,231,232,234,235,237,238,239,240,253,255,272,275,276,279,334,335,362,489,492,500,505,507],search_algorithm:[2,165,219,237,255],search_in_list_of_dict:[334,335],search_in_list_of_dict_for_unique_valu:[334,335],search_result:2,search_spac:[2,165,230,237,238,239,240],searchalgomanag:234,searcher:[233,240],sec:[486,508],second:[44,87,201,356,436,472,482,496,507],section:[2,472,478,499],secur:[6,498,500],sed:503,see:[0,1,3,216,220,223,472,474,486,491,495,499,505,508],seed:[2,154,232,234,240,453,475,482,507],seen:[3,7,295],segment:[201,221,223],segment_id:[216,478],select:[1,2,201,231,235,237,472,485,489,490,505,507],select_model_arch:[2,231,237,238],self:[2,3,7,9,32,86,116,219,223,241,250,275,456,472,476,489,492,496,504,505,507],selfknowledgedistillationloss:182,semant:7,send:[6,413,455,460,474],send_history_snapshot:413,send_respons:429,sensit:[250,489,499],sensitivitybalanc:508,sent:441,sep:[6,500],separ:[0,9,32,215,459,472,474,487,491,497],seper:[254,278],seq:70,seq_length:201,sequenc:[7,13,70,86,201,215,216,220,221,225,248,476,506],sequenti:[3,199,254,497,507],sequentialsampl:199,seri:[6,179,506],serial:[201,345,352,353,383,432,434,445,446,450,451,475],serializ:434,serialization_typ:[352,353,383,432,434,445,446,450,451],serialize_item:434,serv:[260,460,468],serve_from_filesystem:468,server:[254,255,368,375,424,425,432,433,440,443,454,456,458,472],server_port:456,servic:[255,425,457,458,498],servicenotfoundexcept:457,sess:154,session:[33,154,200,260,312,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,338,339,341,343,344,346,505],set:[0,2,3,4,6,9,32,38,40,42,43,44,68,69,70,120,129,148,154,164,166,171,172,181,187,191,197,199,201,203,206,216,217,218,219,223,228,229,230,232,237,241,249,254,255,260,262,264,272,273,274,275,276,278,279,284,297,334,335,336,339,356,402,406,411,432,441,442,444,445,446,455,456,460,472,473,474,475,476,480,486,487,489,492,493,504,507,509],set_accuracy_and_performance_batch_s:444,set_accuracy_go:444,set_accuracy_metr:444,set_accuracy_postprocess_transform:446,set_all_env_var:181,set_attr_bool:[129,148],set_attr_dtyp:[129,148],set_attr_float:[129,148],set_attr_int:[129,148],set_attr_int_list:129,set_attr_str:[129,148],set_attr_string_list:[129,148],set_attr_tensor:[129,148],set_attr_type_list:[129,148],set_config_by_model:[218,219,228],set_database_vers:[334,335],set_dataset:445,set_eager_execut:[297,402,406,411],set_env_var:181,set_epoch:480,set_evaluation_dataload:444,set_evaluation_dataset_path:444,set_input:444,set_max_tri:453,set_op_wise_pattern_precis:[336,339],set_optimization_precis:444,set_output:444,set_performance_cores_per_inst:444,set_performance_iter:444,set_performance_num_of_inst:444,set_performance_onli:453,set_performance_warmup:444,set_precis:[447,449],set_quantization_approach:444,set_quantization_batch_s:444,set_quantization_config:69,set_quantization_dataload:444,set_quantization_dataset_path:444,set_quantization_sampling_s:444,set_random_se:453,set_se:232,set_template_path:[334,339],set_tensor:[38,40,43,68,70],set_timeout:453,set_transform:444,set_transforms_from_list:445,set_up:456,set_workspac:[444,453],setter:[2,183,184],setup:[472,485,490],sever:[2,3,5,148,216,252,472,478,489,493,499,506],sex:[0,166,474],sexual:[0,474],sgd:[4,168,187,255],sgdoptim:451,shallow:478,shape:[6,129,148,179,204,205,216,223,248,368,375,379,390,425,472,476,486,506],shape_elements_ord:443,share:[122,148,484,507],shareqdqforitexypatternoptim:128,shell:[429,437,505],shen:491,shift:[149,163,213,506],shortcut:[201,476],shorter:[201,216,476,506],shot:[2,6,250,252,489,499,500],should:[1,2,3,7,9,32,40,43,44,68,69,70,77,97,149,153,171,172,177,184,185,199,203,207,212,215,216,221,226,227,250,254,256,272,273,274,275,276,278,279,284,295,356,434,472,476,480,492,496,506,507],should_show_fil:356,should_show_only_model_fil:356,show:[0,3,472,473,474,478,480,485,499,507],show_nam:152,show_op:152,shown:[1,2,356,472,478,486,492,496,497,507],shuffl:[183,184,191,193,196,197,198,200,475],shuffle_chunk_se:475,shuffle_dataset:475,shuffle_se:475,shufflenet:508,side:[216,472,476,506],sign:[472,504],signal:[413,443,482],signatur:260,signific:[3,6,500],significantli:[3,493,499],sigopt:500,sigopt_api_token:[504,507],sigopt_experiment_id:504,sigopt_experiment_nam:[504,507],sigopt_project_id:[504,507],sigopttunestrategi:171,similar:[129,486,507],simpl:[3,6,216,472,490,504,507],simpler:85,simplest:[2,478],simpli:[3,250,480,494],simplifi:[79,481],simul:4,simultan:497,sinc:[4,13,218,219,220,241,253,255,271,272,413,478,482,492,497],singl:[9,32,201,215,216,223,232,234,250,252,275,329,345,364,429,462,476,499],single_output:[226,227,256],singleton:[129,255,425,433],site:503,situat:480,sixteen:493,size:[0,3,5,122,177,179,193,199,200,203,207,209,212,216,223,232,235,248,262,295,313,323,324,441,443,444,472,473,474,475,476,480,484,486,496,499,502,506,507,508],skip:[37,264,505,507],skip_add:3,sklearn:232,skylak:[6,485],slim:[3,223,260,494],slim_sess:260,small:[2,4,223,472,507],smaller:[93,216,478,499,506],smbo:507,smt:220,snapshot:[294,345,462],snif:460,snip:[250,489,499,508],snipmomentumprun:250,snippet:489,snipprun:250,social:[0,474],socio:[0,474],socket:[181,432,460,498,502,508],socketio:[460,472],softcrossentropi:182,softmax:478,softwar:[491,493,498,500,503],solut:[6,7,9,32,149,163,232,484,500,507],solv:503,some:[9,32,171,201,249,273,284,443,472,482,485,490,492,496,499,501,505,507],someth:[38,40,43,68,70,171,172,203,272,273,274,275,276,278,279,284],sometim:[1,129,148,499],sophist:3,sort:[148,356,507],sort_entri:356,sota:[6,500],sourc:[1,6,9,32,38,44,70,219,221,229,360,491,495,509],source_id:361,space:[0,2,7,164,171,172,218,219,225,230,232,234,237,238,239,240,253,255,272,275,276,278,279,284,443,474,475,499,507],spars:[219,241,250,476,499,500],sparse_dummy_v2:[205,476],sparse_ratio:[205,476],sparsecategoricalcrossentropycriterion:451,sparsecategoricalcrossentropyloss:182,sparsedummydataset:205,sparsiti:[6,9,32,245,248,250,251,252,260,263,476,481,489,499,508,509],spawn:459,spearman:233,special:[9,32,485,492,496],specif:[0,2,3,7,40,43,68,69,70,173,174,177,181,187,201,202,203,204,208,209,210,211,212,219,220,223,229,230,237,238,263,324,334,335,336,339,347,362,472,474,478,482,485,487,492,493,494,496],specifi:[3,40,43,44,68,69,70,129,148,171,172,181,216,218,219,223,226,227,230,233,235,237,238,241,253,254,255,256,271,272,273,274,275,276,278,279,284,294,295,311,313,316,323,324,325,327,328,329,333,334,336,337,339,341,342,346,347,348,361,393,397,398,399,415,420,436,443,456,460,472,479,480,482,492,496,506,507],speed:[3,6,485,486,500],speedup:[6,489],split:[1,148,215,216,232,506],split_shared_input:148,splitsharedinputoptim:105,spot:85,sqlalchemi:[33,312,313,314,315,316,317,318,320,322,323,324,325,326,327,328,329,330,331,332,333,338,339,341,343,344,346,484,490],sqlite3:333,sqrt:92,squad:[201,216,224,225,227,476,485,492,506,508],squadexampl:216,squadf1:[227,492],squadv1:[216,506],squar:[227,233,492,507],squeez:1,squeezebert:508,squeezenet:508,squential:199,squentialsampl:199,src_type:260,ssd:[1,508],ssd_resnet50_v1:485,ssh:480,sst2:508,sst:[485,508],stabl:[6,472,490,500],stage:[116,478,505],stand_norm:[204,205,476],standard:[203,216,492,506,507],start:[3,70,216,220,223,234,264,456,490,505,506,509],start_node_nam:129,start_posit:216,start_step:250,start_tim:496,startupinfo:[429,437],state:[226,227,256,499],state_dict:[3,480,505],staticmethod:148,statu:[0,129,313,324,327,331,333,339,341,342,427,455,468,474,496],status:[426,438,442],status_to_clean:[313,324,327,333,339,341,342,442],std:[179,216,235,473,475,506],std_valu:179,step:[3,4,38,40,70,116,248,250,251,252,264,285,472,474,478,479,480,493,499,501,504,505,507],still:[4,251,501],stop:[172,284,413,482,507],stopgradi:103,storag:[6,223,486,492],store:[3,9,32,44,203,223,242,243,244,248,250,487],str:[3,13,38,42,43,68,129,148,160,162,177,182,187,201,202,203,207,210,211,212,213,214,216,220,221,223,225,226,227,232,234,235,239,244,256,258,259,263,285,288,297,298,301,307,308,309,311,312,313,316,317,318,320,323,324,325,326,327,328,329,331,334,335,336,338,339,344,345,346,347,352,353,356,358,359,361,362,364,373,374,376,377,379,381,382,383,384,386,387,388,389,391,392,393,395,397,398,402,406,411,413,414,417,418,422,429,431,432,434,436,437,441,442,443,444,445,446,447,449,450,451,452,453,455,456,459,460,467,468,476,492,505,506],str_label:492,strategi:[6,7,10,38,40,42,43,68,70,203,219,253,311,331,426,443,453,480,481,489,500,501,503,509],strategy_registri:[284,507],streamlin:[485,490],stride:[3,216,506],string:[37,38,40,43,68,69,70,79,86,129,148,154,164,165,182,187,201,203,217,218,219,220,223,229,230,231,234,237,238,239,241,248,249,250,251,252,253,254,255,260,263,271,272,288,289,290,295,307,422,443,467,492,506],string_list:307,string_to_norm:443,string_valu:436,string_vers:443,strip:[90,91,93,154,505],strip_equivalent_nod:154,strip_unused_lib:154,strip_unused_nod:154,stripequivalentnodesoptim:106,stripunusednodesoptim:107,strtobool:79,structur:[3,129,250,372,489,499,505,508],sts:[201,476,492],stsb:508,student:[6,182,201,217,219,476,478,479,508,509],student_featur:182,student_loss:[182,190,219,478],student_model:[182,478],student_output:[182,190,219,478],student_targets_loss_c:182,style:[9,32,85,208,474,476,487],style_fold:[208,476],style_transf:476,style_transfer_dataset:207,styletransferdataset:208,sub:[2,68,75,76,77,78,81,82,87,88,89,92,94,95,96,98,100,101,103,105,106,107,110,112,113,118,120,121,122,123,124,126,127,128,129,181,219,235,473],sub_module_list:68,subclass:[7,38,61,160,162,177,187,196,200,203,207,210,211,212,214,216,226,227,239,242,243,244,248,250,252,256,264,270,284,507],subdepend:432,subexpress:486,subfold:203,subgraph:[77,85,89,93],subject:[429,455,491],submit:474,submodul:505,subnet:[232,235],subnet_cfg:235,subnetwork:[232,235],subpath:460,subpixel:179,subprocess:[437,459],subset:[175,203,476],subsidiari:[491,498],success:[438,455,485,490],successfulli:[1,6,480,500],successor:[115,116,117,118],suffici:504,suffix:154,suggest:[1,240,504],suit:[485,490,505],sum:[3,227,478],sum_pattern:116,summar:[152,478],summari:[68,121,122,181,219,472,474,498,505],summarize_graph:129,summarize_parti:436,summarize_valu:436,summary_benchmark:[181,219],summary_metr:223,summarywrit:505,summeri:223,supercategori:223,supernet:[2,234,235],supernetwork:[232,235],suppli:42,support:[1,2,3,7,9,32,40,43,67,68,69,70,97,104,121,171,172,177,182,183,184,187,200,201,203,207,210,211,212,213,214,216,219,226,227,229,234,235,239,242,243,244,248,250,254,256,260,264,272,273,274,275,276,278,279,284,288,289,290,311,376,379,381,382,384,386,387,389,395,426,434,443,472,473,481,482,485,486,495,500,501,504,507,508,509],support_pattern:[242,243,244],supported_op_typ:86,supported_vers:395,supports_graph:323,supports_path:[376,379,381,384,386,387,389],supports_profil:323,sure:[1,3,148,248,250,252,376,472],surrog:507,switchoptim:108,sym:[7,67,507],sym_model:42,symbol:[1,9,32,42,159,220,272,494],symbol_r:220,symbolblock:42,symbolic_trac:1,symmetr:[471,506],symnet:42,sync:254,syntax:[2,9,32],synthet:472,system:[181,295,432,458,459,481,499],t10k:[203,476],t_output:241,tab:[225,336,339,345,459,505],tabl:[312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,330,331,332,334,335,344],tag:[260,431,443,505],take:[0,2,9,32,38,70,171,172,184,185,216,248,272,273,274,275,276,278,279,284,474,475,478,499,501,506,507],taken:[3,171,172,272,273,274,275,276,278,279,284],tampl:68,tar:[203,476],target:[3,4,42,67,113,114,129,148,182,232,249,252,275,360,361,475,476,478,480,493,499,505,506],target_boxes_num:492,target_height:[216,506],target_id:361,target_model_typ:[258,259,263,285],target_nod:129,target_ratio:252,target_sparsity_ratio:[248,250],target_width:[216,506],targetspac:275,task:[149,201,208,227,476,478,489,492],taskdataset:508,teacher:[6,168,182,217,219,255,478,479,508,509],teacher_featur:182,teacher_logit:478,teacher_model:[168,182,255,478],teacher_model_forward:182,teacher_output:[182,190,217,219],teacher_student_loss_c:182,team:[0,225,474,501],techniqu:[3,4,5,6,219,489,497,499],technolog:[6,203,498,509],temp:3,temperatur:182,templat:[9,32,251,255,316,334,339,425,433,469,472,507],template_path:316,template_typ:[334,339],templateadaptor:68,temporari:[0,474],temporarili:[0,474],tensor2tensor:221,tensor:[1,3,38,40,42,43,44,67,68,70,93,129,148,154,182,216,244,245,248,250,252,260,262,263,278,289,290,336,339,347,376,476,481,499,503,505,506,507,508],tensor_data:113,tensor_dict:[38,40,43,68,70],tensor_nam:[154,263],tensor_target_dtyp:67,tensor_to_nod:42,tensor_v:154,tensorboard:[6,7,38,40,43,68,70,272,285,288,481,507],tensorcollector:42,tensordataset:476,tensorflow1:200,tensorflow:[3,5,6,7,9,32,76,98,100,104,129,154,177,182,187,200,201,203,206,207,208,210,211,212,214,216,218,219,221,223,226,227,228,229,253,255,256,260,272,354,355,367,368,375,421,422,423,425,472,478,480,481,483,485,486,489,490,491,493,494,495,499,500,504,507,509],tensorflow_addon:187,tensorflow_dataload:[195,422],tensorflow_diagnosi:[349,368,425],tensorflow_itex:[206,208],tensorflow_itexadaptor:70,tensorflow_profil:[368,416,425],tensorflow_read:[363,365,368],tensorflowadam:187,tensorflowadamw:187,tensorflowadaptor:70,tensorflowbasemodel:[70,260],tensorflowbertdataload:200,tensorflowbertdataset:201,tensorflowcheckpointmodel:260,tensorflowcifar100:203,tensorflowcifar10:203,tensorflowcocomap:227,tensorflowcriterion:182,tensorflowcroptoboundingbox:216,tensorflowcrossentropyloss:182,tensorflowdataload:[200,422],tensorflowdiagnosi:355,tensorflowfashionmnist:203,tensorflowimagefold:203,tensorflowimagenetdataset:175,tensorflowimagenetraw:206,tensorflowimagerecord:203,tensorflowknowledgedistillationloss:182,tensorflowknowledgedistillationlossextern:182,tensorflowknowledgedistillationlosswrapp:182,tensorflowmap:227,tensorflowmetr:227,tensorflowmnist:203,tensorflowmodel:[384,386,387,388,389],tensorflowmodelzoobertdataload:200,tensorflowmodelzoobertdataset:201,tensorflowoptim:187,tensorflowqueri:[7,70],tensorflowrandomhorizontalflip:216,tensorflowrandomverticalflip:216,tensorflowread:367,tensorflowresizecropimagenettransform:179,tensorflowresizewithratio:216,tensorflowsavedmodelmodel:260,tensorflowsgd:187,tensorflowsparsecategoricalcrossentropi:182,tensorflowtfrecorddataset:203,tensorflowtopk:227,tensorflowtransform:216,tensorflowtranspos:216,tensorflowvocmap:227,tensorflowvocrecord:203,tensorflowwrapfunct:216,tensorproto:67,term:[217,219,478,491,492,496,497,507],test:[1,6,44,216,232,472,474,490,508],test_func:480,text:[6,13,215,216,220,225,251,491,500,506,508],tf1:[200,494],tf2:494,tf_enable_onednn_opt:[6,472],tf_modul:422,tf_record:507,tfdatadataload:200,tfdo:260,tflite:495,tfmodelzoocollecttransform:216,tfpruningcallback:241,tfrecord:[177,201,202,203,207,212,476],tfrecorddataset:[476,507],tfsquadv1modelzooposttransform:216,tfsquadv1posttransform:216,than:[2,3,4,9,32,77,85,199,201,216,223,476,487,492,496,497,499,504,506],thei:[0,164,181,219,255,473,474,478,492,496,499],them:[1,5,9,32,85,129,201,475,487,497,499,507],therefor:[1,4,503],thi:[0,2,3,4,6,7,9,13,32,37,42,67,68,70,79,80,81,82,83,84,85,86,96,101,103,104,105,106,107,109,110,113,114,123,124,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,153,159,163,171,172,183,184,190,200,201,202,203,204,205,206,208,215,216,219,220,223,224,225,227,232,240,241,248,250,251,252,253,254,255,264,271,272,273,274,275,276,278,279,284,294,295,471,472,473,474,475,476,478,480,482,486,489,491,492,493,494,495,499,501,503,504,505,506,507,509],third:[223,475],those:[9,32,97,278,295,478,486,487,497,499,507],though:37,thread:[181,459,472,475,498],threat:472,threaten:[0,474],three:[5,97,201,251,472,475,486,490,493,497,501,504,505,507],threshold:[42,44,161,223,248,286,289,290,492],through:[2,3,9,32,171,172,215,272,273,274,275,276,278,279,284,485,487,489,490,492,496,497,504],throughput:[441,486],thu:[4,223],tian:491,tile:245,tile_pattern:[219,242,243],tilepattern_1x16:245,tilepattern_1x1:245,tilepattern_1x2:245,tilepattern_2x2:245,tilepattern_4x1:245,tilepatternbas:245,till:[295,507],time:[3,4,154,216,227,264,275,295,430,436,456,480,484,496,499,500,504,505,506,507],timeout:[4,172,284,453,482,504,507],tini:508,tinybert:508,titl:491,tloss:480,to_json_str:201,toarrai:[216,506],todo:[7,43,204,223,289,290,441],togeth:[216,248,254,475,478,485,490,505,506],token:[13,201,212,214,216,220,221,456,460,472,476,492,504,506,507],token_is_max_context:216,token_to_orig_map:216,token_type_id:[201,499],tokenzi:215,tondarrai:506,tondarraytransform:216,tool:[1,6,7,154,295,475,486,491,500,509],toolkit:[1,6,481,485,490,500],top1:[3,4,235],top5:[3,4],top:[3,129,216,218,219,227,241,253,255,271,272,273,274,492,506,508],topic:6,topilimag:506,topk:[3,473,475,480,492],topolog:505,torch:[1,3,4,9,32,68,159,182,227,235,263,272,480,493,494,499,505],torchvis:[216,235],torchvisionrefer:235,toronto:[203,476],total:[216,227,250,252,260,263,264,476,506],total_execution_tim:328,total_prune_step:252,total_spars:[260,263],totensor:[473,475,506],tow:480,toward:[0,4,474,478],tpetunestrategi:172,tqdm:478,trace:[1,159,272],traceabl:[1,68],trademark:498,train:[2,3,6,7,9,32,38,40,43,68,70,85,171,172,190,201,203,216,217,219,229,230,232,233,237,241,250,251,254,272,274,275,276,278,279,284,288,451,471,476,478,479,481,486,489,493,495,497,499,500,507,508],train_cfg:288,train_dataload:[478,499],train_dataset:480,train_func:[254,478,480,499],train_kwarg:480,train_load:[4,480],train_loop:285,train_one_epoch:4,train_sampl:480,train_with_al:232,training_func_for_nc:4,transfer:[208,217,219,476,478,479],transfo:508,transform:[1,6,9,15,32,33,43,67,73,85,113,114,116,132,133,134,135,136,137,138,141,142,143,144,146,147,149,152,153,175,177,201,202,203,204,205,206,208,209,210,211,212,307,311,316,321,334,337,339,344,346,368,443,444,445,446,473,475,476,478,479,480,481,499,500,501,505,507],transform_cl:[177,212,214,216],transform_func:216,transform_list:[216,506],transform_registri:[177,212,214,216],transform_typ:[177,212,214,216],transforms_data:[307,334,339],transforms_list:445,transforms_queri:330,translat:[13,70,220,221,232,235],translate2param:232,translate2pymoo:232,translation_corpu:221,transpos:[216,248,506],trash:472,trasnform:67,travers:[171,172,273,274,275,276,278,279,284,507],treat:475,tree:251,tri:[456,507],trial:[453,507],trial_limit:232,trials_count:[172,284],trigger:[181,219,250,486],troll:[0,474],truncat:[201,216,476,506],trust:[383,472],truth:[182,224,225],try_cnt:154,ttl:430,tunabl:273,tune:[1,4,6,7,9,32,38,40,42,43,68,70,164,171,172,201,203,218,219,253,255,272,273,274,275,276,278,279,284,295,306,324,331,332,339,341,345,368,398,403,413,425,433,444,448,472,475,476,480,481,482,485,489,491,493,496,499,500,501,503,504,505,509],tune_0_acc0:505,tune_1:505,tune_1_acc0:505,tune_1_acc_0:505,tune_:505,tune_cfg:[7,38,40,42,43,68,70],tune_config:[273,274,276,278,284],tune_model:[368,403,410],tuned_checkpoint:1,tuner:[171,172,218,219,253,255,272,273,274,275,276,278,279,284],tunestrategi:[171,172,273,274,275,276,278,279,284,507],tuning_cfg:70,tuning_cfg_to_fw:70,tuning_detail:[321,324,344,368],tuning_details_data:331,tuning_details_id:[324,331],tuning_histori:[321,324,339,341,344,368,403,425],tuning_history_id:331,tuning_history_path:[295,413],tuningdetail:[324,331,412],tuninghistori:[324,332,413],tuninghistoryinterfac:[339,341,345,462],tuninghistoryiteminterfac:[345,462],tuningspac:278,tupl:[9,32,42,68,129,171,172,179,182,213,216,223,232,235,272,273,274,275,276,278,279,284,362,393,443,462,476,492,499,506],turbo:[432,498],turn:[3,492],tutori:[500,509],twitter:[6,500],two:[1,2,9,32,116,129,177,181,203,207,208,212,223,248,252,254,295,472,473,476,478,480,486,492,493,497,499,501,504,507],txt:[6,206,472,476,485,490],type:[3,5,7,13,38,40,42,43,44,67,68,69,70,80,83,84,85,86,93,97,108,109,115,116,117,120,129,132,133,134,135,136,137,138,141,142,143,144,146,147,148,154,159,160,162,166,172,177,182,187,199,201,203,207,210,211,212,214,216,219,220,221,223,226,227,229,232,234,239,242,243,244,248,250,252,254,256,260,263,264,270,275,284,285,288,294,307,325,326,334,335,337,339,377,429,432,434,436,439,472,476,481,489,493,499,506],typeerror:434,types_to_splic:[103,148],typic:[2,9,32,85,219,229,254,479,499],ubuntu:[6,498],ubyt:[203,476],udpat:444,uesd:285,uint8:[7,67,213,223,289,290,471,476,506,507],ultim:4,unaccept:[0,474],unaff:215,unbalanc:508,uncas:[216,476,506,508],unchang:248,uncondition:148,undefin:249,under:[2,3,129,203,294,472,476,486,491,492,497,499,505,507,509],underli:[90,91,93,233],underscor:443,understand:[9,32,505],understudi:[13,220],unet:508,unfold:472,unicod:[215,220],unicoderegex:220,unifi:[6,9,32,173,174,177,218,219,253,255,272,436,475,487,489,494,509],unify_tim:436,unimpl:[40,43],union:[70,221,223,227,285,307,309,324,345,383,429,432,434,436,437,443,446,447,449,451,455,492],uniqu:[223,235,254,275,334,335],unique_id:216,unique_node_name_from_input:148,unit:[248,436,443,474],universal_newlin:[429,437],unk:215,unk_token:215,unknown:457,unless:456,unnecessari:[181,219],unpack:393,unpack_arch:393,unpin:324,unpin_benchmark:324,unspport:68,unstructur:[245,489,499,508],unsupported_precis:69,until:[2,486,507],untrac:1,unus:232,unwelcom:[0,474],up1:[485,509],up2:[485,509],up3:[485,509],updat:[3,9,13,32,33,85,97,129,220,226,227,235,248,250,256,263,298,313,314,315,316,324,327,329,331,333,339,341,342,343,346,413,436,444,447,449,453,472,475,492,498,499,507],update_accuraci:314,update_batch_s:[313,324],update_benchmark_accuraci:[333,339],update_benchmark_dur:[333,339],update_benchmark_perform:[333,339],update_benchmark_statu:[333,339],update_config_path:[313,324],update_config_to_machine_specif:309,update_cores_per_inst:313,update_dataload:33,update_dataloaders_param:346,update_dataset:[313,324,327],update_dur:[313,324,327],update_execution_command:[313,324,327,333,339,341,342],update_frequency_on_step:250,update_gradi:263,update_items_for_all_prun:251,update_log_path:[313,324,327,339,342],update_mod:313,update_not:329,update_num_thread:327,update_number_of_inst:313,update_optimization_dur:[339,341],update_optimization_statu:[339,341],update_optimized_model:[324,339,341],update_param:315,update_parti:436,update_path:[333,339,341],update_perform:314,update_precis:324,update_profiling_dur:[339,342],update_profiling_statu:[339,342],update_project_not:[339,343],update_sampling_s:324,update_scor:250,update_sparsity_ratio:252,update_statu:[313,324,327],update_template_path:316,update_transform:33,update_tuning_detail:324,update_tuning_histori:331,update_weight:263,updateenteroptim:109,upload:489,upper:[232,234],upstream:509,url:[37,393,456,491],usag:[9,32,200,219,223,229,254,443,472,476,480,481,483,485,486,492,495,496,506],use:[0,1,2,4,7,9,13,32,43,67,171,172,181,199,200,201,202,218,219,220,221,223,227,230,233,235,237,241,253,255,271,272,274,275,276,278,279,284,295,456,472,473,474,476,478,480,481,482,485,487,491,492,493,494,496,498,499,500,501,504,507,508],use_bf16:501,use_bp:221,use_external_data_format:262,use_res_connect:3,used:[2,3,5,7,9,32,38,40,43,61,68,70,160,162,164,177,181,187,199,200,201,203,204,205,207,208,210,211,212,214,216,219,223,228,229,233,235,239,244,248,250,251,252,255,264,270,278,284,286,289,290,295,339,344,349,350,354,368,375,427,443,445,455,456,472,473,475,476,478,479,480,481,482,492,493,494,495,504,505,507],useful:250,user:[1,2,3,6,7,40,69,129,164,171,172,173,174,177,181,187,190,203,206,209,210,211,212,216,218,219,232,234,241,251,253,254,255,271,272,273,274,275,276,278,279,284,285,295,428,478,482,486,489,492,493,494,495,496,497,499,500,501,503,505,506,507,509],user_defined_funct:493,user_metr:[184,185],user_postprocess:[9,32,184,188],userdict:430,uses:[7,9,32,93,181,215,254,472,475,480,499,506,507],using:[0,3,4,6,9,32,42,67,165,166,171,172,215,223,227,233,250,254,275,276,278,279,286,289,356,377,402,406,427,472,474,475,482,486,490,493,500,501,504,507,508],usual:[1,4,38,40,43,68,70,201,219,241,475,478,497],utf:215,util:[221,249,255,300,301,302,304,306,309,313,324,327,333,334,339,341,342,344,352,353,358,360,361,364,368,374,375,383,385,409,412,416,421,425,457,480,481,499],v14:220,v1_6:[6,486],val2017:[202,476],val:[3,70,154,175,203,249,496],val_load:4,val_map:[206,476],val_str:79,valid:[2,7,38,40,68,69,70,77,129,148,203,223,235,249,250,260,395,460,476,478,489,491,499,503],valid_mixed_precis:7,validate_and_inference_input_output:260,validate_graph_nod:260,validate_mac:235,validate_model_list:395,validate_top1:235,valu:[1,3,4,38,40,43,44,67,68,70,78,79,85,90,91,93,113,114,129,148,149,154,163,165,166,171,172,179,181,201,204,205,216,223,227,233,234,248,249,251,263,264,272,273,274,275,276,278,279,284,286,288,289,295,307,309,311,315,317,318,320,322,325,326,330,334,335,356,358,397,426,429,430,434,436,441,443,451,453,454,456,467,472,475,476,482,492,496,499,506,507],valuabl:505,valueerror:[3,13,85,90,91,93,104,129,220,223,227,484],values_from_const:[90,91,93,129],vanilla:[7,489],vari:[218,219,241,253,255,271,272,498,508],variabl:[6,181,203,219,228,234,275,432,456,472,509],varianc:[4,149,163],variat:472,varieti:[483,507],variou:[218,219,228,253,255,272,485,489],vcvtne2ps2bf16:493,vcvtneps2bf16:493,vdpbf16p:493,vector:[232,238,240],verbos:[232,233,234],veri:507,verifi:7,verify_file_path:443,version:[0,1,6,7,40,42,43,69,70,76,171,395,427,432,443,472,474,485,490,491,498,500,507],version_num:[334,335],vertic:[216,248,506],vgg16:[485,508],vgg19:[485,508],vgg:508,via:[0,218,219,241,253,255,271,272,460,474,480,486,489,504],view:[3,6,9,32,472,474,483,485,503,509],viewpoint:[0,474],virtual:[132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,149,153,485],visibl:472,vision:6,visit:[6,508],visual:[505,507],visualizaton:43,vnni:[6,489],vnni_bf16:104,voc:[203,227],vocab:215,vocab_fil:[215,216,506],vocabulari:[201,215,216,506],vocmap:492,vtune:491,w_fp32:[149,163],w_int8:[149,163],wai:[2,202,203,206,472,475,476,492,497,499,507],wait:455,wang:491,want:[1,9,32,90,91,93,129,199,250,285,472,473,476,480,492,496,497,504,505,507],warm:[235,264],warm_pop:234,warmup:444,warmup_iter:313,warmup_step:235,warn:472,was_history_file_chang:413,watcher:413,wave2vec2:508,web:[255,424,425,472,481,505],web_socket:460,web_socket_publish:460,webserv:460,websit:[6,485,490],weight0_nam:[38,40,43,68,70],weight1_nam:[38,68,70],weight:[3,4,6,7,9,32,38,67,68,70,83,84,85,148,149,163,226,227,245,248,250,252,256,260,263,352,471,472,479,481,487,492,496,499,505,507,508,509],weight_empir:149,weight_onli:44,weightcompressionapproach:451,weightcorrect:163,weights_data:352,welcom:[0,474,488],well:[2,3,37,171,172,272,273,274,275,276,278,279,284,476,503],were:227,werkzeug:[460,468],wget:[6,486],what:[0,164,199,255,285,472,474],when:[0,2,4,9,13,32,67,76,87,93,154,177,201,202,209,210,211,212,216,220,221,233,248,249,250,441,443,456,460,472,474,475,476,482,486,499,506,507],where:[38,40,44,67,68,70,223,227,238,240,248,478,482,499,505,507],whether:[7,42,43,44,68,154,179,199,201,216,221,223,227,248,250,295,398,476,492,506],which:[0,2,4,6,7,9,13,32,42,43,68,70,78,129,148,171,179,181,201,202,203,219,220,223,225,233,235,238,239,242,243,244,248,249,250,251,252,260,262,273,274,284,441,472,473,474,475,476,478,480,482,485,486,489,492,493,494,495,497,499,501,503,505,506,507,508,509],white_nod:44,whitelist:505,whitespac:[215,225],whitespace_token:215,who:[0,474],whole:[7,240,458,472,482,508],whose:[9,32,83,108,109,199,249,487,499,507],why:505,wide:[5,483,493],wideresnet40:508,width:[3,179,216,235,248,480,506],width_mult:3,wiki:[0,474],wip:427,wise:[7,70,149,163,248,275,336,339,443,472,475,489,499,505,507],wiseconfig:452,wiseconfigdetail:452,wish:491,within:[0,1,218,219,223,253,255,260,272,275,474,493,500],without:[0,1,9,32,129,154,216,223,250,443,472,474,475,478,480,486,492,499,500,507],wnli:[201,476,492,508],won:1,word:[13,215,220,486,492,508],wordpiec:[215,216,506],wordpiecetoken:215,work:[9,32,218,219,241,253,255,272,475,478,499,501,503,505],workaround:109,workdir:[425,429,433,440],workdir_path:442,workflow:[478,485,490,493,505,509],workload:[255,300,301,302,304,306,309,334,339,399,413,420,425,427,433,442,443,458,461,463,464,465,466,500],workload_directori:301,workloads_list:427,workloadservic:[461,465,466,469],workshop:500,workspac:[272,285,294,333,334,339,341,342,343,373,442,444,453,494],workspace_path:[429,443],world:485,would:[3,129,474,486,493],wrap:[1,70,182,223,307,480],wrapmxnetmetr:227,wraponnxrtmetr:227,wrapper:[98,177,182,183,184,185,186,200,212,214,216,223,227,460,468,501],wrappytorchmetr:227,write:[154,177,209,210,211,212,223,295,480,487,504,505],write_graph:154,writer:505,written:235,writtern:129,wsgi:424,www:[0,203,476,508],x550t:498,x86:[3,493],x_max:275,xeon:[6,485,486,491,493,498,500,501,502,508],xlm:[476,508],xlnet:476,xxx:[203,476,478],xxy:[203,476],xxz:[203,476],y_max:275,yaml:[1,4,7,9,32,68,69,70,164,165,166,171,172,181,190,203,217,218,219,229,230,231,237,238,241,253,254,255,271,272,273,274,275,276,278,279,284,294,295,296,300,301,302,303,304,306,308,309,391,393,400,405,409,412,454,476,478,482,486,487,492,495,496,499,505,506,507],yaml_fil:[295,476,480,492,496],yaml_file_path:480,yaml_path:444,yaml_relative_loc:393,yaml_util:[255,425,433],year:491,yellow:472,yet:[40,43,70,472],yield:[4,171,172,183,184,199,272,273,274,275,276,278,279,284,507],yolo:508,yolov3:508,yolov4:508,you:[1,4,6,7,9,32,199,223,250,472,473,474,475,476,480,481,485,490,491,492,503,504,505,507],your:[6,7,199,223,472,473,474,476,480,491,504,505,507],your_node1_nam:480,your_node2_nam:480,your_script:503,yuan:491,yum:[484,485,490],zero:[4,44,67,216,227,248,250,251,471,499,506,507],zero_grad:[4,478,480,499],zero_point:[3,44,67,262],zero_point_nam:67,zeros_:3,zfnet:508,zhang:491,zip:1,zone:[6,500],zoo:[200,216,508]},titles:["Contributor Covenant Code of Conduct","FX","Neural Architecture Search","PTQ","Quantization-aware Training","Quantization","Intel\u00ae Neural Compressor","Adaptor","Adaptor","API Documentation","APIs","Common","Benchmark","BLEU","Criterion","Data","Dataloader","Datasets","Transforms","Metric","Model","Optimizer","Component(old API)","Distillation","MixedPrecision","ModelConversion","NAS","Pruning","Quantization","Scheduler","Pythonic","strategy","API Documentation","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">6ece06672ed3_v1_14</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">6f0d0f71d92e_v1_13</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">9e89549a08c8_v1_11</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">block_mask</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">env</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.adaptor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.mxnet</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.mxnet_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.mxnet_utils.util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.onnxrt</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.calibration</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.activation</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.argmax</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.attention</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.binary_op</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.concat</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.conv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.direct_q8</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.embed_layernorm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.gather</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.gavgpool</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.gemm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.lstm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.matmul</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.maxpool</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.ops</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.pad</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.pooling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.resize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.operators.split</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.quantizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.ox_utils.util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.pytorch</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.query</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tensorflow</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_converter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_converter_without_calib</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.bf16.bf16_convert</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.bf16</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_add_to_biasadd</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_layout</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_leakyrelu</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_nan_to_random</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.convert_placeholder_to_const</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dequantize_cast_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dilated_contraction</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.dummy_biasadd</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.expanddims_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fetch_weight_from_reshape</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_batch_norm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fold_constant</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_biasadd_add</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_column_wise_mul</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_conv_with_math</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_decomposed_bn</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_decomposed_in</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_gelu</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_layer_norm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_conv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_pad_with_fp32_conv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.fuse_reshape_transpose</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.graph_cse_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.grappler_pass</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.insert_print_node</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.move_squeeze_after_relu</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.pre_optimize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.remove_training_nodes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.rename_batch_norm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.split_shared_input</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_equivalent_nodes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.strip_unused_nodes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.switch_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.generic.update_enter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.graph_base</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_fake_quant</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.freeze_value_without_calib</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_redundant_dequantize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_conv_requantize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_redundant_dequantize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.fuse_matmul_requantize</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.meta_op_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_hostconst_converter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.post_quantized_op_cse</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.rnn_convert</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.int8.scale_propagation</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.qdq</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.insert_qdq_pattern</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.merge_duplicated_qdq</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_rewriter.qdq.share_qdq_y_pattern</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.graph_util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_bn</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_concatv2</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_conv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_deconv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_in</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_matmul</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.fuse_qdq_pooling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.qdq.optimize_qdq</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_base</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_bn</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_concatv2</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_conv</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_for_intel_cpu</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_matmul</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph.quantize_graph_pooling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.quantize_graph_common</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.transform_graph.bias_correction</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.transform_graph.graph_transform_base</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.transform_graph</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.transform_graph.insert_logging</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.transform_graph.rerange_quantized_concat</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.tf_utils.util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.torch_utils.bf16_convert</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.torch_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.torch_utils.onnx</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.torch_utils.symbolic_trace</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.adaptor.torch_utils.util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.algorithm.algorithm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.algorithm.fast_bias_correction</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.algorithm</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.algorithm.weight_correction</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.conf.config</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.conf.dotdict</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.conf</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.conf.pythonic_config</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.contrib</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.contrib.strategy</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.contrib.strategy.sigopt</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.contrib.strategy.tpe</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.dataloaders.dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.dataloaders</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.datasets.imagenet_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.datasets</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.transforms.coco_transform</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.transforms.imagenet_transform</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.data.transforms</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.criterion</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.postprocess</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.common.torch_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.component</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.base_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.default_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.fetcher</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.mxnet_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.onnxrt_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.pytorch_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.sampler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.dataloaders.tensorflow_dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.bert_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.coco_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.dummy_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.dummy_dataset_v2</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.imagenet_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.datasets.style_transfer_dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.filters.coco_filter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.filters.filter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.filters</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.transforms.imagenet_transform</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.transforms</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.transforms.tokenization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.data.transforms.transform</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.distillation</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.graph_optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.bleu</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.bleu_util</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.coco_label_map</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.coco_tools</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.evaluate_squad</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.f1</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.metric.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.mixed_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.model_conversion</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.basic_nas</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynas</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynast.dynas_manager</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynast.dynas_predictor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynast.dynas_search</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynast.dynas_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.dynast</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.nas</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.nas_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.nas.search_algorithms</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pruning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pruning_recipes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pruning_recipes.patterns</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pruning_recipes.patterns.pattern</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pruning_recipes.patterns.tile_pattern</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.logger</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.patterns</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.prune_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.pruner</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.pruning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.pytorch_pruner.scheduler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.quantization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.experimental.scheduler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.mix_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model.base_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model.nets_factory</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model.onnx_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.model.torch_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.objective</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners.gradient_sensitivity</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners.group_lasso</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners.magnitude</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners.pattern_lock</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruners.pruner</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.pruning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.quantization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.auto_mixed_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.basic</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.bayesian</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.exhaustive</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.mse</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.random</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.st_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.st_utils.tuning_sampler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.st_utils.tuning_space</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.st_utils.tuning_structs</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.strategy.strategy</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.training</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.collect_layer_histogram</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.constant</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.create_obj_from_config</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.kl_divergence</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.load_huggingface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.logger</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.options</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.pytorch</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.utils.utility</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.benchmark.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.benchmark.benchmark_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.benchmark.execute_benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.benchmark_config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.graph_optimization_config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.mixed_precision_config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.profiling_config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.config_generator.quantization_config_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.configuration_wizard.configuration_parser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.configuration_wizard.get_boundary_nodes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.configuration_wizard.get_configuration</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.configuration_wizard</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.configuration_wizard.params_feeder</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_manager</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.benchmark_result</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.dataset</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.domain</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.domain_flavour</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.example</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.framework</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.optimization_type</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.profiling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.profiling_result</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.project</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.transform</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.tuning_details</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_models.tuning_history</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.benchmark_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.dataset_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.db_operations</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.diagnosis_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.dictionaries_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.examples_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.model_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.optimization_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.profiling_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.db_operations.project_api_interface</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.params_interfaces</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.db_manager.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.factory</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.onnx_diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.onnx_diagnosis.onnxrt_diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.op_details</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.op_entry</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.tensorflow_diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.diagnosis.tensorflow_diagnosis.tensorflow_diagnosis</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.file_browser.file_browser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.file_browser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.attribute</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.collapser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.edge</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.graph</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.graph_reader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.node</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.reader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.reader.onnxrt_reader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.graph.reader.tensorflow_reader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.jobs_management</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.jobs_management.jobs_control_queue</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.jobs_management.jobs_manager</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.jobs_management.request</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.manage_workspace</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.domain</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.model_type_getter</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.onnxrt</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.onnxrt.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.pytorch</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.pytorch.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.repository</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.shape</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.frozen_pb</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.keras</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.meta_graph</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.saved_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model.tensorflow.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model_zoo.download_config</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model_zoo.download_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model_zoo.downloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model_zoo</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.model_zoo.list_models</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.names_mapper</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.names_mapper.names_mapper</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.execute_optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.factory</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.graph_optimizer.graph_optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.graph_optimizer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.graph_optimizer.optimize_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.mixed_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.mixed_precision.mixed_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.mixed_precision.optimize_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.neural_coder_optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.neural_coder_optimization.optimize_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.tune</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.tune.tune_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.tune.tuning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.optimization.tuning_history</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.execute_profiling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.factory</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.profile_model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.profiler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.profiling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.tensorflow_profiler.factory</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.tensorflow_profiler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.tensorflow_profiler.profiler</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.components.profiling.tensorflow_profiler.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.inc_bench</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.consts</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.environment</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.exceptions</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.executor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.expiring_dict</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.github_info</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.hw_info</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.json_serializer</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.logger</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.parser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.proc</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.processes</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.singleton</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.templates</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.templates.metric</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.templates.workdir</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.config</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.dataloader</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.evaluation</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.graph_optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.mixed_precision</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.pruning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.quantization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.workload.tuning</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.utils.yaml_utils</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.communication</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.configuration</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.exceptions</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.router</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.server</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.benchmark</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.history_snapshot_parser</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.model</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.optimization</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.profiling</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.request_data_processor</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.response_generator</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.ux.web.service.workload</span></code>","<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">neural_compressor.version</span></code>","Quantization Support Matrix","Intel\u00ae Neural Compressor Bench","Benchmarking","Contribution Guidelines","DataLoader","Dataset","Design","Distillation","Distillation for Quantization","Distributed Training and Inference (Evaluation)","Developer Documentation","Dynamic Quantization","Examples","Frequently Asked Questions","Getting Started","Graph Optimization","Incompatible changes between v1.2 and v1.1","Intel\u00ae Neural Compressor Documentation","Infrastructure of Intel\u00ae Neural Compressor","Installation","Legal Information","Metrics","Mixed Precision","Model","Model Conversion","Objective","Optimization Orchestration","SYSTEM CONFIGURATION","Pruning","Full Publications/Events (44)","Turn ON Auto Mixed Precision during Quantization","Reference Examples","Release","SigOpt Strategy","TensorBoard","Transform","Tuning Strategies","Validated Models","Introduction to Intel\u00ae Neural Compressor"],titleterms:{"2018":500,"2020":500,"2021":500,"2022":500,"6ece06672ed3_v1_14":33,"6f0d0f71d92e_v1_13":34,"9e89549a08c8_v1_11":35,"class":[13,26,38,40,42,43,44,67,68,69,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,152,153,160,161,162,163,164,165,166,168,171,172,173,174,175,177,178,179,181,182,183,184,185,186,187,188,190,191,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,226,227,228,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,248,250,251,252,253,254,255,256,258,259,260,262,263,264,271,272,273,274,275,276,278,279,284,285,286,289,290,295,296,299,300,301,302,304,305,306,307,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,347,348,351,352,353,355,358,359,360,361,362,364,366,367,374,376,379,381,382,383,384,386,387,388,389,393,397,399,400,403,405,409,412,413,415,418,419,420,422,426,427,429,430,431,432,434,436,437,438,439,441,442,444,445,446,447,449,450,451,452,453,455,456,459,461,462,464,465,466,467,468,469],"const":426,"default":[9,32,486],"function":[3,33,37,38,42,61,67,68,90,91,93,154,159,160,162,166,177,181,182,184,187,193,203,207,210,211,212,214,215,216,220,221,223,224,225,226,227,235,239,244,248,249,250,252,256,260,264,270,272,275,284,285,288,294,295,297,298,307,308,309,311,315,317,318,320,322,325,326,330,333,334,335,346,356,373,377,379,390,391,392,395,398,402,406,408,411,413,414,417,423,424,432,435,443,451,454,455,459,460,480],"new":[7,472,507],"public":[6,500],"static":[1,5],NAS:[2,26],One:497,Use:473,accuraci:5,activ:[5,46],adaptor:[7,8,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],addit:[5,6],advanc:[2,481],ahead:5,algorithm:[160,161,162,163],alreadi:5,api:[2,6,7,9,10,22,32,478,487,492,493,496,497,499],architectur:[2,3,6,477,489],argmax:47,ask:484,attent:48,attribut:[0,177,203,212,219,242,259,358,474],auto:[486,501],auto_mixed_precis:273,awar:[1,4,5],backend:7,background:7,base:[5,6],base_dataload:191,base_model:258,basedataload:16,basic:[2,274,507],basic_na:230,bayesian:[275,507],bench:472,benchmark:[9,12,32,164,181,296,297,298,299,313,461,472,473],benchmark_api_interfac:333,benchmark_config_gener:300,benchmark_model:297,benchmark_result:314,benefit:504,bert_dataset:201,between:487,bf16:[73,74],bf16_convert:[73,155],bias_correct:149,binari:[472,485,490],binary_op:49,bleu:[13,220],bleu_util:221,block_mask:36,build:[484,492],built:[6,476,487,492],calibr:[5,44],chang:[487,503],checklist:474,citat:491,coco_dataset:202,coco_filt:209,coco_label_map:222,coco_tool:223,coco_transform:178,code:[0,2,474],collaps:359,collect_layer_histogram:286,common:[1,11,182,183,184,185,186,187,188,189,484],commun:455,compar:5,comparison:504,compat:6,compon:[22,190,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],compressor:[6,472,488,489,504,509],concat:50,conduct:[0,474],conf:[165,166,167,168],config:[7,165,444,473,475,496],config_gener:[300,301,302,303,304,305,306],configur:[456,480,498,504,507],configuration_pars:307,configuration_wizard:[307,308,309,310,311],constant:287,content:[6,13,26,33,37,38,39,40,42,43,44,57,61,67,68,69,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,152,153,154,159,160,161,162,163,164,165,166,168,171,172,173,174,175,177,178,179,181,182,183,184,185,186,187,188,190,191,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,248,249,250,251,252,253,254,255,256,258,259,260,262,263,264,267,270,271,272,273,274,275,276,277,278,279,284,285,286,288,289,290,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,351,352,353,355,356,358,359,360,361,362,364,366,367,373,374,376,377,379,381,382,383,384,386,387,388,389,390,391,392,393,395,397,398,399,400,402,403,405,406,408,409,411,412,413,414,415,417,418,419,420,422,423,424,426,427,428,429,430,431,432,434,435,436,437,438,439,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,459,460,461,462,464,465,466,467,468,469,472],contrib:[169,170,171,172],contribut:474,contributor:[0,474],conv:51,convers:495,convert_add_to_biasadd:75,convert_layout:76,convert_leakyrelu:77,convert_nan_to_random:78,convert_placeholder_to_const:79,coven:[0,474],cpu:[6,508],creat:[472,475],create_obj_from_config:288,criteria:499,criterion:[14,182],custom:[2,7,472,492,496,507],data:[5,15,173,174,175,176,177,178,179,180,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],dataload:[16,173,174,183,191,192,193,194,195,196,197,198,199,200,315,445,473,475],dataset:[5,17,175,176,201,202,203,204,205,206,207,208,316,472,476,487],dataset_api_interfac:334,db_manag:[312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],db_model:[313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],db_oper:[333,334,335,336,337,338,339,340,341,342,343],deep:481,default_dataload:193,defin:[479,480],deploy:5,dequantize_cast_optim:80,design:[3,4,7,477,505,507],detail:[1,472],determin:5,develop:[472,481,485],diagnosi:[347,348,349,350,351,352,353,354,355,472],diagnosis_api_interfac:336,dictionaries_api_interfac:337,differ:504,dilated_contract:81,direct_q8:52,displai:472,distil:[23,217,478,479,508],distribut:480,dive:481,document:[6,9,32,481,485,488],domain:[317,374],domain_flavour:318,dotdict:166,download:393,download_config:391,download_model:392,dummy_biasadd:82,dummy_dataset:204,dummy_dataset_v2:205,dure:[5,501],dyna:231,dynam:[1,2,5,482],dynas_manag:232,dynas_predictor:233,dynas_search:234,dynas_util:235,dynast:[232,233,234,235,236],edg:360,edit:472,embed_layernorm:53,enforc:[0,474],entri:472,env:37,environ:[6,427,485],evalu:[446,473,480],evaluate_squad:224,event:[6,500],exampl:[2,3,4,5,319,473,478,479,480,483,485,486,493,494,496,497,499,502,505,508],examples_api_interfac:338,except:[428,457],execute_benchmark:298,execute_optim:398,execute_profil:414,executor:429,exhaust:[276,507],expanddims_optim:83,experiment:[9,32,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],expiring_dict:430,extens:[6,508],face:[9,32,487],factor:5,factori:[348,399,415,420],fast_bias_correct:161,featur:489,fetch_weight_from_reshap:84,fetcher:194,file:[473,475],file_brows:[356,357],filter:[209,210,211],fold_batch_norm:85,fold_const:86,follow:480,fp32:486,framework:[7,320,494],freeze_fake_qu:112,freeze_valu:113,freeze_value_without_calib:114,frequent:484,from:[472,485,490],frozen_pb:384,full:500,fuse_biasadd_add:87,fuse_column_wise_mul:88,fuse_conv_redundant_dequant:115,fuse_conv_requant:116,fuse_conv_with_math:89,fuse_decomposed_bn:90,fuse_decomposed_in:91,fuse_gelu:92,fuse_layer_norm:93,fuse_matmul_redundant_dequant:117,fuse_matmul_requant:118,fuse_pad_with_conv:94,fuse_pad_with_fp32_conv:95,fuse_qdq_bn:132,fuse_qdq_concatv2:133,fuse_qdq_conv:134,fuse_qdq_deconv:135,fuse_qdq_in:136,fuse_qdq_matmul:137,fuse_qdq_pool:138,fuse_reshape_transpos:96,gather:54,gavgpool:55,gemm:56,gener:[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],get:[6,478,481,485,492,493,496,497,499],get_boundary_nod:308,get_configur:309,github_info:431,gpu:6,gradient_sensit:265,graph:[358,359,360,361,362,363,364,365,366,367,472,486],graph_bas:110,graph_convert:71,graph_converter_without_calib:72,graph_cse_optim:97,graph_optim:[218,400,401,402,447],graph_optimization_config_gener:302,graph_read:362,graph_rewrit:[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],graph_transform_bas:150,graph_util:129,grappler_pass:98,group_lasso:266,gui:6,guidelin:474,hardwar:[6,485,508],helper:3,higher:5,hire:6,history_snapshot_pars:462,home:472,horovod:480,horovodrun:480,how:[475,486,495],hw_info:432,hyper:5,imagenet_dataset:[175,206],imagenet_transform:[179,213],inc_bench:424,incompat:[487,503],infer:[5,480],inform:[472,491],infrastructur:489,input:5,insert_log:152,insert_print_nod:100,insert_qdq_pattern:126,instal:[6,472,480,485,490],int8:[112,113,114,115,116,117,118,119,120,121,122,123,124,508],intel:[6,472,488,489,508,509],intermedi:478,introduct:[2,7,9,32,472,478,479,480,486,489,492,493,494,495,496,497,499,504,505,507,509],ipex:471,issu:[484,503],jobs_control_queu:370,jobs_manag:[369,370,371,372],json_seri:434,jupyterlab:6,kera:386,kit:[485,490],kl_diverg:290,knowledg:[478,508],known:503,layer:478,legal:491,licens:491,linux:[6,485,490],list:[472,476,506],list_model:395,load_huggingfac:291,logger:[247,292,435],lstm:58,magnitud:268,mai:5,manage_workspac:373,matmul:59,matrix:[5,471,478,489,492,493,494,496,497,499],maxpool:60,merge_duplicated_qdq:127,meta_graph:387,meta_op_optim:120,metric:[19,185,220,221,222,223,224,225,226,227,256,322,441,487,492],mix:[486,493,501],mix_precis:257,mixed_precis:[228,404,405,406,449],mixed_precision_config_gener:304,mixedprecis:24,mlperf:508,mobilenetv2:3,mode:508,model:[3,5,6,20,186,258,259,260,261,262,263,323,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,450,464,472,485,494,495,502,507,508],model_api_interfac:340,model_convers:229,model_type_gett:377,model_zoo:[391,392,393,394,395],modelconvers:25,modul:[13,33,37,38,40,42,43,44,61,67,68,69,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,126,127,128,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,152,153,154,159,160,161,163,164,165,166,168,171,172,173,175,178,179,181,182,183,185,186,187,188,190,191,193,196,197,198,199,200,201,202,203,204,205,206,208,209,210,213,215,216,217,218,220,221,223,224,225,227,228,229,230,231,232,233,234,235,238,239,240,241,244,245,248,249,250,251,252,253,254,258,260,262,263,264,270,271,272,273,274,275,276,278,279,284,285,286,288,290,294,295,296,297,298,300,301,302,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,348,351,352,353,355,356,358,359,360,361,362,364,366,367,373,374,376,377,379,381,382,383,384,386,387,388,389,390,391,392,393,395,397,398,399,400,402,405,406,408,409,411,412,413,414,415,417,418,419,420,422,423,424,426,427,428,429,430,431,432,434,435,436,437,438,439,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,459,460,461,462,464,465,466,467,468,469],more:5,move_squeeze_after_relu:101,mse:[278,507],multi:[492,497],multipl:[6,496,508],multipli:5,mxnet:[40,471,476,492,506,508],mxnet_dataload:196,mxnet_util:[41,42],names_mapp:[396,397],nas:[230,231,232,233,234,235,236,237,238,239,240],nas_util:239,nearest:5,nets_factori:261,network:499,neural:[2,6,472,488,489,499,504,509],neural_coder_optim:[407,408],neural_compressor:[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],node:364,note:1,object:[264,496],observ:5,old:22,onli:[2,5],onnx:[6,157,471,508],onnx_diagnosi:[350,351],onnx_model:262,onnxrt:[43,378,379,476,492,506],onnxrt_dataload:197,onnxrt_diagnosi:351,onnxrt_read:366,op_detail:352,op_entri:353,oper:[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],ops:61,optim:[21,187,324,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,465,472,486,497],optimization_api_interfac:341,optimization_typ:325,optimize_model:[402,406,408],optimize_qdq:140,option2:480,option:[293,472,480,490],orchestr:497,our:[0,474],over:5,overview:1,ox_util:[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],packag:[26,39,57,162,174,177,184,195,207,211,212,214,219,226,237,242,243,255,256,259,267,277,289,299,339,344,403],pad:62,paramet:5,params_feed:311,params_interfac:345,parser:436,part:507,pass:5,pattern:[243,244,245,248,499],pattern_lock:269,perform:[5,504],pledg:[0,474],poc:[9,32],pool:63,post:5,post_hostconst_convert:121,post_quantized_op_cs:122,postprocess:188,pre_optim:102,precis:[326,486,493,501],predefin:472,prepar:504,prerequisit:[6,490],problem:1,proc:437,process:438,processor:6,profil:[327,414,415,416,417,418,419,420,421,422,423,466,472],profile_model:417,profiling_api_interfac:342,profiling_config_gener:305,profiling_result:328,project:[329,472],project_api_interfac:343,provid:5,prune:[9,27,32,241,251,271,451,499,508],prune_util:249,pruner:[250,265,266,267,268,269,270],pruning_recip:[242,243,244,245],ptq:[3,508],pull:474,pure:480,python:[2,6,30,492],pythonic_config:168,pytorch:[3,68,294,380,381,471,476,492,501,505,506,508],pytorch_dataload:198,pytorch_prun:[246,247,248,249,250,251,252],qat:[5,508],qdq:[125,126,127,128,132,133,134,135,136,137,138,139,140,508],quantiz:[1,4,5,6,9,28,32,66,253,272,452,471,479,482,501,508],quantization_config_gener:306,quantize_graph:[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],quantize_graph_bas:141,quantize_graph_bn:142,quantize_graph_common:148,quantize_graph_concatv2:143,quantize_graph_conv:144,quantize_graph_for_intel_cpu:145,quantize_graph_matmul:146,quantize_graph_pool:147,queri:[7,69],question:484,random:[279,507],rang:5,reader:[365,366,367],refer:[471,502],relat:[9,32,507],releas:503,remov:472,remove_training_nod:103,rename_batch_norm:104,repositori:382,request:[372,474],request_data_processor:467,requir:[5,6,485],rerange_quantized_concat:153,resiz:64,respons:[0,474],response_gener:468,result:5,rnn_convert:123,round:5,router:459,run:473,runtim:[5,6,471,508],sampler:199,saved_model:389,scale:5,scale_propag:124,schedul:[29,252,254,499],scope:[0,474],screen:472,search:2,search_algorithm:240,section:488,secur:[472,480],select:6,self:478,server:460,servic:[461,462,463,464,465,466,467,468,469],shape:383,share_qdq_y_pattern:128,shot:497,sigopt:[171,504,507],simpli:5,singl:[492,496],singleton:439,softwar:[6,485],sourc:[472,485,490],specif:[473,475,476,507],split:65,split_shared_input:105,st_util:[280,281,282,283],standard:[0,474],start:[6,472,478,481,485,492,493,496,497,499],strategi:[31,170,171,172,273,274,275,276,277,278,279,280,281,282,283,284,504,507],strip_equivalent_nod:106,strip_unused_nod:107,style_transfer_dataset:208,submodul:[184,195,207,214,219,226,236,237,243,246,289,299,303,310,321,339,344,349,350,354,357,363,365,368,369,375,378,380,385,394,396,401,403,404,407,410,416,421,425,433,440,448,458,463],subpackag:[212,219,237,242,255,344,349,363,368,375,403,416,425,433,458],support:[5,6,471,474,476,478,480,489,492,493,494,496,497,499,506],switch_optim:108,symbolic_trac:158,system:[6,472,485,498],tab:472,tabl:472,take:5,templat:[440,441,442,474],tensorboard:505,tensorflow:[70,384,385,386,387,388,389,390,471,476,492,501,505,506,508],tensorflow_dataload:200,tensorflow_diagnosi:[354,355],tensorflow_profil:[420,421,422,423],tensorflow_read:367,tf_util:[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],through:[6,508],tile_pattern:245,time:5,token:215,topic:481,torch:508,torch_model:263,torch_util:[155,156,157,158,159,189],tpe:[172,507],trademark:491,train:[1,4,5,285,480],transform:[18,178,179,180,213,214,215,216,330,487,506],transform_graph:[149,150,151,152,153],tune:[5,410,411,412,453,486,507],tune_model:411,tuning_detail:331,tuning_histori:[332,413],tuning_sampl:281,tuning_spac:282,tuning_struct:283,turn:501,typic:5,unifi:7,update_ent:109,usag:[1,2,3,4,505,507],use:[475,486,495],user:[9,32,473,475,476,479,480,487],util:[42,67,154,159,286,287,288,289,290,291,292,293,294,295,346,390,423,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454],valid:[6,485,502,508],valu:5,vendor:6,version:470,web:[455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],weight:5,weight_correct:163,window:[485,490],wizard:472,work:5,workdir:442,workflow:477,workload:[444,445,446,447,448,449,450,451,452,453,469],yaml:[2,473,475,479,480],yaml_util:454}})